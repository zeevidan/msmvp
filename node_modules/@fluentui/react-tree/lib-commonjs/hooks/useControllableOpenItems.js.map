{"version":3,"sources":["../src/hooks/useControllableOpenItems.ts"],"sourcesContent":["import { useControllableState } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { ImmutableSet } from '../utils/ImmutableSet';\nimport type { TreeItemValue } from '../components/TreeItem/TreeItem.types';\nimport { TreeOpenChangeData, TreeProps } from '../Tree';\n\n/**\n * @internal\n */\nexport function useControllableOpenItems(props: Pick<TreeProps, 'openItems' | 'defaultOpenItems'>) {\n  return useControllableState({\n    state: React.useMemo(() => props.openItems && ImmutableSet.from(props.openItems), [props.openItems]),\n    defaultState: props.defaultOpenItems && (() => ImmutableSet.from(props.defaultOpenItems)),\n    initialState: ImmutableSet.empty,\n  });\n}\n\n/**\n * @internal\n */\nexport function createNextOpenItems(\n  data: Pick<TreeOpenChangeData, 'value' | 'open'>,\n  previousOpenItems: ImmutableSet<TreeItemValue>,\n): ImmutableSet<TreeItemValue> {\n  return data.open ? previousOpenItems.add(data.value) : previousOpenItems.delete(data.value);\n}\n"],"names":["createNextOpenItems","useControllableOpenItems","props","useControllableState","state","React","useMemo","openItems","ImmutableSet","from","defaultState","defaultOpenItems","initialState","empty","data","previousOpenItems","open","add","value","delete"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAoBgBA,mBAAAA;eAAAA;;IAXAC,wBAAAA;eAAAA;;;;gCATqB;iEACd;8BACM;AAOtB,SAASA,yBAAyBC,KAAwD;IAC/F,OAAOC,IAAAA,oCAAAA,EAAqB;QAC1BC,OAAOC,OAAMC,OAAO,CAAC,IAAMJ,MAAMK,SAAS,IAAIC,0BAAAA,CAAaC,IAAI,CAACP,MAAMK,SAAS,GAAG;YAACL,MAAMK,SAAS;SAAC;QACnGG,cAAcR,MAAMS,gBAAgB,IAAK,CAAA,IAAMH,0BAAAA,CAAaC,IAAI,CAACP,MAAMS,gBAAgB,CAAA;QACvFC,cAAcJ,0BAAAA,CAAaK,KAAK;IAClC;AACF;AAKO,SAASb,oBACdc,IAAgD,EAChDC,iBAA8C;IAE9C,OAAOD,KAAKE,IAAI,GAAGD,kBAAkBE,GAAG,CAACH,KAAKI,KAAK,IAAIH,kBAAkBI,MAAM,CAACL,KAAKI,KAAK;AAC5F"}