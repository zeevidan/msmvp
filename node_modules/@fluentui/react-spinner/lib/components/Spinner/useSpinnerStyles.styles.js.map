{"version":3,"names":["useFluent_unstable","useFluent","tokens","typographyStyles","__resetStyles","__styles","mergeClasses","spinnerClassNames","root","spinner","spinnerTail","label","vars","strokeWidth","useRootBaseClassName","useRootStyles","vertical","Beiy3e4","d","useSpinnerBaseClassName","r","s","useSpinnerTailBaseClassName","useSpinnerStyles","inverted","De3pzq","sj55zd","rtlTail","btxmck","gb5jj2","Br2kee7","Bqenvij","a9b677","qmp6fs","tiny","small","medium","large","huge","m","useLabelStyles","Bahqtrf","Be2twd7","Bhrd7zp","Bg96gwp","useSpinnerStyles_unstable","state","labelPosition","size","appearance","dir","rootBaseClassName","rootStyles","spinnerBaseClassName","spinnerStyles","spinnerTailBaseClassName","labelStyles","className"],"sources":["useSpinnerStyles.styles.js"],"sourcesContent":["import { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nexport const spinnerClassNames = {\n    root: 'fui-Spinner',\n    spinner: 'fui-Spinner__spinner',\n    spinnerTail: 'fui-Spinner__spinnerTail',\n    label: 'fui-Spinner__label'\n};\n/**\n * CSS variables used internally by Spinner\n */ const vars = {\n    strokeWidth: '--fui-Spinner--strokeWidth'\n};\nconst useRootBaseClassName = makeResetStyles({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    lineHeight: '0',\n    gap: '8px',\n    overflow: 'hidden'\n});\nconst useRootStyles = makeStyles({\n    vertical: {\n        flexDirection: 'column'\n    }\n});\nconst useSpinnerBaseClassName = makeResetStyles({\n    position: 'relative',\n    flexShrink: 0,\n    // Use a mask to create the ring shape of the spinner.\n    maskImage: `radial-gradient(closest-side, ` + `transparent calc(100% - var(${vars.strokeWidth}) - 1px), ` + `white calc(100% - var(${vars.strokeWidth})) calc(100% - 1px), ` + `transparent 100%)`,\n    backgroundColor: tokens.colorBrandStroke2Contrast,\n    color: tokens.colorBrandStroke1,\n    '@media screen and (forced-colors: active)': {\n        backgroundColor: 'HighlightText',\n        color: 'Highlight',\n        forcedColorAdjust: 'none'\n    },\n    animationDuration: '1.5s',\n    animationIterationCount: 'infinite',\n    animationTimingFunction: 'linear',\n    animationName: {\n        '0%': {\n            transform: 'rotate(0deg)'\n        },\n        '100%': {\n            transform: 'rotate(360deg)'\n        }\n    },\n    '@media screen and (prefers-reduced-motion: reduce)': {\n        animationDuration: '1.8s'\n    }\n});\n// The spinner tail is rendered using two 135deg arc segments, behind a 105deg arc mask.\n// The segments are rotated out from behind the mask to expand the visible arc from\n// 30deg (min) to 255deg (max), and then back behind the mask again to shrink the arc.\n// The tail and spinner itself also have 360deg rotation animations for the spin.\nconst useSpinnerTailBaseClassName = makeResetStyles({\n    position: 'absolute',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    maskImage: 'conic-gradient(transparent 105deg, white 105deg)',\n    '&::before, &::after': {\n        content: '\"\"',\n        position: 'absolute',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        animation: 'inherit',\n        backgroundImage: 'conic-gradient(currentcolor 135deg, transparent 135deg)'\n    },\n    animationDuration: '1.5s',\n    animationIterationCount: 'infinite',\n    animationTimingFunction: tokens.curveEasyEase,\n    animationName: {\n        '0%': {\n            transform: 'rotate(-135deg)'\n        },\n        '50%': {\n            transform: 'rotate(0deg)'\n        },\n        '100%': {\n            transform: 'rotate(225deg)'\n        }\n    },\n    '&::before': {\n        animationName: {\n            '0%': {\n                transform: 'rotate(0deg)'\n            },\n            '50%': {\n                transform: 'rotate(105deg)'\n            },\n            '100%': {\n                transform: 'rotate(0deg)'\n            }\n        }\n    },\n    '&::after': {\n        animationName: {\n            '0%': {\n                transform: 'rotate(0deg)'\n            },\n            '50%': {\n                transform: 'rotate(225deg)'\n            },\n            '100%': {\n                transform: 'rotate(0deg)'\n            }\n        }\n    },\n    '@media screen and (prefers-reduced-motion: reduce)': {\n        animationIterationCount: '0',\n        backgroundImage: 'conic-gradient(transparent 120deg, currentcolor 360deg)',\n        '&::before, &::after': {\n            content: 'none'\n        }\n    }\n});\nconst useSpinnerStyles = makeStyles({\n    inverted: {\n        backgroundColor: tokens.colorNeutralStrokeAlpha2,\n        color: tokens.colorNeutralStrokeOnBrand2\n    },\n    rtlTail: {\n        maskImage: 'conic-gradient(white 255deg, transparent 255deg)',\n        '&::before, &::after': {\n            backgroundImage: 'conic-gradient(transparent 225deg, currentcolor 225deg)'\n        },\n        '@media screen and (prefers-reduced-motion: reduce)': {\n            backgroundImage: 'conic-gradient(currentcolor 0deg, transparent 240deg)'\n        }\n    },\n    'extra-tiny': {\n        height: '16px',\n        width: '16px',\n        [vars.strokeWidth]: tokens.strokeWidthThick\n    },\n    tiny: {\n        height: '20px',\n        width: '20px',\n        [vars.strokeWidth]: tokens.strokeWidthThick\n    },\n    'extra-small': {\n        height: '24px',\n        width: '24px',\n        [vars.strokeWidth]: tokens.strokeWidthThick\n    },\n    small: {\n        height: '28px',\n        width: '28px',\n        [vars.strokeWidth]: tokens.strokeWidthThick\n    },\n    medium: {\n        height: '32px',\n        width: '32px',\n        [vars.strokeWidth]: tokens.strokeWidthThicker\n    },\n    large: {\n        height: '36px',\n        width: '36px',\n        [vars.strokeWidth]: tokens.strokeWidthThicker\n    },\n    'extra-large': {\n        height: '40px',\n        width: '40px',\n        [vars.strokeWidth]: tokens.strokeWidthThicker\n    },\n    huge: {\n        height: '44px',\n        width: '44px',\n        [vars.strokeWidth]: tokens.strokeWidthThickest\n    }\n});\nconst useLabelStyles = makeStyles({\n    inverted: {\n        color: tokens.colorNeutralForegroundStaticInverted\n    },\n    'extra-tiny': {\n        ...typographyStyles.body1\n    },\n    tiny: {\n        ...typographyStyles.body1\n    },\n    'extra-small': {\n        ...typographyStyles.body1\n    },\n    small: {\n        ...typographyStyles.body1\n    },\n    medium: {\n        ...typographyStyles.subtitle2\n    },\n    large: {\n        ...typographyStyles.subtitle2\n    },\n    'extra-large': {\n        ...typographyStyles.subtitle2\n    },\n    huge: {\n        ...typographyStyles.subtitle1\n    }\n});\n/**\n * Apply styling to the Spinner slots based on the state\n */ export const useSpinnerStyles_unstable = (state)=>{\n    'use no memo';\n    const { labelPosition, size, appearance } = state;\n    const { dir } = useFluent();\n    const rootBaseClassName = useRootBaseClassName();\n    const rootStyles = useRootStyles();\n    const spinnerBaseClassName = useSpinnerBaseClassName();\n    const spinnerStyles = useSpinnerStyles();\n    const spinnerTailBaseClassName = useSpinnerTailBaseClassName();\n    const labelStyles = useLabelStyles();\n    state.root.className = mergeClasses(spinnerClassNames.root, rootBaseClassName, (labelPosition === 'above' || labelPosition === 'below') && rootStyles.vertical, state.root.className);\n    if (state.spinner) {\n        state.spinner.className = mergeClasses(spinnerClassNames.spinner, spinnerBaseClassName, spinnerStyles[size], appearance === 'inverted' && spinnerStyles.inverted, state.spinner.className);\n    }\n    if (state.spinnerTail) {\n        state.spinnerTail.className = mergeClasses(spinnerClassNames.spinnerTail, spinnerTailBaseClassName, dir === 'rtl' && spinnerStyles.rtlTail, state.spinnerTail.className);\n    }\n    if (state.label) {\n        state.label.className = mergeClasses(spinnerClassNames.label, labelStyles[size], appearance === 'inverted' && labelStyles.inverted, state.label.className);\n    }\n    return state;\n};\n"],"mappings":"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","ignoreList":[]}