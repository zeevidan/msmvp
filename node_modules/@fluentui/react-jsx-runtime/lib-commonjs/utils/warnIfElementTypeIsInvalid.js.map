{"version":3,"sources":["../src/utils/warnIfElementTypeIsInvalid.ts"],"sourcesContent":["import * as React from 'react';\nimport { isValidElementType } from 'react-is';\n\nexport function warnIfElementTypeIsInvalid(type: React.ElementType) {\n  if (process.env.NODE_ENV === 'development' && typeof type === 'object' && !isValidElementType(type)) {\n    // eslint-disable-next-line no-console\n    console.error(/** #__DE-INDENT__ */ `\n        @fluentui/react-jsx-runtime:\n        Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: ${type}.\n\n        If this happened in a slot of Fluent UI component, you might be facing package resolution issues.\n        Please make sure you don't have multiple versions of \"@fluentui/react-utilities\" installed in your dependencies or sub-dependencies.\n        You can check this by searching up for matching entries in a lockfile produced by your package manager (yarn.lock, pnpm-lock.yaml or package-lock.json).\n      `);\n  }\n}\n"],"names":["warnIfElementTypeIsInvalid","type","process","env","NODE_ENV","isValidElementType","console","error"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAGgBA;;;eAAAA;;;;iEAHO;yBACY;AAE5B,SAASA,2BAA2BC,IAAuB;IAChE,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,iBAAiB,OAAOH,SAAS,YAAY,CAACI,IAAAA,2BAAkB,EAACJ,OAAO;QACnG,sCAAsC;QACtCK,QAAQC,KAAK,CAAuB,CAAC;6HAE4F,EAAEN,KAAK;;;;wJAKtI,CAAC;IACL;AACF"}