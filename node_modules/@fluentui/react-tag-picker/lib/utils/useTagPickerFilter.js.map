{"version":3,"sources":["../src/utils/useTagPickerFilter.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TagPickerOption } from '../TagPickerOption';\n\ntype UseTagPickerFilterConfig = {\n  query: string;\n  options: string[];\n  /**\n   * Provides a custom filter for the option.\n   * By default the filter will check if the option includes the query.\n   */\n  filter?: (option: string, index: number) => boolean;\n\n  /** Provides an element to be displayed when there are no options. */\n  noOptionsElement: JSX.Element;\n\n  /** Provides a custom render for the option. */\n  renderOption?: (option: string) => JSX.Element;\n};\n\nfunction defaultRenderOption(option: string) {\n  return (\n    <TagPickerOption value={option} key={option}>\n      {option}\n    </TagPickerOption>\n  );\n}\n\nexport function useTagPickerFilter({\n  filter: filterOverride,\n  noOptionsElement,\n  renderOption = defaultRenderOption,\n  query,\n  options,\n}: UseTagPickerFilterConfig) {\n  const defaultFilter = React.useCallback(\n    (option: string) => {\n      const trimmedQuery = query.trim();\n      if (trimmedQuery === '') {\n        return true;\n      }\n      return option.toLowerCase().includes(trimmedQuery.toLowerCase());\n    },\n    [query],\n  );\n  const filter = filterOverride ?? defaultFilter;\n  const filteredOptions = React.useMemo(\n    () =>\n      options.reduce<JSX.Element[]>((accumulator, option, index) => {\n        if (filter(option, index)) {\n          accumulator.push(renderOption(option));\n        }\n        return accumulator;\n      }, []),\n    [options, renderOption, filter],\n  );\n\n  return filteredOptions.length === 0\n    ? [noOptionsElement.key ? noOptionsElement : React.cloneElement(noOptionsElement, { key: 'no-options' })]\n    : filteredOptions;\n}\n"],"names":["React","TagPickerOption","defaultRenderOption","option","value","key","useTagPickerFilter","filter","filterOverride","noOptionsElement","renderOption","query","options","defaultFilter","useCallback","trimmedQuery","trim","toLowerCase","includes","filteredOptions","useMemo","reduce","accumulator","index","push","length","cloneElement"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,eAAe,QAAQ,qBAAqB;AAkBrD,SAASC,oBAAoBC,MAAc;IACzC,qBACE,oBAACF;QAAgBG,OAAOD;QAAQE,KAAKF;OAClCA;AAGP;AAEA,OAAO,SAASG,mBAAmB,EACjCC,QAAQC,cAAc,EACtBC,gBAAgB,EAChBC,eAAeR,mBAAmB,EAClCS,KAAK,EACLC,OAAO,EACkB;IACzB,MAAMC,gBAAgBb,MAAMc,WAAW,CACrC,CAACX;QACC,MAAMY,eAAeJ,MAAMK,IAAI;QAC/B,IAAID,iBAAiB,IAAI;YACvB,OAAO;QACT;QACA,OAAOZ,OAAOc,WAAW,GAAGC,QAAQ,CAACH,aAAaE,WAAW;IAC/D,GACA;QAACN;KAAM;IAET,MAAMJ,SAASC,2BAAAA,4BAAAA,iBAAkBK;IACjC,MAAMM,kBAAkBnB,MAAMoB,OAAO,CACnC,IACER,QAAQS,MAAM,CAAgB,CAACC,aAAanB,QAAQoB;YAClD,IAAIhB,OAAOJ,QAAQoB,QAAQ;gBACzBD,YAAYE,IAAI,CAACd,aAAaP;YAChC;YACA,OAAOmB;QACT,GAAG,EAAE,GACP;QAACV;QAASF;QAAcH;KAAO;IAGjC,OAAOY,gBAAgBM,MAAM,KAAK,IAC9B;QAAChB,iBAAiBJ,GAAG,GAAGI,iCAAmBT,MAAM0B,YAAY,CAACjB,kBAAkB;YAAEJ,KAAK;QAAa;KAAG,GACvGc;AACN"}