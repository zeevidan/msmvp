{"version":3,"sources":["useTagPickerOptionStyles.styles.js"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { useOptionStyles_unstable } from '@fluentui/react-combobox';\nimport { typographyStyles } from '@fluentui/react-theme';\nexport const tagPickerOptionClassNames = {\n    root: 'fui-TagPickerOption',\n    media: 'fui-TagPickerOption__media',\n    secondaryContent: 'fui-TagPickerOption__secondaryContent'\n};\nconst useRootBaseStyle = makeResetStyles({\n    display: 'flex',\n    alignItems: 'center'\n});\nconst useRootStyles = makeStyles({\n    secondaryContent: {\n        display: 'grid',\n        gridTemplateColumns: 'auto 1fr'\n    }\n});\nconst useSecondaryContentBaseStyle = makeResetStyles({\n    gridColumnStart: 2,\n    gridRowStart: 2,\n    ...typographyStyles.caption1\n});\nconst useMediaBaseStyle = makeResetStyles({\n    gridRowStart: 'span 2'\n});\n/**\n * Apply styling to the TagPickerOption slots based on the state\n */ export const useTagPickerOptionStyles_unstable = (state)=>{\n    'use no memo';\n    const rootBaseStyle = useRootBaseStyle();\n    const rootStyles = useRootStyles();\n    const secondaryContentBaseStyle = useSecondaryContentBaseStyle();\n    const mediaBaseStyle = useMediaBaseStyle();\n    state.root.className = mergeClasses(tagPickerOptionClassNames.root, rootBaseStyle, state.secondaryContent && rootStyles.secondaryContent, state.root.className);\n    useOptionStyles_unstable({\n        ...state,\n        active: false,\n        disabled: false,\n        focusVisible: false,\n        checkIcon: undefined,\n        selected: false\n    });\n    if (state.media) {\n        state.media.className = mergeClasses(tagPickerOptionClassNames.media, mediaBaseStyle, state.media.className);\n    }\n    if (state.secondaryContent) {\n        state.secondaryContent.className = mergeClasses(tagPickerOptionClassNames.secondaryContent, secondaryContentBaseStyle, state.secondaryContent.className);\n    }\n    return state;\n};\n"],"names":["tagPickerOptionClassNames","useTagPickerOptionStyles_unstable","root","media","secondaryContent","useRootBaseStyle","__resetStyles","useRootStyles","__styles","mc9l5x","Budl1dq","d","useSecondaryContentBaseStyle","useMediaBaseStyle","state","rootBaseStyle","rootStyles","secondaryContentBaseStyle","mediaBaseStyle","className","mergeClasses","useOptionStyles_unstable","active","disabled","focusVisible","checkIcon","undefined","selected"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAGaA,yBAAyB;eAAzBA;;IAyBIC,iCAAiC;eAAjCA;;;uBA5ByC;+BACjB;AAElC,MAAMD,4BAA4B;IACrCE,MAAM;IACNC,OAAO;IACPC,kBAAkB;AACtB;AACA,MAAMC,mBAAgB,WAAA,GAAGC,IAAAA,oBAAA,EAAA,WAAA,MAAA;IAAA;CAGxB;AACD,MAAMC,gBAAa,WAAA,GAAGC,IAAAA,eAAA,EAAA;IAAAJ,kBAAA;QAAAK,QAAA;QAAAC,SAAA;IAAA;AAAA,GAAA;IAAAC,GAAA;QAAA;QAAA;KAAA;AAAA;AAMtB,MAAMC,+BAA4B,WAAA,GAAGN,IAAAA,oBAAA,EAAA,YAAA,MAAA;IAAA;CAIpC;AACD,MAAMO,oBAAiB,WAAA,GAAGP,IAAAA,oBAAA,EAAA,WAAA,MAAA;IAAA;CAEzB;AAGU,MAAML,oCAAqCa,CAAAA;IAClD;IACA,MAAMC,gBAAgBV;IACtB,MAAMW,aAAaT;IACnB,MAAMU,4BAA4BL;IAClC,MAAMM,iBAAiBL;IACvBC,MAAMZ,IAAI,CAACiB,SAAS,GAAGC,IAAAA,mBAAY,EAACpB,0BAA0BE,IAAI,EAAEa,eAAeD,MAAMV,gBAAgB,IAAIY,WAAWZ,gBAAgB,EAAEU,MAAMZ,IAAI,CAACiB,SAAS;IAC9JE,IAAAA,uCAAwB,EAAC;QACrB,GAAGP,KAAK;QACRQ,QAAQ;QACRC,UAAU;QACVC,cAAc;QACdC,WAAWC;QACXC,UAAU;IACd;IACA,IAAIb,MAAMX,KAAK,EAAE;QACbW,MAAMX,KAAK,CAACgB,SAAS,GAAGC,IAAAA,mBAAY,EAACpB,0BAA0BG,KAAK,EAAEe,gBAAgBJ,MAAMX,KAAK,CAACgB,SAAS;IAC/G;IACA,IAAIL,MAAMV,gBAAgB,EAAE;QACxBU,MAAMV,gBAAgB,CAACe,SAAS,GAAGC,IAAAA,mBAAY,EAACpB,0BAA0BI,gBAAgB,EAAEa,2BAA2BH,MAAMV,gBAAgB,CAACe,SAAS;IAC3J;IACA,OAAOL;AACX"}