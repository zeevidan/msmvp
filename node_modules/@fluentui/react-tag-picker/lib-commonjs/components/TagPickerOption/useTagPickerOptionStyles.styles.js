"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    tagPickerOptionClassNames: function() {
        return tagPickerOptionClassNames;
    },
    useTagPickerOptionStyles_unstable: function() {
        return useTagPickerOptionStyles_unstable;
    }
});
const _react = require("@griffel/react");
const _reactcombobox = require("@fluentui/react-combobox");
const tagPickerOptionClassNames = {
    root: 'fui-TagPickerOption',
    media: 'fui-TagPickerOption__media',
    secondaryContent: 'fui-TagPickerOption__secondaryContent'
};
const useRootBaseStyle = /*#__PURE__*/ (0, _react.__resetStyles)("r70qvj9", null, [
    ".r70qvj9{display:flex;align-items:center;}"
]);
const useRootStyles = /*#__PURE__*/ (0, _react.__styles)({
    secondaryContent: {
        mc9l5x: "f13qh94s",
        Budl1dq: "fjxzuw"
    }
}, {
    d: [
        ".f13qh94s{display:grid;}",
        ".fjxzuw{grid-template-columns:auto 1fr;}"
    ]
});
const useSecondaryContentBaseStyle = /*#__PURE__*/ (0, _react.__resetStyles)("r131qrbm", null, [
    ".r131qrbm{grid-column-start:2;grid-row-start:2;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);}"
]);
const useMediaBaseStyle = /*#__PURE__*/ (0, _react.__resetStyles)("rrip69g", null, [
    ".rrip69g{grid-row-start:span 2;}"
]);
const useTagPickerOptionStyles_unstable = (state)=>{
    'use no memo';
    const rootBaseStyle = useRootBaseStyle();
    const rootStyles = useRootStyles();
    const secondaryContentBaseStyle = useSecondaryContentBaseStyle();
    const mediaBaseStyle = useMediaBaseStyle();
    state.root.className = (0, _react.mergeClasses)(tagPickerOptionClassNames.root, rootBaseStyle, state.secondaryContent && rootStyles.secondaryContent, state.root.className);
    (0, _reactcombobox.useOptionStyles_unstable)({
        ...state,
        active: false,
        disabled: false,
        focusVisible: false,
        checkIcon: undefined,
        selected: false
    });
    if (state.media) {
        state.media.className = (0, _react.mergeClasses)(tagPickerOptionClassNames.media, mediaBaseStyle, state.media.className);
    }
    if (state.secondaryContent) {
        state.secondaryContent.className = (0, _react.mergeClasses)(tagPickerOptionClassNames.secondaryContent, secondaryContentBaseStyle, state.secondaryContent.className);
    }
    return state;
};
