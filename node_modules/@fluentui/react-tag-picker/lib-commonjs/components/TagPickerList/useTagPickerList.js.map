{"version":3,"sources":["../src/components/TagPickerList/useTagPickerList.ts"],"sourcesContent":["import * as React from 'react';\nimport type { TagPickerListProps, TagPickerListState } from './TagPickerList.types';\nimport { Listbox } from '@fluentui/react-combobox';\nimport { useTagPickerContext_unstable } from '../../contexts/TagPickerContext';\nimport { slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { useListboxSlot } from '@fluentui/react-combobox';\n\n/**\n * Create the state required to render TagPickerList.\n *\n * The returned state can be modified with hooks such as useTagPickerListStyles_unstable,\n * before being passed to renderTagPickerList_unstable.\n *\n * @param props - props from this instance of TagPickerList\n * @param ref - reference to root HTMLDivElement of TagPickerList\n */\nexport const useTagPickerList_unstable = (\n  props: TagPickerListProps,\n  ref: React.Ref<HTMLDivElement>,\n): TagPickerListState => {\n  const triggerRef = useTagPickerContext_unstable(ctx => ctx.triggerRef) as\n    | React.RefObject<HTMLInputElement>\n    | React.RefObject<HTMLButtonElement>;\n  const popoverRef = useTagPickerContext_unstable(ctx => ctx.popoverRef);\n  const popoverId = useTagPickerContext_unstable(ctx => ctx.popoverId);\n  const open = useTagPickerContext_unstable(ctx => ctx.open);\n\n  return {\n    open,\n    components: {\n      root: Listbox,\n    },\n    root: slot.always(\n      {\n        ...useListboxSlot(props, useMergedRefs(popoverRef, ref), {\n          state: { multiselect: true },\n          triggerRef,\n          defaultProps: { id: popoverId },\n        }),\n        role: 'listbox',\n      },\n      { elementType: Listbox },\n    ),\n  };\n};\n"],"names":["useTagPickerList_unstable","props","ref","triggerRef","useTagPickerContext_unstable","ctx","popoverRef","popoverId","open","components","root","Listbox","slot","always","useListboxSlot","useMergedRefs","state","multiselect","defaultProps","id","role","elementType"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAgBaA;;;eAAAA;;;;iEAhBU;+BAEC;kCACqB;gCACT;AAY7B,MAAMA,4BAA4B,CACvCC,OACAC;IAEA,MAAMC,aAAaC,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIF,UAAU;IAGrE,MAAMG,aAAaF,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIC,UAAU;IACrE,MAAMC,YAAYH,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIE,SAAS;IACnE,MAAMC,OAAOJ,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIG,IAAI;IAEzD,OAAO;QACLA;QACAC,YAAY;YACVC,MAAMC,sBAAAA;QACR;QACAD,MAAME,oBAAAA,CAAKC,MAAM,CACf;YACE,GAAGC,IAAAA,6BAAAA,EAAeb,OAAOc,IAAAA,6BAAAA,EAAcT,YAAYJ,MAAM;gBACvDc,OAAO;oBAAEC,aAAa;gBAAK;gBAC3Bd;gBACAe,cAAc;oBAAEC,IAAIZ;gBAAU;YAChC,EAAE;YACFa,MAAM;QACR,GACA;YAAEC,aAAaV,sBAAAA;QAAQ;IAE3B;AACF"}