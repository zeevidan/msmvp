{"version":3,"sources":["../src/components/TagPickerGroup/useTagPickerGroup.ts"],"sourcesContent":["import * as React from 'react';\nimport type { TagPickerGroupProps, TagPickerGroupState } from './TagPickerGroup.types';\nimport { useTagGroup_unstable } from '@fluentui/react-tags';\nimport { useTagPickerContext_unstable } from '../../contexts/TagPickerContext';\nimport { isHTMLElement, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { tagPickerAppearanceToTagAppearance, tagPickerSizeToTagSize } from '../../utils/tagPicker2Tag';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\nimport { ArrowRight } from '@fluentui/keyboard-keys';\n\n/**\n * Create the state required to render TagPickerGroup.\n *\n * The returned state can be modified with hooks such as usePickerTagGroupStyles_unstable,\n * before being passed to renderPickerTagGroup_unstable.\n *\n * @param props - props from this instance of TagPickerGroup\n * @param ref - reference to root HTMLDivElement of TagPickerGroup\n */\nexport const useTagPickerGroup_unstable = (\n  props: TagPickerGroupProps,\n  ref: React.Ref<HTMLDivElement>,\n): TagPickerGroupState => {\n  const hasSelectedOptions = useTagPickerContext_unstable(ctx => ctx.selectedOptions.length > 0);\n  const hasOneSelectedOption = useTagPickerContext_unstable(ctx => ctx.selectedOptions.length === 1);\n  const triggerRef = useTagPickerContext_unstable(ctx => ctx.triggerRef);\n  const tagPickerGroupRef = useTagPickerContext_unstable(ctx => ctx.tagPickerGroupRef);\n  const selectOption = useTagPickerContext_unstable(ctx => ctx.selectOption);\n  const size = useTagPickerContext_unstable(ctx => tagPickerSizeToTagSize(ctx.size));\n  const appearance = useTagPickerContext_unstable(ctx => ctx.appearance);\n  const disabled = useTagPickerContext_unstable(ctx => ctx.disabled);\n\n  const arrowNavigationProps = useArrowNavigationGroup({\n    circular: false,\n    axis: 'both',\n    memorizeCurrent: true,\n  });\n\n  const state = useTagGroup_unstable(\n    {\n      role: 'listbox',\n      disabled,\n      ...props,\n      ...arrowNavigationProps,\n      size,\n      appearance: tagPickerAppearanceToTagAppearance(appearance),\n      dismissible: true,\n      onKeyDown: useEventCallback(event => {\n        props.onKeyDown?.(event);\n        if (isHTMLElement(event.target) && event.key === ArrowRight) {\n          triggerRef.current?.focus();\n        }\n      }),\n      onDismiss: useEventCallback((event, data) => {\n        selectOption(event as React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>, {\n          value: data.value,\n          // These values no longer exist because the option has unregistered itself\n          // for the purposes of selection - these values aren't actually used\n          id: 'ERROR_DO_NOT_USE',\n          text: 'ERROR_DO_NOT_USE',\n        });\n        if (hasOneSelectedOption && !event.isDefaultPrevented()) {\n          triggerRef.current?.focus();\n        }\n      }),\n    },\n    useMergedRefs(ref, tagPickerGroupRef),\n  );\n\n  return {\n    ...state,\n    hasSelectedOptions,\n  };\n};\n"],"names":["useTagPickerGroup_unstable","props","ref","hasSelectedOptions","useTagPickerContext_unstable","ctx","selectedOptions","length","hasOneSelectedOption","triggerRef","tagPickerGroupRef","selectOption","size","tagPickerSizeToTagSize","appearance","disabled","arrowNavigationProps","useArrowNavigationGroup","circular","axis","memorizeCurrent","state","useTagGroup_unstable","role","tagPickerAppearanceToTagAppearance","dismissible","onKeyDown","useEventCallback","event","isHTMLElement","target","key","ArrowRight","current","focus","onDismiss","data","value","id","text","isDefaultPrevented","useMergedRefs"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkBaA;;;eAAAA;;;;iEAlBU;2BAEc;kCACQ;gCACkB;+BACY;8BACnC;8BACb;AAWpB,MAAMA,6BAA6B,CACxCC,OACAC;IAEA,MAAMC,qBAAqBC,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIC,eAAe,CAACC,MAAM,GAAG;IAC5F,MAAMC,uBAAuBJ,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIC,eAAe,CAACC,MAAM,KAAK;IAChG,MAAME,aAAaL,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAII,UAAU;IACrE,MAAMC,oBAAoBN,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIK,iBAAiB;IACnF,MAAMC,eAAeP,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIM,YAAY;IACzE,MAAMC,OAAOR,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOQ,IAAAA,qCAAAA,EAAuBR,IAAIO,IAAI;IAChF,MAAME,aAAaV,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIS,UAAU;IACrE,MAAMC,WAAWX,IAAAA,8CAAAA,EAA6BC,CAAAA,MAAOA,IAAIU,QAAQ;IAEjE,MAAMC,uBAAuBC,IAAAA,qCAAAA,EAAwB;QACnDC,UAAU;QACVC,MAAM;QACNC,iBAAiB;IACnB;IAEA,MAAMC,QAAQC,IAAAA,+BAAAA,EACZ;QACEC,MAAM;QACNR;QACA,GAAGd,KAAK;QACR,GAAGe,oBAAoB;QACvBJ;QACAE,YAAYU,IAAAA,iDAAAA,EAAmCV;QAC/CW,aAAa;QACbC,WAAWC,IAAAA,gCAAAA,EAAiBC,CAAAA;gBAC1B3B;YAAAA,CAAAA,mBAAAA,MAAMyB,SAAS,AAATA,MAAS,QAAfzB,qBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,iBAAAA,IAAAA,CAAAA,OAAkB2B;YAClB,IAAIC,IAAAA,6BAAAA,EAAcD,MAAME,MAAM,KAAKF,MAAMG,GAAG,KAAKC,wBAAAA,EAAY;oBAC3DvB;gBAAAA,CAAAA,sBAAAA,WAAWwB,OAAO,AAAPA,MAAO,QAAlBxB,wBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,oBAAoByB,KAAK;YAC3B;QACF;QACAC,WAAWR,IAAAA,gCAAAA,EAAiB,CAACC,OAAOQ;YAClCzB,aAAaiB,OAAiF;gBAC5FS,OAAOD,KAAKC,KAAK;gBACjB,0EAA0E;gBAC1E,oEAAoE;gBACpEC,IAAI;gBACJC,MAAM;YACR;YACA,IAAI/B,wBAAwB,CAACoB,MAAMY,kBAAkB,IAAI;oBACvD/B;gBAAAA,CAAAA,sBAAAA,WAAWwB,OAAO,AAAPA,MAAO,QAAlBxB,wBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,oBAAoByB,KAAK;YAC3B;QACF;IACF,GACAO,IAAAA,6BAAAA,EAAcvC,KAAKQ;IAGrB,OAAO;QACL,GAAGW,KAAK;QACRlB;IACF;AACF"}