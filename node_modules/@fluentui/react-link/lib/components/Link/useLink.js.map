{"version":3,"sources":["../src/components/Link/useLink.ts"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { useBackgroundAppearance } from '@fluentui/react-shared-contexts';\nimport { useLinkState_unstable } from './useLinkState';\nimport type { LinkProps, LinkState } from './Link.types';\nimport { useLinkContext } from '../../contexts/linkContext';\n\n/**\n * Given user props, defines default props for the Link, calls useLinkState_unstable, and returns processed state.\n * @param props - User provided props to the Link component.\n * @param ref - User provided ref to be passed to the Link component.\n */\nexport const useLink_unstable = (\n  props: LinkProps,\n  ref: React.Ref<HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n): LinkState => {\n  const backgroundAppearance = useBackgroundAppearance();\n  const { inline: inlineContext } = useLinkContext();\n  const { appearance = 'default', disabled = false, disabledFocusable = false, inline = false } = props;\n\n  const elementType = props.as || (props.href ? 'a' : 'button');\n\n  // Casting is required here as `as` prop would break the union between `a`, `button` and `span` types\n  const propsWithAssignedAs = {\n    role: elementType === 'span' ? 'button' : undefined,\n    type: elementType === 'button' ? 'button' : undefined,\n    ...props,\n    as: elementType,\n  } as LinkProps;\n\n  const state: LinkState = {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    inline: inline ?? !!inlineContext,\n\n    // Slots definition\n    components: {\n      root: elementType,\n    },\n\n    root: slot.always(\n      getIntrinsicElementProps<LinkProps>(elementType, {\n        ref,\n        ...propsWithAssignedAs,\n      } as const),\n      { elementType },\n    ),\n    backgroundAppearance,\n  };\n\n  useLinkState_unstable(state);\n\n  return state;\n};\n"],"names":["React","getIntrinsicElementProps","slot","useBackgroundAppearance","useLinkState_unstable","useLinkContext","useLink_unstable","props","ref","backgroundAppearance","inline","inlineContext","appearance","disabled","disabledFocusable","elementType","as","href","propsWithAssignedAs","role","undefined","type","state","components","root","always"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,wBAAwB,EAAEC,IAAI,QAAQ,4BAA4B;AAC3E,SAASC,uBAAuB,QAAQ,kCAAkC;AAC1E,SAASC,qBAAqB,QAAQ,iBAAiB;AAEvD,SAASC,cAAc,QAAQ,6BAA6B;AAE5D;;;;CAIC,GACD,OAAO,MAAMC,mBAAmB,CAC9BC,OACAC;IAEA,MAAMC,uBAAuBN;IAC7B,MAAM,EAAEO,QAAQC,aAAa,EAAE,GAAGN;IAClC,MAAM,EAAEO,aAAa,SAAS,EAAEC,WAAW,KAAK,EAAEC,oBAAoB,KAAK,EAAEJ,SAAS,KAAK,EAAE,GAAGH;IAEhG,MAAMQ,cAAcR,MAAMS,EAAE,IAAKT,CAAAA,MAAMU,IAAI,GAAG,MAAM,QAAO;IAE3D,qGAAqG;IACrG,MAAMC,sBAAsB;QAC1BC,MAAMJ,gBAAgB,SAAS,WAAWK;QAC1CC,MAAMN,gBAAgB,WAAW,WAAWK;QAC5C,GAAGb,KAAK;QACRS,IAAID;IACN;IAEA,MAAMO,QAAmB;QACvB,gCAAgC;QAChCV;QACAC;QACAC;QACAJ,QAAQA,mBAAAA,oBAAAA,SAAU,CAAC,CAACC;QAEpB,mBAAmB;QACnBY,YAAY;YACVC,MAAMT;QACR;QAEAS,MAAMtB,KAAKuB,MAAM,CACfxB,yBAAoCc,aAAa;YAC/CP;YACA,GAAGU,mBAAmB;QACxB,IACA;YAAEH;QAAY;QAEhBN;IACF;IAEAL,sBAAsBkB;IAEtB,OAAOA;AACT,EAAE"}