{"version":3,"sources":["useMessageBarActionsStyles.styles.js"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const messageBarActionsClassNames = {\n    root: 'fui-MessageBarActions',\n    containerAction: 'fui-MessageBarActions__containerAction'\n};\n/**\n * Styles for the root slot\n */ const useRootBaseStyles = makeResetStyles({\n    gridArea: 'secondaryActions',\n    display: 'flex',\n    columnGap: tokens.spacingHorizontalM,\n    paddingRight: tokens.spacingHorizontalM\n});\nconst useContainerActionBaseStyles = makeResetStyles({\n    gridArea: 'actions',\n    paddingRight: tokens.spacingHorizontalM\n});\nconst useMultilineStyles = makeStyles({\n    root: {\n        justifyContent: 'end',\n        marginTop: tokens.spacingVerticalMNudge,\n        marginBottom: tokens.spacingVerticalS,\n        marginRight: '0px',\n        paddingRight: tokens.spacingVerticalM\n    },\n    noActions: {\n        display: 'none'\n    }\n});\n/**\n * Apply styling to the MessageBarActions slots based on the state\n */ export const useMessageBarActionsStyles_unstable = (state)=>{\n    'use no memo';\n    const rootBaseStyles = useRootBaseStyles();\n    const containerActionBaseStyles = useContainerActionBaseStyles();\n    const multilineStyles = useMultilineStyles();\n    state.root.className = mergeClasses(messageBarActionsClassNames.root, rootBaseStyles, state.layout === 'multiline' && multilineStyles.root, !state.hasActions && multilineStyles.noActions, state.root.className);\n    if (state.containerAction) {\n        state.containerAction.className = mergeClasses(messageBarActionsClassNames.containerAction, containerActionBaseStyles, state.containerAction.className);\n    }\n    return state;\n};\n"],"names":["messageBarActionsClassNames","useMessageBarActionsStyles_unstable","root","containerAction","useRootBaseStyles","__resetStyles","useContainerActionBaseStyles","useMultilineStyles","__styles","Brf1p80","B6of3ja","jrapky","t21cq0","z189sj","noActions","mc9l5x","d","state","rootBaseStyles","containerActionBaseStyles","multilineStyles","className","mergeClasses","layout","hasActions"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAEaA,2BAA2B;eAA3BA;;IA8BIC,mCAAmC;eAAnCA;;;uBAhCyC;AAEnD,MAAMD,8BAA8B;IACvCE,MAAM;IACNC,iBAAiB;AACrB;AACA;;CAEA,GAAI,MAAMC,oBAAiB,WAAA,GAAGC,IAAAA,oBAAA,EAAA,YAAA,YAAA;IAAA;IAAA;CAK7B;AACD,MAAMC,+BAA4B,WAAA,GAAGD,IAAAA,oBAAA,EAAA,WAAA,YAAA;IAAA;IAAA;CAGpC;AACD,MAAME,qBAAkB,WAAA,GAAGC,IAAAA,eAAA,EAAA;IAAAN,MAAA;QAAAO,SAAA;QAAAC,SAAA;QAAAC,QAAA;QAAAC,QAAA;YAAA;YAAA;SAAA;QAAAC,QAAA;YAAA;YAAA;SAAA;IAAA;IAAAC,WAAA;QAAAC,QAAA;IAAA;AAAA,GAAA;IAAAC,GAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;AAAA;AAchB,MAAMf,sCAAuCgB,CAAAA;IACpD;IACA,MAAMC,iBAAiBd;IACvB,MAAMe,4BAA4Bb;IAClC,MAAMc,kBAAkBb;IACxBU,MAAMf,IAAI,CAACmB,SAAS,GAAGC,IAAAA,mBAAY,EAACtB,4BAA4BE,IAAI,EAAEgB,gBAAgBD,MAAMM,MAAM,KAAK,eAAeH,gBAAgBlB,IAAI,EAAE,CAACe,MAAMO,UAAU,IAAIJ,gBAAgBN,SAAS,EAAEG,MAAMf,IAAI,CAACmB,SAAS;IAChN,IAAIJ,MAAMd,eAAe,EAAE;QACvBc,MAAMd,eAAe,CAACkB,SAAS,GAAGC,IAAAA,mBAAY,EAACtB,4BAA4BG,eAAe,EAAEgB,2BAA2BF,MAAMd,eAAe,CAACkB,SAAS;IAC1J;IACA,OAAOJ;AACX"}