{"version":3,"sources":["../src/components/MessageBarActions/renderMessageBarActions.tsx"],"sourcesContent":["/** @jsxRuntime automatic */\n/** @jsxImportSource @fluentui/react-jsx-runtime */\n\nimport { assertSlots } from '@fluentui/react-utilities';\nimport type {\n  MessageBarActionsState,\n  MessageBarActionsSlots,\n  MessageBarActionsContextValues,\n} from './MessageBarActions.types';\nimport { ButtonContextProvider } from '@fluentui/react-button';\n\n/**\n * Render the final JSX of MessageBarActions\n */\nexport const renderMessageBarActions_unstable = (\n  state: MessageBarActionsState,\n  contexts: MessageBarActionsContextValues,\n) => {\n  assertSlots<MessageBarActionsSlots>(state);\n  if (state.layout === 'multiline') {\n    return (\n      <ButtonContextProvider value={contexts.button}>\n        {state.containerAction && <state.containerAction />}\n        <state.root />\n      </ButtonContextProvider>\n    );\n  }\n\n  return (\n    <ButtonContextProvider value={contexts.button}>\n      <state.root />\n      {state.containerAction && <state.containerAction />}\n    </ButtonContextProvider>\n  );\n};\n"],"names":["renderMessageBarActions_unstable","state","contexts","assertSlots","layout","_jsxs","ButtonContextProvider","value","button","containerAction","_jsx","root"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcaA;;;eAAAA;;;4BAbb;gCAE4B;6BAMU;AAK/B,MAAMA,mCAAmC,CAC9CC,OACAC;IAEAC,IAAAA,2BAAAA,EAAoCF;IACpC,IAAIA,MAAMG,MAAM,KAAK,aAAa;QAChC,OAAA,WAAA,GACEC,IAAAA,gBAAA,EAACC,kCAAAA,EAAAA;YAAsBC,OAAOL,SAASM,MAAM;;gBAC1CP,MAAMQ,eAAe,IAAA,WAAA,GAAIC,IAAAA,eAAA,EAACT,MAAMQ,eAAe,EAAA,CAAA;8BAChDC,IAAAA,eAAA,EAACT,MAAMU,IAAI,EAAA,CAAA;;;IAGjB;IAEA,OAAA,WAAA,GACEN,IAAAA,gBAAA,EAACC,kCAAAA,EAAAA;QAAsBC,OAAOL,SAASM,MAAM;;0BAC3CE,IAAAA,eAAA,EAACT,MAAMU,IAAI,EAAA,CAAA;YACVV,MAAMQ,eAAe,IAAA,WAAA,GAAIC,IAAAA,eAAA,EAACT,MAAMQ,eAAe,EAAA,CAAA;;;AAGtD"}