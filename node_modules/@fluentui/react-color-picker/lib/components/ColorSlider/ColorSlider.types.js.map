{"version":3,"sources":["../src/components/ColorSlider/ColorSlider.types.ts"],"sourcesContent":["import * as React from 'react';\nimport type { ComponentProps, ComponentState, Slot, EventHandler, EventData } from '@fluentui/react-utilities';\nimport type { HsvColor } from '../../types/color';\nimport type { ColorPickerProps } from '../ColorPicker/ColorPicker.types';\n\nexport type SliderOnChangeData = EventData<'change', React.ChangeEvent<HTMLInputElement>> & {\n  color: HsvColor;\n};\n\nexport type ColorSliderSlots = {\n  root: NonNullable<Slot<'div'>>;\n  rail: NonNullable<Slot<'div'>>;\n  thumb: NonNullable<Slot<'div'>>;\n  input: NonNullable<Slot<'input'>>;\n};\n\nexport type ColorChannel = 'hue' | 'saturation' | 'value';\n\n/**\n * ColorSlider Props\n */\nexport type ColorSliderProps = Omit<\n  ComponentProps<Partial<ColorSliderSlots>, 'input'>,\n  'defaultValue' | 'onChange' | 'value' | 'color'\n> &\n  Pick<ColorPickerProps, 'shape'> & {\n    /**\n     * Color channel of the Slider.\n     * @default `hue`\n     */\n    channel?: ColorChannel;\n\n    /**\n     * Triggers a callback when the value has been changed. This will be called on every individual step.\n     */\n    onChange?: EventHandler<SliderOnChangeData>;\n\n    /**\n     * Render the Slider in a vertical orientation, smallest value on the bottom.\n     * @default `false`\n     */\n    vertical?: boolean;\n\n    /**\n     * Color of the ColorPicker\n     */\n    color?: HsvColor;\n\n    /**\n     * The starting color for an uncontrolled ColorSlider.\n     */\n    defaultColor?: HsvColor;\n  };\n\n/**\n * State used in rendering ColorSlider\n */\nexport type ColorSliderState = ComponentState<ColorSliderSlots> &\n  Pick<ColorSliderProps, 'vertical' | 'shape' | 'channel'>;\n"],"names":["React"],"rangeMappings":"","mappings":"AAAA,YAAYA,WAAW,QAAQ"}