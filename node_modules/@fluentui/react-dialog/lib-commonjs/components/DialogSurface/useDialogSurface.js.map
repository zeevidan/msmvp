{"version":3,"sources":["../src/components/DialogSurface/useDialogSurface.ts"],"sourcesContent":["import { Escape } from '@fluentui/keyboard-keys';\nimport { presenceMotionSlot, type PresenceMotionSlotProps } from '@fluentui/react-motion';\nimport {\n  useEventCallback,\n  useMergedRefs,\n  isResolvedShorthand,\n  slot,\n  getIntrinsicElementProps,\n  useIsomorphicLayoutEffect,\n} from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { useDialogContext_unstable } from '../../contexts';\nimport { useDisableBodyScroll } from '../../utils/useDisableBodyScroll';\nimport { DialogBackdropMotion } from '../DialogBackdropMotion';\nimport { useMotionForwardedRef } from '../MotionRefForwarder';\nimport type { DialogSurfaceElement, DialogSurfaceProps, DialogSurfaceState } from './DialogSurface.types';\n\n/**\n * Create the state required to render DialogSurface.\n *\n * The returned state can be modified with hooks such as useDialogSurfaceStyles_unstable,\n * before being passed to renderDialogSurface_unstable.\n *\n * @param props - props from this instance of DialogSurface\n * @param ref - reference to root HTMLElement of DialogSurface\n */\nexport const useDialogSurface_unstable = (\n  props: DialogSurfaceProps,\n  ref: React.Ref<DialogSurfaceElement>,\n): DialogSurfaceState => {\n  const contextRef = useMotionForwardedRef();\n\n  const modalType = useDialogContext_unstable(ctx => ctx.modalType);\n  const isNestedDialog = useDialogContext_unstable(ctx => ctx.isNestedDialog);\n\n  const modalAttributes = useDialogContext_unstable(ctx => ctx.modalAttributes);\n  const dialogRef = useDialogContext_unstable(ctx => ctx.dialogRef);\n  const requestOpenChange = useDialogContext_unstable(ctx => ctx.requestOpenChange);\n  const dialogTitleID = useDialogContext_unstable(ctx => ctx.dialogTitleId);\n  const open = useDialogContext_unstable(ctx => ctx.open);\n\n  const handledBackdropClick = useEventCallback((event: React.MouseEvent<HTMLDivElement>) => {\n    if (isResolvedShorthand(props.backdrop)) {\n      props.backdrop.onClick?.(event);\n    }\n    if (modalType === 'modal' && !event.isDefaultPrevented()) {\n      requestOpenChange({\n        event,\n        open: false,\n        type: 'backdropClick',\n      });\n    }\n  });\n\n  const handleKeyDown = useEventCallback((event: React.KeyboardEvent<HTMLDivElement>) => {\n    props.onKeyDown?.(event);\n\n    if (event.key === Escape && !event.isDefaultPrevented()) {\n      requestOpenChange({\n        event,\n        open: false,\n        type: 'escapeKeyDown',\n      });\n      // stop propagation to avoid conflicting with other elements that listen for `Escape`\n      // e,g: nested Dialog, Popover, Menu and Tooltip\n      event.preventDefault();\n    }\n  });\n\n  const backdrop = slot.optional(props.backdrop, {\n    renderByDefault: modalType !== 'non-modal',\n    defaultProps: {\n      'aria-hidden': 'true',\n    },\n    elementType: 'div',\n  });\n  if (backdrop) {\n    backdrop.onClick = handledBackdropClick;\n  }\n\n  const { disableBodyScroll, enableBodyScroll } = useDisableBodyScroll();\n\n  useIsomorphicLayoutEffect(() => {\n    if (isNestedDialog || modalType === 'non-modal') {\n      return;\n    }\n\n    disableBodyScroll();\n\n    return () => {\n      enableBodyScroll();\n    };\n  }, [enableBodyScroll, isNestedDialog, disableBodyScroll, modalType]);\n\n  return {\n    components: {\n      backdrop: 'div',\n      root: 'div',\n      // TODO: remove once React v18 slot API is modified\n      // This is a problem at the moment due to UnknownSlotProps assumption\n      // that `children` property is `ReactNode`, which in this case is not valid\n      // as PresenceComponentProps['children'] is `ReactElement`\n      backdropMotion: DialogBackdropMotion as React.FC<PresenceMotionSlotProps>,\n    },\n    open,\n    backdrop,\n    isNestedDialog,\n    mountNode: props.mountNode,\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        tabIndex: -1, // https://github.com/microsoft/fluentui/issues/25150\n        'aria-modal': modalType !== 'non-modal',\n        role: modalType === 'alert' ? 'alertdialog' : 'dialog',\n        'aria-labelledby': props['aria-label'] ? undefined : dialogTitleID,\n        ...props,\n        ...modalAttributes,\n        onKeyDown: handleKeyDown,\n        // FIXME:\n        // `DialogSurfaceElement` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: useMergedRefs(ref, contextRef, dialogRef) as React.Ref<HTMLDivElement>,\n      }),\n      { elementType: 'div' },\n    ),\n    backdropMotion: presenceMotionSlot(props.backdropMotion, {\n      elementType: DialogBackdropMotion,\n      defaultProps: {\n        appear: true,\n        visible: open,\n      },\n    }),\n\n    // Deprecated properties\n    transitionStatus: undefined,\n  };\n};\n"],"names":["useDialogSurface_unstable","props","ref","contextRef","useMotionForwardedRef","modalType","useDialogContext_unstable","ctx","isNestedDialog","modalAttributes","dialogRef","requestOpenChange","dialogTitleID","dialogTitleId","open","handledBackdropClick","useEventCallback","event","isResolvedShorthand","backdrop","onClick","isDefaultPrevented","type","handleKeyDown","onKeyDown","key","Escape","preventDefault","slot","optional","renderByDefault","defaultProps","elementType","disableBodyScroll","enableBodyScroll","useDisableBodyScroll","useIsomorphicLayoutEffect","components","root","backdropMotion","DialogBackdropMotion","mountNode","always","getIntrinsicElementProps","tabIndex","role","undefined","useMergedRefs","presenceMotionSlot","appear","visible","transitionStatus"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA2BaA;;;eAAAA;;;;8BA3BU;6BAC0C;gCAQ1D;iEACgB;0BAEmB;sCACL;sCACA;oCACC;AAY/B,MAAMA,4BAA4B,CACvCC,OACAC;IAEA,MAAMC,aAAaC,IAAAA,yCAAAA;IAEnB,MAAMC,YAAYC,IAAAA,mCAAAA,EAA0BC,CAAAA,MAAOA,IAAIF,SAAS;IAChE,MAAMG,iBAAiBF,IAAAA,mCAAAA,EAA0BC,CAAAA,MAAOA,IAAIC,cAAc;IAE1E,MAAMC,kBAAkBH,IAAAA,mCAAAA,EAA0BC,CAAAA,MAAOA,IAAIE,eAAe;IAC5E,MAAMC,YAAYJ,IAAAA,mCAAAA,EAA0BC,CAAAA,MAAOA,IAAIG,SAAS;IAChE,MAAMC,oBAAoBL,IAAAA,mCAAAA,EAA0BC,CAAAA,MAAOA,IAAII,iBAAiB;IAChF,MAAMC,gBAAgBN,IAAAA,mCAAAA,EAA0BC,CAAAA,MAAOA,IAAIM,aAAa;IACxE,MAAMC,OAAOR,IAAAA,mCAAAA,EAA0BC,CAAAA,MAAOA,IAAIO,IAAI;IAEtD,MAAMC,uBAAuBC,IAAAA,gCAAAA,EAAiB,CAACC;QAC7C,IAAIC,IAAAA,mCAAAA,EAAoBjB,MAAMkB,QAAQ,GAAG;gBACvClB,yBAAAA;YAAAA,CAAAA,0BAAAA,CAAAA,kBAAAA,MAAMkB,QAAQ,AAARA,EAASC,OAAO,AAAPA,MAAO,QAAtBnB,4BAAAA,KAAAA,IAAAA,KAAAA,IAAAA,wBAAAA,IAAAA,CAAAA,iBAAyBgB;QAC3B;QACA,IAAIZ,cAAc,WAAW,CAACY,MAAMI,kBAAkB,IAAI;YACxDV,kBAAkB;gBAChBM;gBACAH,MAAM;gBACNQ,MAAM;YACR;QACF;IACF;IAEA,MAAMC,gBAAgBP,IAAAA,gCAAAA,EAAiB,CAACC;YACtChB;QAAAA,CAAAA,mBAAAA,MAAMuB,SAAS,AAATA,MAAS,QAAfvB,qBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,iBAAAA,IAAAA,CAAAA,OAAkBgB;QAElB,IAAIA,MAAMQ,GAAG,KAAKC,oBAAAA,IAAU,CAACT,MAAMI,kBAAkB,IAAI;YACvDV,kBAAkB;gBAChBM;gBACAH,MAAM;gBACNQ,MAAM;YACR;YACA,qFAAqF;YACrF,gDAAgD;YAChDL,MAAMU,cAAc;QACtB;IACF;IAEA,MAAMR,WAAWS,oBAAAA,CAAKC,QAAQ,CAAC5B,MAAMkB,QAAQ,EAAE;QAC7CW,iBAAiBzB,cAAc;QAC/B0B,cAAc;YACZ,eAAe;QACjB;QACAC,aAAa;IACf;IACA,IAAIb,UAAU;QACZA,SAASC,OAAO,GAAGL;IACrB;IAEA,MAAM,EAAEkB,iBAAiB,EAAEC,gBAAgB,EAAE,GAAGC,IAAAA,0CAAAA;IAEhDC,IAAAA,yCAAAA,EAA0B;QACxB,IAAI5B,kBAAkBH,cAAc,aAAa;YAC/C;QACF;QAEA4B;QAEA,OAAO;YACLC;QACF;IACF,GAAG;QAACA;QAAkB1B;QAAgByB;QAAmB5B;KAAU;IAEnE,OAAO;QACLgC,YAAY;YACVlB,UAAU;YACVmB,MAAM;YACN,mDAAmD;YACnD,qEAAqE;YACrE,2EAA2E;YAC3E,0DAA0D;YAC1DC,gBAAgBC,0CAAAA;QAClB;QACA1B;QACAK;QACAX;QACAiC,WAAWxC,MAAMwC,SAAS;QAC1BH,MAAMV,oBAAAA,CAAKc,MAAM,CACfC,IAAAA,wCAAAA,EAAyB,OAAO;YAC9BC,UAAU,CAAC;YACX,cAAcvC,cAAc;YAC5BwC,MAAMxC,cAAc,UAAU,gBAAgB;YAC9C,mBAAmBJ,KAAK,CAAC,aAAa,GAAG6C,YAAYlC;YACrD,GAAGX,KAAK;YACR,GAAGQ,eAAe;YAClBe,WAAWD;YACX,SAAS;YACT,6FAA6F;YAC7F,4FAA4F;YAC5FrB,KAAK6C,IAAAA,6BAAAA,EAAc7C,KAAKC,YAAYO;QACtC,IACA;YAAEsB,aAAa;QAAM;QAEvBO,gBAAgBS,IAAAA,+BAAAA,EAAmB/C,MAAMsC,cAAc,EAAE;YACvDP,aAAaQ,0CAAAA;YACbT,cAAc;gBACZkB,QAAQ;gBACRC,SAASpC;YACX;QACF;QAEA,wBAAwB;QACxBqC,kBAAkBL;IACpB;AACF"}