{"version":3,"sources":["useDialogBodyStyles.styles.js"],"sourcesContent":["import { makeResetStyles, mergeClasses } from '@griffel/react';\nimport { DIALOG_GAP, MEDIA_QUERY_BREAKPOINT_SELECTOR, MEDIA_QUERY_SHORT_SCREEN, SURFACE_PADDING } from '../../contexts';\nexport const dialogBodyClassNames = {\n    root: 'fui-DialogBody'\n};\n/**\n * Styles for the root slot\n */ const useResetStyles = makeResetStyles({\n    overflow: 'unset',\n    gap: DIALOG_GAP,\n    display: 'grid',\n    maxHeight: `calc(100vh - 2 * ${SURFACE_PADDING})`,\n    boxSizing: 'border-box',\n    gridTemplateRows: 'auto 1fr',\n    gridTemplateColumns: '1fr 1fr auto',\n    [MEDIA_QUERY_BREAKPOINT_SELECTOR]: {\n        maxWidth: '100vw',\n        gridTemplateRows: 'auto 1fr auto'\n    },\n    [MEDIA_QUERY_SHORT_SCREEN]: {\n        maxHeight: 'unset'\n    }\n});\n/**\n * Apply styling to the DialogBody slots based on the state\n */ export const useDialogBodyStyles_unstable = (state)=>{\n    'use no memo';\n    const resetStyles = useResetStyles();\n    state.root.className = mergeClasses(dialogBodyClassNames.root, resetStyles, state.root.className);\n    return state;\n};\n"],"names":["dialogBodyClassNames","useDialogBodyStyles_unstable","root","useResetStyles","__resetStyles","r","s","state","resetStyles","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAEaA,oBAAoB;eAApBA;;IAuBIC,4BAA4B;eAA5BA;;;uBAzB6B;AAEvC,MAAMD,uBAAuB;IAChCE,MAAM;AACV;AACA;;CAEA,GAAI,MAAMC,iBAAc,WAAA,GAAGC,IAAAA,oBAAA,EAAA,YAAA,MAAA;IAAAC,GAAA;QAAA;KAAA;IAAAC,GAAA;QAAA;QAAA;KAAA;AAAA;AAkBhB,MAAML,+BAAgCM,CAAAA;IAC7C;IACA,MAAMC,cAAcL;IACpBI,MAAML,IAAI,CAACO,SAAS,GAAGC,IAAAA,mBAAY,EAACV,qBAAqBE,IAAI,EAAEM,aAAaD,MAAML,IAAI,CAACO,SAAS;IAChG,OAAOF;AACX"}