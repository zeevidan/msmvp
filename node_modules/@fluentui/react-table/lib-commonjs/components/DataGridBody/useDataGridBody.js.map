{"version":3,"sources":["../src/components/DataGridBody/useDataGridBody.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { DataGridBodyProps, DataGridBodyState } from './DataGridBody.types';\nimport { useTableBody_unstable } from '../TableBody/useTableBody';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render DataGridBody.\n *\n * The returned state can be modified with hooks such as useDataGridBodyStyles_unstable,\n * before being passed to renderDataGridBody_unstable.\n *\n * @param props - props from this instance of DataGridBody\n * @param ref - reference to root HTMLElement of DataGridBody\n */\nexport const useDataGridBody_unstable = (props: DataGridBodyProps, ref: React.Ref<HTMLElement>): DataGridBodyState => {\n  const { sortable } = useTableContext();\n  const getRows = useDataGridContext_unstable(ctx => ctx.getRows);\n  const sort = useDataGridContext_unstable(ctx => ctx.sort.sort);\n  const rows = sortable ? sort(getRows()) : getRows();\n\n  const baseState = useTableBody_unstable({ ...props, children: null, as: 'div' }, ref);\n  return {\n    ...baseState,\n    rows,\n    renderRow: props.children,\n  };\n};\n"],"names":["useDataGridBody_unstable","props","ref","sortable","useTableContext","getRows","useDataGridContext_unstable","ctx","sort","rows","baseState","useTableBody_unstable","children","as","renderRow"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAeaA;;;eAAAA;;;;iEAfU;8BAEe;iCACM;8BACZ;AAWzB,MAAMA,2BAA2B,CAACC,OAA0BC;IACjE,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,6BAAAA;IACrB,MAAMC,UAAUC,IAAAA,4CAAAA,EAA4BC,CAAAA,MAAOA,IAAIF,OAAO;IAC9D,MAAMG,OAAOF,IAAAA,4CAAAA,EAA4BC,CAAAA,MAAOA,IAAIC,IAAI,CAACA,IAAI;IAC7D,MAAMC,OAAON,WAAWK,KAAKH,aAAaA;IAE1C,MAAMK,YAAYC,IAAAA,mCAAAA,EAAsB;QAAE,GAAGV,KAAK;QAAEW,UAAU;QAAMC,IAAI;IAAM,GAAGX;IACjF,OAAO;QACL,GAAGQ,SAAS;QACZD;QACAK,WAAWb,MAAMW,QAAQ;IAC3B;AACF"}