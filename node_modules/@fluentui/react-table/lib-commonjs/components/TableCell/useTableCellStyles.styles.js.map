{"version":3,"sources":["useTableCellStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport { createCustomFocusIndicatorStyle } from '@fluentui/react-tabster';\nexport const tableCellClassName = 'fui-TableCell';\nexport const tableCellClassNames = {\n    root: tableCellClassName\n};\nconst useTableLayoutStyles = makeStyles({\n    root: {\n        display: 'table-cell',\n        verticalAlign: 'middle'\n    },\n    medium: {\n        height: '44px'\n    },\n    small: {\n        height: '34px'\n    },\n    'extra-small': {\n        height: '24px'\n    }\n});\nconst useFlexLayoutStyles = makeStyles({\n    root: {\n        display: 'flex',\n        minWidth: '0px',\n        alignItems: 'center',\n        flex: '1 1 0px'\n    },\n    medium: {\n        minHeight: '44px'\n    },\n    small: {\n        minHeight: '34px'\n    },\n    'extra-small': {\n        minHeight: '24px'\n    }\n});\n/**\n * Styles for the root slot\n */ const useStyles = makeStyles({\n    root: {\n        position: 'relative',\n        padding: `0px ${tokens.spacingHorizontalS}`,\n        ...createCustomFocusIndicatorStyle({\n            outline: `2px solid ${tokens.colorStrokeFocus2}`,\n            borderRadius: tokens.borderRadiusMedium\n        }, {\n            selector: 'focus'\n        })\n    }\n});\n/**\n * Apply styling to the TableCell slots based on the state\n */ export const useTableCellStyles_unstable = (state)=>{\n    'use no memo';\n    const styles = useStyles();\n    const layoutStyles = {\n        table: useTableLayoutStyles(),\n        flex: useFlexLayoutStyles()\n    };\n    state.root.className = mergeClasses(tableCellClassNames.root, styles.root, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.noNativeElements ? layoutStyles.flex[state.size] : layoutStyles.table[state.size], state.root.className);\n    return state;\n};\n"],"names":["tableCellClassName","tableCellClassNames","useTableCellStyles_unstable","root","useTableLayoutStyles","__styles","mc9l5x","ha4doy","medium","Bqenvij","small","d","useFlexLayoutStyles","Bf4jedk","Bt984gj","xawz","Bh6795r","Bnnss6s","fkmc3a","sshi5w","p","useStyles","qhf8xq","Byoj8tv","uwmqm3","z189sj","z8tnut","B0ocmuz","Bfpq7zp","g9k6zt","Bn4voq9","giviqs","Bw81rd7","kdpuga","dm238s","B6xbmo0","B3whbx2","state","styles","layoutStyles","table","flex","className","mergeClasses","noNativeElements","size"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAGaA,kBAAkB;eAAlBA;;IACAC,mBAAmB;eAAnBA;;IAmDIC,2BAA2B;eAA3BA;;;uBAvDwB;AAGlC,MAAMF,qBAAqB;AAC3B,MAAMC,sBAAsB;IAC/BE,MAAMH;AACV;AACA,MAAMI,uBAAoB,WAAA,GAAGC,IAAAA,eAAA,EAAA;IAAAF,MAAA;QAAAG,QAAA;QAAAC,QAAA;IAAA;IAAAC,QAAA;QAAAC,SAAA;IAAA;IAAAC,OAAA;QAAAD,SAAA;IAAA;IAAA,eAAA;QAAAA,SAAA;IAAA;AAAA,GAAA;IAAAE,GAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;AAAA;AAe7B,MAAMC,sBAAmB,WAAA,GAAGP,IAAAA,eAAA,EAAA;IAAAF,MAAA;QAAAG,QAAA;QAAAO,SAAA;QAAAC,SAAA;QAAAC,MAAA;QAAAC,SAAA;QAAAC,SAAA;QAAAC,QAAA;IAAA;IAAAV,QAAA;QAAAW,QAAA;IAAA;IAAAT,OAAA;QAAAS,QAAA;IAAA;IAAA,eAAA;QAAAA,QAAA;IAAA;AAAA,GAAA;IAAAR,GAAA;QAAA;QAAA;QAAA;QAAA;YAAA;YAAA;gBAAAS,GAAA,CAAA;YAAA;SAAA;QAAA;QAAA;QAAA;KAAA;AAAA;AAiB5B;;CAEA,GAAI,MAAMC,YAAS,WAAA,GAAGhB,IAAAA,eAAA,EAAA;IAAAF,MAAA;QAAAmB,QAAA;QAAAC,SAAA;QAAAC,QAAA;QAAAC,QAAA;QAAAC,QAAA;QAAAC,SAAA;QAAAC,SAAA;QAAAC,QAAA;QAAAC,SAAA;QAAAC,QAAA;QAAAC,SAAA;QAAAC,QAAA;QAAAC,QAAA;QAAAC,SAAA;QAAAC,SAAA;IAAA;AAAA,GAAA;IAAAzB,GAAA;QAAA;QAAA;YAAA;YAAA;gBAAAS,GAAA,CAAA;YAAA;SAAA;QAAA;YAAA;YAAA;gBAAAA,GAAA,CAAA;YAAA;SAAA;QAAA;YAAA;YAAA;gBAAAA,GAAA,CAAA;YAAA;SAAA;KAAA;AAAA;AAcX,MAAMlB,8BAA+BmC,CAAAA;IAC5C;IACA,MAAMC,SAASjB;IACf,MAAMkB,eAAe;QACjBC,OAAOpC;QACPqC,MAAM7B;IACV;IACAyB,MAAMlC,IAAI,CAACuC,SAAS,GAAGC,IAAAA,mBAAY,EAAC1C,oBAAoBE,IAAI,EAAEmC,OAAOnC,IAAI,EAAEkC,MAAMO,gBAAgB,GAAGL,aAAaE,IAAI,CAACtC,IAAI,GAAGoC,aAAaC,KAAK,CAACrC,IAAI,EAAEkC,MAAMO,gBAAgB,GAAGL,aAAaE,IAAI,CAACJ,MAAMQ,IAAI,CAAC,GAAGN,aAAaC,KAAK,CAACH,MAAMQ,IAAI,CAAC,EAAER,MAAMlC,IAAI,CAACuC,SAAS;IACnQ,OAAOL;AACX"}