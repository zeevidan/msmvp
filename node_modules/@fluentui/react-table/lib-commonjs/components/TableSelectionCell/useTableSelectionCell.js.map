{"version":3,"sources":["../src/components/TableSelectionCell/useTableSelectionCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useId, slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { Checkbox } from '@fluentui/react-checkbox';\nimport { Radio } from '@fluentui/react-radio';\nimport type { TableSelectionCellProps, TableSelectionCellState } from './TableSelectionCell.types';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useTableContext } from '../../contexts/tableContext';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n\n/**\n * Create the state required to render TableSelectionCell.\n *\n * The returned state can be modified with hooks such as useTableSelectionCellStyles_unstable,\n * before being passed to renderTableSelectionCell_unstable.\n *\n * @param props - props from this instance of TableSelectionCell\n * @param ref - reference to root HTMLElement of TableSelectionCell\n */\nexport const useTableSelectionCell_unstable = (\n  props: TableSelectionCellProps,\n  ref: React.Ref<HTMLElement>,\n): TableSelectionCellState => {\n  const tableCellState = useTableCell_unstable(props, useMergedRefs(ref, useFocusWithin()));\n  const { noNativeElements } = useTableContext();\n  const {\n    type = 'checkbox',\n    checked = false,\n    subtle = false,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    hidden = false,\n    invisible = false,\n  } = props;\n\n  return {\n    ...tableCellState,\n    components: {\n      ...tableCellState.components,\n      checkboxIndicator: Checkbox,\n      radioIndicator: Radio,\n    },\n    checkboxIndicator: slot.optional(props.checkboxIndicator, {\n      renderByDefault: type === 'checkbox',\n      defaultProps: { checked: props.checked },\n      elementType: Checkbox,\n    }),\n    radioIndicator: slot.optional(props.radioIndicator, {\n      renderByDefault: type === 'radio',\n      defaultProps: { checked: !!checked, input: { name: useId('table-selection-radio') } },\n      elementType: Radio,\n    }),\n    type,\n    checked,\n    noNativeElements,\n    subtle,\n    hidden: invisible || hidden,\n  };\n};\n"],"names":["useTableSelectionCell_unstable","props","ref","tableCellState","useTableCell_unstable","useMergedRefs","useFocusWithin","noNativeElements","useTableContext","type","checked","subtle","hidden","invisible","components","checkboxIndicator","Checkbox","radioIndicator","Radio","slot","optional","renderByDefault","defaultProps","elementType","input","name","useId"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkBaA;;;eAAAA;;;;iEAlBU;gCACoB;+BAClB;4BACH;8BAEgB;8BACN;8BACD;AAWxB,MAAMA,iCAAiC,CAC5CC,OACAC;IAEA,MAAMC,iBAAiBC,IAAAA,mCAAAA,EAAsBH,OAAOI,IAAAA,6BAAAA,EAAcH,KAAKI,IAAAA,4BAAAA;IACvE,MAAM,EAAEC,gBAAgB,EAAE,GAAGC,IAAAA,6BAAAA;IAC7B,MAAM,EACJC,OAAO,UAAU,EACjBC,UAAU,KAAK,EACfC,SAAS,KAAK,EAEdC,SAAS,KAAK,EACdC,YAAY,KAAK,EAClB,GAAGZ;IAEJ,OAAO;QACL,GAAGE,cAAc;QACjBW,YAAY;YACV,GAAGX,eAAeW,UAAU;YAC5BC,mBAAmBC,uBAAAA;YACnBC,gBAAgBC,iBAAAA;QAClB;QACAH,mBAAmBI,oBAAAA,CAAKC,QAAQ,CAACnB,MAAMc,iBAAiB,EAAE;YACxDM,iBAAiBZ,SAAS;YAC1Ba,cAAc;gBAAEZ,SAAST,MAAMS,OAAO;YAAC;YACvCa,aAAaP,uBAAAA;QACf;QACAC,gBAAgBE,oBAAAA,CAAKC,QAAQ,CAACnB,MAAMgB,cAAc,EAAE;YAClDI,iBAAiBZ,SAAS;YAC1Ba,cAAc;gBAAEZ,SAAS,CAAC,CAACA;gBAASc,OAAO;oBAAEC,MAAMC,IAAAA,qBAAAA,EAAM;gBAAyB;YAAE;YACpFH,aAAaL,iBAAAA;QACf;QACAT;QACAC;QACAH;QACAI;QACAC,QAAQC,aAAaD;IACvB;AACF"}