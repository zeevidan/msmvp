{"version":3,"sources":["../src/hooks/useObservedElement.ts"],"sourcesContent":["import { getObservedElement, Types as TabsterTypes } from 'tabster';\n\nimport { useTabster } from './useTabster';\nimport { useTabsterAttributes } from './useTabsterAttributes';\n\nexport function useObservedElement(name: string | string[]): TabsterTypes.TabsterDOMAttribute {\n  useTabster(getObservedElement);\n\n  return useTabsterAttributes({ observed: { names: Array.isArray(name) ? name : [name] } });\n}\n"],"names":["useObservedElement","name","useTabster","getObservedElement","useTabsterAttributes","observed","names","Array","isArray"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAKgBA;;;eAAAA;;;yBAL0C;4BAE/B;sCACU;AAE9B,SAASA,mBAAmBC,IAAuB;IACxDC,IAAAA,sBAAU,EAACC,2BAAkB;IAE7B,OAAOC,IAAAA,0CAAoB,EAAC;QAAEC,UAAU;YAAEC,OAAOC,MAAMC,OAAO,CAACP,QAAQA,OAAO;gBAACA;aAAK;QAAC;IAAE;AACzF"}