{"version":3,"sources":["../src/components/ColorSwatch/useColorSwatch.tsx"],"sourcesContent":["import * as React from 'react';\nimport { slot, useEventCallback, getIntrinsicElementProps, mergeCallbacks } from '@fluentui/react-utilities';\nimport type { ColorSwatchProps, ColorSwatchState } from './ColorSwatch.types';\nimport { useSwatchPickerContextValue_unstable } from '../../contexts/swatchPicker';\nimport { swatchCSSVars } from './useColorSwatchStyles.styles';\nimport { ProhibitedFilled } from '@fluentui/react-icons';\nimport { tokens } from '@fluentui/react-theme';\n\n/**\n * Create the state required to render ColorSwatch.\n *\n * The returned state can be modified with hooks such as useColorSwatchStyles_unstable,\n * before being passed to renderColorSwatch_unstable.\n *\n * @param props - props from this instance of ColorSwatch\n * @param ref - reference to root HTMLButtonElement of ColorSwatch\n */\nexport const useColorSwatch_unstable = (\n  props: ColorSwatchProps,\n  ref: React.Ref<HTMLButtonElement>,\n): ColorSwatchState => {\n  const { borderColor, color, disabled, disabledIcon, icon, value, onClick, size, shape, style, ...rest } = props;\n  const _size = useSwatchPickerContextValue_unstable(ctx => ctx.size);\n  const _shape = useSwatchPickerContextValue_unstable(ctx => ctx.shape);\n  const isGrid = useSwatchPickerContextValue_unstable(ctx => ctx.isGrid);\n\n  const requestSelectionChange = useSwatchPickerContextValue_unstable(ctx => ctx.requestSelectionChange);\n  const selected = useSwatchPickerContextValue_unstable(ctx => ctx.selectedValue === value);\n\n  const onColorSwatchClick = useEventCallback(\n    mergeCallbacks(onClick, (event: React.MouseEvent<HTMLButtonElement>) =>\n      requestSelectionChange(event, {\n        selectedValue: value,\n        selectedSwatch: color,\n      }),\n    ),\n  );\n\n  const rootVariables = {\n    [swatchCSSVars.color]: color,\n    [swatchCSSVars.borderColor]: borderColor ?? tokens.colorTransparentStroke,\n  };\n\n  const role = isGrid ? 'gridcell' : 'radio';\n  const ariaSelected = isGrid\n    ? {\n        'aria-selected': selected,\n      }\n    : { 'aria-checked': selected };\n\n  const iconShorthand = slot.optional(icon, { elementType: 'span' });\n  const disabledIconShorthand = slot.optional(disabledIcon, {\n    defaultProps: {\n      children: <ProhibitedFilled />,\n    },\n    renderByDefault: true,\n    elementType: 'span',\n  });\n\n  return {\n    components: {\n      root: 'button',\n      icon: 'span',\n      disabledIcon: 'span',\n    },\n    root: slot.always(\n      getIntrinsicElementProps('button', {\n        ref,\n        role,\n        ...ariaSelected,\n        onClick: onColorSwatchClick,\n        type: 'button',\n        disabled,\n        ...rest,\n        style: {\n          ...rootVariables,\n          ...style,\n        },\n      }),\n      { elementType: 'button' },\n    ),\n    icon: iconShorthand,\n    disabledIcon: disabledIconShorthand,\n    disabled,\n    size: size ?? _size,\n    shape: shape ?? _shape,\n    selected,\n    color,\n    value,\n  };\n};\n"],"names":["useColorSwatch_unstable","props","ref","borderColor","color","disabled","disabledIcon","icon","value","onClick","size","shape","style","rest","_size","useSwatchPickerContextValue_unstable","ctx","_shape","isGrid","requestSelectionChange","selected","selectedValue","onColorSwatchClick","useEventCallback","mergeCallbacks","event","selectedSwatch","rootVariables","swatchCSSVars","tokens","colorTransparentStroke","role","ariaSelected","iconShorthand","slot","optional","elementType","disabledIconShorthand","defaultProps","children","React","createElement","ProhibitedFilled","renderByDefault","components","root","always","getIntrinsicElementProps","type"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAiBaA;;;eAAAA;;;;iEAjBU;gCAC0D;8BAE5B;4CACvB;4BACG;4BACV;AAWhB,MAAMA,0BAA0B,CACrCC,OACAC;IAEA,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAGC,MAAM,GAAGZ;IAC1G,MAAMa,QAAQC,IAAAA,kDAAAA,EAAqCC,CAAAA,MAAOA,IAAIN,IAAI;IAClE,MAAMO,SAASF,IAAAA,kDAAAA,EAAqCC,CAAAA,MAAOA,IAAIL,KAAK;IACpE,MAAMO,SAASH,IAAAA,kDAAAA,EAAqCC,CAAAA,MAAOA,IAAIE,MAAM;IAErE,MAAMC,yBAAyBJ,IAAAA,kDAAAA,EAAqCC,CAAAA,MAAOA,IAAIG,sBAAsB;IACrG,MAAMC,WAAWL,IAAAA,kDAAAA,EAAqCC,CAAAA,MAAOA,IAAIK,aAAa,KAAKb;IAEnF,MAAMc,qBAAqBC,IAAAA,gCAAAA,EACzBC,IAAAA,8BAAAA,EAAef,SAAS,CAACgB,QACvBN,uBAAuBM,OAAO;YAC5BJ,eAAeb;YACfkB,gBAAgBtB;QAClB;IAIJ,MAAMuB,gBAAgB;QACpB,CAACC,yCAAAA,CAAcxB,KAAK,CAAC,EAAEA;QACvB,CAACwB,yCAAAA,CAAczB,WAAW,CAAC,EAAEA,gBAAAA,QAAAA,gBAAAA,KAAAA,IAAAA,cAAe0B,kBAAAA,CAAOC,sBAAsB;IAC3E;IAEA,MAAMC,OAAOb,SAAS,aAAa;IACnC,MAAMc,eAAed,SACjB;QACE,iBAAiBE;IACnB,IACA;QAAE,gBAAgBA;IAAS;IAE/B,MAAMa,gBAAgBC,oBAAAA,CAAKC,QAAQ,CAAC5B,MAAM;QAAE6B,aAAa;IAAO;IAChE,MAAMC,wBAAwBH,oBAAAA,CAAKC,QAAQ,CAAC7B,cAAc;QACxDgC,cAAc;YACZC,UAAAA,WAAAA,GAAUC,OAAAC,aAAA,CAACC,4BAAAA,EAAAA;QACb;QACAC,iBAAiB;QACjBP,aAAa;IACf;IAEA,OAAO;QACLQ,YAAY;YACVC,MAAM;YACNtC,MAAM;YACND,cAAc;QAChB;QACAuC,MAAMX,oBAAAA,CAAKY,MAAM,CACfC,IAAAA,wCAAAA,EAAyB,UAAU;YACjC7C;YACA6B;YACA,GAAGC,YAAY;YACfvB,SAASa;YACT0B,MAAM;YACN3C;YACA,GAAGQ,IAAI;YACPD,OAAO;gBACL,GAAGe,aAAa;gBAChB,GAAGf,KAAK;YACV;QACF,IACA;YAAEwB,aAAa;QAAS;QAE1B7B,MAAM0B;QACN3B,cAAc+B;QACdhC;QACAK,MAAMA,SAAAA,QAAAA,SAAAA,KAAAA,IAAAA,OAAQI;QACdH,OAAOA,UAAAA,QAAAA,UAAAA,KAAAA,IAAAA,QAASM;QAChBG;QACAhB;QACAI;IACF;AACF"}