"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    listItemClassNames: function() {
        return listItemClassNames;
    },
    useListItemStyles_unstable: function() {
        return useListItemStyles_unstable;
    }
});
const _react = require("@griffel/react");
const listItemClassNames = {
    root: 'fui-ListItem',
    checkmark: 'fui-ListItem__checkmark'
};
const useRootBaseStyles = /*#__PURE__*/ (0, _react.__resetStyles)("rikgcmv", null, [
    ".rikgcmv{padding:0;margin:0;text-indent:0;list-style-type:none;}",
    ".rikgcmv[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);}"
]);
const useCheckmarkBaseStyles = /*#__PURE__*/ (0, _react.__styles)({
    root: {
        qb2dma: "f7nlbp4",
        Bpb5tq4: 0,
        Biccaaf: 0,
        Gaeyjg: 0,
        ldoezw: 0,
        B6gmeee: "f1bgo3o3"
    }
}, {
    d: [
        ".f7nlbp4{align-self:center;}",
        [
            ".f1bgo3o3 .fui-Checkbox__indicator{margin:4px;}",
            {
                p: -1
            }
        ]
    ]
});
/**
 * Styles for the root slot
 */ const useStyles = /*#__PURE__*/ (0, _react.__styles)({
    rootClickableOrSelectable: {
        mc9l5x: "f22iagw",
        Bceei9c: "f1k6fduh"
    }
}, {
    d: [
        ".f22iagw{display:flex;}",
        ".f1k6fduh{cursor:pointer;}"
    ]
});
const useListItemStyles_unstable = (state)=>{
    'use no memo';
    const rootBaseStyles = useRootBaseStyles();
    const checkmarkBaseStyles = useCheckmarkBaseStyles();
    const styles = useStyles();
    state.root.className = (0, _react.mergeClasses)(listItemClassNames.root, rootBaseStyles, (state.selectable || state.navigable) && styles.rootClickableOrSelectable, state.root.className);
    if (state.checkmark) {
        state.checkmark.className = (0, _react.mergeClasses)(listItemClassNames.checkmark, checkmarkBaseStyles.root, state.checkmark.className);
    }
    return state;
};
