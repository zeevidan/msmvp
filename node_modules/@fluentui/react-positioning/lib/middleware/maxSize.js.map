{"version":3,"sources":["../src/middleware/maxSize.ts"],"sourcesContent":["import { size } from '@floating-ui/dom';\nimport type { Middleware } from '@floating-ui/dom';\nimport type { NormalizedAutoSize, PositioningOptions } from '../types';\nimport { getBoundary } from '../utils/getBoundary';\nimport { toFloatingUIPadding } from '../utils';\nexport interface MaxSizeMiddlewareOptions\n  extends Pick<PositioningOptions, 'overflowBoundary' | 'overflowBoundaryPadding'> {\n  container: HTMLElement | null;\n  isRtl: boolean;\n}\n\n/**\n * floating-ui `size` middleware uses floating element's height/width to calculate available height/width.\n * This middleware only runs once per lifecycle, resetting styles applied by maxSize from previous lifecycle.\n * Then floating element's original size is restored and `size` middleware can calculate available height/width correctly.\n */\nexport const resetMaxSize = (autoSize: NormalizedAutoSize): Middleware => ({\n  name: 'resetMaxSize',\n  fn({ middlewareData, elements }) {\n    if (middlewareData.resetMaxSize?.maxSizeAlreadyReset) {\n      return {};\n    }\n\n    const { applyMaxWidth, applyMaxHeight } = autoSize;\n    if (applyMaxWidth) {\n      elements.floating.style.removeProperty('box-sizing');\n      elements.floating.style.removeProperty('max-width');\n      elements.floating.style.removeProperty('width');\n    }\n    if (applyMaxHeight) {\n      elements.floating.style.removeProperty('box-sizing');\n      elements.floating.style.removeProperty('max-height');\n      elements.floating.style.removeProperty('height');\n    }\n\n    return {\n      data: { maxSizeAlreadyReset: true },\n      reset: { rects: true },\n    };\n  },\n});\n\nexport function maxSize(autoSize: NormalizedAutoSize, options: MaxSizeMiddlewareOptions): Middleware {\n  const { container, overflowBoundary, overflowBoundaryPadding, isRtl } = options;\n  return size({\n    ...(overflowBoundaryPadding && { padding: toFloatingUIPadding(overflowBoundaryPadding, isRtl) }),\n    ...(overflowBoundary && { altBoundary: true, boundary: getBoundary(container, overflowBoundary) }),\n    apply({ availableHeight, availableWidth, elements, rects }) {\n      const applyMaxSizeStyles = (apply: boolean, dimension: 'width' | 'height', availableSize: number) => {\n        if (!apply) {\n          return;\n        }\n\n        elements.floating.style.setProperty('box-sizing', 'border-box');\n        elements.floating.style.setProperty(`max-${dimension}`, `${availableSize}px`);\n\n        if (rects.floating[dimension] > availableSize) {\n          elements.floating.style.setProperty(dimension, `${availableSize}px`);\n\n          const axis = dimension === 'width' ? 'x' : 'y';\n          if (!elements.floating.style.getPropertyValue(`overflow-${axis}`)) {\n            elements.floating.style.setProperty(`overflow-${axis}`, 'auto');\n          }\n        }\n      };\n\n      const { applyMaxWidth, applyMaxHeight } = autoSize;\n      applyMaxSizeStyles(applyMaxWidth, 'width', availableWidth);\n      applyMaxSizeStyles(applyMaxHeight, 'height', availableHeight);\n    },\n  });\n}\n"],"names":["size","getBoundary","toFloatingUIPadding","resetMaxSize","autoSize","name","fn","middlewareData","elements","maxSizeAlreadyReset","applyMaxWidth","applyMaxHeight","floating","style","removeProperty","data","reset","rects","maxSize","options","container","overflowBoundary","overflowBoundaryPadding","isRtl","padding","altBoundary","boundary","apply","availableHeight","availableWidth","applyMaxSizeStyles","dimension","availableSize","setProperty","axis","getPropertyValue"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,SAASA,IAAI,QAAQ,mBAAmB;AAGxC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,mBAAmB,QAAQ,WAAW;AAO/C;;;;CAIC,GACD,OAAO,MAAMC,eAAe,CAACC,WAA8C,CAAA;QACzEC,MAAM;QACNC,IAAG,EAAEC,cAAc,EAAEC,QAAQ,EAAE;gBACzBD;YAAJ,KAAIA,+BAAAA,eAAeJ,YAAY,cAA3BI,mDAAAA,6BAA6BE,mBAAmB,EAAE;gBACpD,OAAO,CAAC;YACV;YAEA,MAAM,EAAEC,aAAa,EAAEC,cAAc,EAAE,GAAGP;YAC1C,IAAIM,eAAe;gBACjBF,SAASI,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCN,SAASI,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCN,SAASI,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;YACzC;YACA,IAAIH,gBAAgB;gBAClBH,SAASI,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCN,SAASI,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCN,SAASI,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;YACzC;YAEA,OAAO;gBACLC,MAAM;oBAAEN,qBAAqB;gBAAK;gBAClCO,OAAO;oBAAEC,OAAO;gBAAK;YACvB;QACF;IACF,CAAA,EAAG;AAEH,OAAO,SAASC,QAAQd,QAA4B,EAAEe,OAAiC;IACrF,MAAM,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,uBAAuB,EAAEC,KAAK,EAAE,GAAGJ;IACxE,OAAOnB,KAAK;QACV,GAAIsB,2BAA2B;YAAEE,SAAStB,oBAAoBoB,yBAAyBC;QAAO,CAAC;QAC/F,GAAIF,oBAAoB;YAAEI,aAAa;YAAMC,UAAUzB,YAAYmB,WAAWC;QAAkB,CAAC;QACjGM,OAAM,EAAEC,eAAe,EAAEC,cAAc,EAAErB,QAAQ,EAAES,KAAK,EAAE;YACxD,MAAMa,qBAAqB,CAACH,OAAgBI,WAA+BC;gBACzE,IAAI,CAACL,OAAO;oBACV;gBACF;gBAEAnB,SAASI,QAAQ,CAACC,KAAK,CAACoB,WAAW,CAAC,cAAc;gBAClDzB,SAASI,QAAQ,CAACC,KAAK,CAACoB,WAAW,CAAC,CAAC,IAAI,EAAEF,UAAU,CAAC,EAAE,CAAC,EAAEC,cAAc,EAAE,CAAC;gBAE5E,IAAIf,MAAML,QAAQ,CAACmB,UAAU,GAAGC,eAAe;oBAC7CxB,SAASI,QAAQ,CAACC,KAAK,CAACoB,WAAW,CAACF,WAAW,CAAC,EAAEC,cAAc,EAAE,CAAC;oBAEnE,MAAME,OAAOH,cAAc,UAAU,MAAM;oBAC3C,IAAI,CAACvB,SAASI,QAAQ,CAACC,KAAK,CAACsB,gBAAgB,CAAC,CAAC,SAAS,EAAED,KAAK,CAAC,GAAG;wBACjE1B,SAASI,QAAQ,CAACC,KAAK,CAACoB,WAAW,CAAC,CAAC,SAAS,EAAEC,KAAK,CAAC,EAAE;oBAC1D;gBACF;YACF;YAEA,MAAM,EAAExB,aAAa,EAAEC,cAAc,EAAE,GAAGP;YAC1C0B,mBAAmBpB,eAAe,SAASmB;YAC3CC,mBAAmBnB,gBAAgB,UAAUiB;QAC/C;IACF;AACF"}