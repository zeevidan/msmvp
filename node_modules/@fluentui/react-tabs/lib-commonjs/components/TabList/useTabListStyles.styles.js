"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    tabListClassNames: function() {
        return tabListClassNames;
    },
    useTabListStyles_unstable: function() {
        return useTabListStyles_unstable;
    }
});
const _react = require("@griffel/react");
const tabListClassNames = {
    root: 'fui-TabList'
};
/**
 * Styles for the root slot
 */ const useStyles = /*#__PURE__*/ (0, _react.__styles)({
    root: {
        mc9l5x: "f22iagw",
        Beiy3e4: "f1063pyq",
        Bnnss6s: "fi64zpg",
        Eh141a: "flvyvdh",
        qhf8xq: "f10pi13n"
    },
    horizontal: {
        Bt984gj: "f1q9h2pe",
        Beiy3e4: "f1063pyq"
    },
    vertical: {
        Bt984gj: "f1q9h2pe",
        Beiy3e4: "f1vx9l62"
    },
    roundedSmall: {
        i8kkvl: 0,
        Belr9w4: 0,
        rmohyg: "f1eyhf9v"
    },
    rounded: {
        i8kkvl: 0,
        Belr9w4: 0,
        rmohyg: "faqewft"
    }
}, {
    d: [
        ".f22iagw{display:flex;}",
        ".f1063pyq{flex-direction:row;}",
        ".fi64zpg{flex-shrink:0;}",
        ".flvyvdh{flex-wrap:nowrap;}",
        ".f10pi13n{position:relative;}",
        ".f1q9h2pe{align-items:stretch;}",
        ".f1vx9l62{flex-direction:column;}",
        [
            ".f1eyhf9v{gap:var(--spacingHorizontalSNudge);}",
            {
                p: -1
            }
        ],
        [
            ".faqewft{gap:var(--spacingHorizontalS);}",
            {
                p: -1
            }
        ]
    ]
});
const useTabListStyles_unstable = (state)=>{
    'use no memo';
    const { appearance, vertical, size } = state;
    const styles = useStyles();
    const isRounded = appearance === 'subtle-circular' || appearance === 'filled-circular';
    state.root.className = (0, _react.mergeClasses)(tabListClassNames.root, styles.root, vertical ? styles.vertical : styles.horizontal, isRounded && (size === 'small' ? styles.roundedSmall : styles.rounded), state.root.className);
    return state;
};
