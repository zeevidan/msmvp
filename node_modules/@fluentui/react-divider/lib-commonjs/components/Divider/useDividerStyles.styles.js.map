{"version":3,"sources":["useDividerStyles.styles.js"],"sourcesContent":["import { mergeClasses, shorthands, makeStyles } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const dividerClassNames = {\n    root: 'fui-Divider',\n    wrapper: 'fui-Divider__wrapper'\n};\nconst contentSpacing = '12px';\nconst insetSpacing = '12px';\nconst maxStartEndLength = '8px';\nconst minStartEndLength = '8px;';\nconst useBaseStyles = makeStyles({\n    // Base styles\n    base: {\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'row',\n        flexGrow: 1,\n        position: 'relative',\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase200,\n        fontWeight: tokens.fontWeightRegular,\n        lineHeight: tokens.lineHeightBase200,\n        textAlign: 'center',\n        '::before': {\n            boxSizing: 'border-box',\n            display: 'flex',\n            flexGrow: 1\n        },\n        '::after': {\n            boxSizing: 'border-box',\n            display: 'flex',\n            flexGrow: 1\n        }\n    },\n    // Childless styles\n    childless: {\n        '::before': {\n            marginBottom: 0,\n            marginRight: 0\n        },\n        '::after': {\n            marginLeft: 0,\n            marginTop: 0\n        }\n    },\n    // Alignment variations\n    start: {\n        '::after': {\n            content: '\"\"'\n        }\n    },\n    center: {\n        '::before': {\n            content: '\"\"'\n        },\n        '::after': {\n            content: '\"\"'\n        }\n    },\n    end: {\n        '::before': {\n            content: '\"\"'\n        }\n    },\n    // Appearance variations\n    brand: {\n        color: tokens.colorBrandForeground1,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorBrandStroke1)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorBrandStroke1)\n        }\n    },\n    default: {\n        color: tokens.colorNeutralForeground2,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke2)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke2)\n        }\n    },\n    subtle: {\n        color: tokens.colorNeutralForeground3,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke3)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke3)\n        }\n    },\n    strong: {\n        color: tokens.colorNeutralForeground1,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1)\n        }\n    }\n});\nconst useHorizontalStyles = makeStyles({\n    // Base styles\n    base: {\n        width: '100%',\n        '::before': {\n            borderTopStyle: 'solid',\n            borderTopWidth: tokens.strokeWidthThin,\n            minWidth: minStartEndLength\n        },\n        '::after': {\n            borderTopStyle: 'solid',\n            borderTopWidth: tokens.strokeWidthThin,\n            minWidth: minStartEndLength\n        }\n    },\n    // Inset styles\n    inset: {\n        paddingLeft: insetSpacing,\n        paddingRight: insetSpacing\n    },\n    // Alignment variations\n    start: {\n        '::before': {\n            content: '\"\"',\n            marginRight: contentSpacing,\n            maxWidth: maxStartEndLength\n        },\n        '::after': {\n            marginLeft: contentSpacing\n        }\n    },\n    center: {\n        '::before': {\n            marginRight: contentSpacing\n        },\n        '::after': {\n            marginLeft: contentSpacing\n        }\n    },\n    end: {\n        '::before': {\n            marginRight: contentSpacing\n        },\n        '::after': {\n            content: '\"\"',\n            marginLeft: contentSpacing,\n            maxWidth: maxStartEndLength\n        }\n    }\n});\nconst useVerticalStyles = makeStyles({\n    // Base styles\n    base: {\n        flexDirection: 'column',\n        minHeight: '20px',\n        '::before': {\n            borderRightStyle: 'solid',\n            borderRightWidth: tokens.strokeWidthThin,\n            minHeight: minStartEndLength\n        },\n        '::after': {\n            borderRightStyle: 'solid',\n            borderRightWidth: tokens.strokeWidthThin,\n            minHeight: minStartEndLength\n        }\n    },\n    // Inset styles\n    inset: {\n        marginTop: insetSpacing,\n        marginBottom: insetSpacing\n    },\n    // With children styles\n    withChildren: {\n        minHeight: '84px'\n    },\n    // Alignment variations\n    start: {\n        '::before': {\n            content: '\"\"',\n            marginBottom: contentSpacing,\n            maxHeight: maxStartEndLength\n        },\n        '::after': {\n            marginTop: contentSpacing\n        }\n    },\n    center: {\n        '::before': {\n            marginBottom: contentSpacing\n        },\n        '::after': {\n            marginTop: contentSpacing\n        }\n    },\n    end: {\n        '::before': {\n            marginBottom: contentSpacing\n        },\n        '::after': {\n            content: '\"\"',\n            marginTop: contentSpacing,\n            maxHeight: maxStartEndLength\n        }\n    }\n});\nexport const useDividerStyles_unstable = (state)=>{\n    'use no memo';\n    const baseStyles = useBaseStyles();\n    const horizontalStyles = useHorizontalStyles();\n    const verticalStyles = useVerticalStyles();\n    const { alignContent, appearance, inset, vertical } = state;\n    state.root.className = mergeClasses(dividerClassNames.root, // Base styles\n    baseStyles.base, baseStyles[alignContent], appearance && baseStyles[appearance], // Horizontal styles\n    !vertical && horizontalStyles.base, !vertical && inset && horizontalStyles.inset, !vertical && horizontalStyles[alignContent], // Vertical styles\n    vertical && verticalStyles.base, vertical && inset && verticalStyles.inset, vertical && verticalStyles[alignContent], vertical && state.root.children !== undefined && verticalStyles.withChildren, // Childless styles\n    state.root.children === undefined && baseStyles.childless, // User provided class name\n    state.root.className);\n    if (state.wrapper) {\n        state.wrapper.className = mergeClasses(dividerClassNames.wrapper, state.wrapper.className);\n    }\n    return state;\n};\n"],"names":["dividerClassNames","useDividerStyles_unstable","root","wrapper","contentSpacing","insetSpacing","maxStartEndLength","minStartEndLength","useBaseStyles","__styles","base","Bt984gj","B7ck84d","mc9l5x","Beiy3e4","Bh6795r","qhf8xq","Bahqtrf","Be2twd7","Bhrd7zp","Bg96gwp","fsow6f","Bcvre1j","Br0sdwz","Bn78ew0","li1rpt","ap17g6","B771hl4","childless","susq4k","Bicfajf","jwcpgy","B4rk6o","start","Bsft5z2","center","Ftih45","end","brand","sj55zd","Bq4z7u6","Bk5zm6e","Bqjgrrk","Bm6vgfq","B0n5ga8","s924m2","B1q35kw","Gp14am","subtle","strong","d","useHorizontalStyles","a9b677","Bdkvgpv","B0qfbqy","pbipgd","Bm2nyyq","xrcqlc","i5u598","inset","uwmqm3","z189sj","Bxwl2t9","Iy66sp","useVerticalStyles","sshi5w","m598lv","B4f6apu","zkzzav","Barhvk9","Ihftqj","Bde111x","B6of3ja","jrapky","withChildren","Bbdr6tz","gn64ia","state","baseStyles","horizontalStyles","verticalStyles","alignContent","appearance","vertical","className","mergeClasses","children","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}