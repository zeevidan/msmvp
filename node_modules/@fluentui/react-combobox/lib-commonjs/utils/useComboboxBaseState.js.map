{"version":3,"sources":["../src/utils/useComboboxBaseState.ts"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useControllableState, useEventCallback, useFirstMount } from '@fluentui/react-utilities';\nimport { ActiveDescendantChangeEvent, ActiveDescendantImperativeRef } from '@fluentui/react-aria';\nimport { useOptionCollection } from '../utils/useOptionCollection';\nimport { OptionValue } from '../utils/OptionCollection.types';\nimport { useSelection } from '../utils/useSelection';\nimport type { ComboboxBaseProps, ComboboxBaseOpenEvents, ComboboxBaseState } from './ComboboxBase.types';\nimport { SelectionEvents } from './Selection.types';\n\n/**\n * @internal\n * State shared between Combobox and Dropdown components\n */\nexport const useComboboxBaseState = (\n  props: ComboboxBaseProps & {\n    children?: React.ReactNode;\n    editable?: boolean;\n    disabled?: boolean;\n    freeform?: boolean;\n    activeDescendantController: ActiveDescendantImperativeRef;\n  },\n): ComboboxBaseState => {\n  'use no memo';\n\n  const {\n    appearance = 'outline',\n    disableAutoFocus,\n    children,\n    clearable = false,\n    editable = false,\n    inlinePopup = false,\n    mountNode = undefined,\n    multiselect,\n    onOpenChange,\n    size = 'medium',\n    activeDescendantController,\n    freeform = false,\n    disabled = false,\n    onActiveOptionChange = null,\n  } = props;\n\n  const optionCollection = useOptionCollection();\n  const { getOptionsMatchingValue } = optionCollection;\n\n  const { getOptionById } = optionCollection;\n  const getActiveOption = React.useCallback(() => {\n    const activeOptionId = activeDescendantController.active();\n    return activeOptionId ? getOptionById(activeOptionId) : undefined;\n  }, [activeDescendantController, getOptionById]);\n\n  // Keeping some kind of backwards compatible functionality here\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const UNSAFE_activeOption = getActiveOption();\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const UNSAFE_setActiveOption = React.useCallback(\n    (option: OptionValue | undefined | ((prev: OptionValue | undefined) => OptionValue | undefined)) => {\n      let nextOption: OptionValue | undefined = undefined;\n      if (typeof option === 'function') {\n        const activeOption = getActiveOption();\n        nextOption = option(activeOption);\n      }\n\n      if (nextOption) {\n        activeDescendantController.focus(nextOption.id);\n      } else {\n        activeDescendantController.blur();\n      }\n    },\n    [activeDescendantController, getActiveOption],\n  );\n\n  // track whether keyboard focus outline should be shown\n  // tabster/keyborg doesn't work here, since the actual keyboard focus target doesn't move\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  // track focused state to conditionally render collapsed listbox\n  // when the trigger is focused - the listbox should but hidden until the open state is changed\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const ignoreNextBlur = React.useRef(false);\n\n  // calculate value based on props, internal value changes, and selected options\n  const isFirstMount = useFirstMount();\n  const [controllableValue, setValue] = useControllableState({\n    state: props.value,\n    initialState: undefined,\n  });\n\n  const { selectedOptions, selectOption: baseSelectOption, clearSelection } = useSelection(props);\n\n  // reset any typed value when an option is selected\n  const selectOption = React.useCallback(\n    (ev: SelectionEvents, option: OptionValue) => {\n      ReactDOM.unstable_batchedUpdates(() => {\n        setValue(undefined);\n        baseSelectOption(ev, option);\n      });\n    },\n    [setValue, baseSelectOption],\n  );\n\n  const value = React.useMemo(() => {\n    // don't compute the value if it is defined through props or setValue,\n    if (controllableValue !== undefined) {\n      return controllableValue;\n    }\n\n    // handle defaultValue here, so it is overridden by selection\n    if (isFirstMount && props.defaultValue !== undefined) {\n      return props.defaultValue;\n    }\n\n    const selectedOptionsText = getOptionsMatchingValue(optionValue => {\n      return selectedOptions.includes(optionValue);\n    }).map(option => option.text);\n\n    if (multiselect) {\n      // editable inputs should not display multiple selected options in the input as text\n      return editable ? '' : selectedOptionsText.join(', ');\n    }\n\n    return selectedOptionsText[0];\n\n    // do not change value after isFirstMount changes,\n    // we do not want to accidentally override defaultValue on a second render\n    // unless another value is intentionally set\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controllableValue, editable, getOptionsMatchingValue, multiselect, selectedOptions]);\n\n  // Handle open state, which is shared with options in context\n  const [open, setOpenState] = useControllableState({\n    state: props.open,\n    defaultState: props.defaultOpen,\n    initialState: false,\n  });\n\n  const setOpen = React.useCallback(\n    (event: ComboboxBaseOpenEvents, newState: boolean) => {\n      if (disabled) {\n        return;\n      }\n      onOpenChange?.(event, { open: newState });\n      ReactDOM.unstable_batchedUpdates(() => {\n        if (!newState && !freeform) {\n          setValue(undefined);\n        }\n        setOpenState(newState);\n      });\n    },\n    [onOpenChange, setOpenState, setValue, freeform, disabled],\n  );\n\n  // update active option based on change in open state\n  React.useEffect(() => {\n    if (open) {\n      // if it is single-select and there is a selected option, start at the selected option\n      if (!multiselect && selectedOptions.length > 0) {\n        const selectedOption = getOptionsMatchingValue(v => v === selectedOptions[0]).pop();\n        if (selectedOption?.id) {\n          activeDescendantController.focus(selectedOption.id);\n        }\n      }\n    } else {\n      activeDescendantController.blur();\n    }\n    // this should only be run in response to changes in the open state\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, activeDescendantController]);\n\n  // Fallback focus when children are updated in an open popover results in no item being focused\n  React.useEffect(() => {\n    if (open && !disableAutoFocus && !activeDescendantController.active()) {\n      activeDescendantController.first();\n    }\n    // this should only be run in response to changes in the open state or children\n  }, [open, children, disableAutoFocus, activeDescendantController, getOptionById]);\n\n  const onActiveDescendantChange = useEventCallback((event: ActiveDescendantChangeEvent) => {\n    const previousOption = event.detail.previousId ? optionCollection.getOptionById(event.detail.previousId) : null;\n    const nextOption = optionCollection.getOptionById(event.detail.id);\n    onActiveOptionChange?.(event, { event, type: 'change', previousOption, nextOption });\n  });\n\n  return {\n    ...optionCollection,\n    freeform,\n    disabled,\n    selectOption,\n    clearSelection,\n    selectedOptions,\n    activeOption: UNSAFE_activeOption,\n    appearance,\n    clearable,\n    focusVisible,\n    ignoreNextBlur,\n    inlinePopup,\n    mountNode,\n    open,\n    hasFocus,\n    setActiveOption: UNSAFE_setActiveOption,\n    setFocusVisible,\n    setHasFocus,\n    setOpen,\n    setValue,\n    size,\n    value,\n    multiselect,\n    onOptionClick: useEventCallback((e: React.MouseEvent<HTMLElement>) => {\n      if (!multiselect) {\n        setOpen(e, false);\n      }\n    }),\n    onActiveDescendantChange,\n  };\n};\n"],"names":["useComboboxBaseState","props","appearance","disableAutoFocus","children","clearable","editable","inlinePopup","mountNode","undefined","multiselect","onOpenChange","size","activeDescendantController","freeform","disabled","onActiveOptionChange","optionCollection","useOptionCollection","getOptionsMatchingValue","getOptionById","getActiveOption","React","useCallback","activeOptionId","active","UNSAFE_activeOption","UNSAFE_setActiveOption","option","nextOption","activeOption","focus","id","blur","focusVisible","setFocusVisible","useState","hasFocus","setHasFocus","ignoreNextBlur","useRef","isFirstMount","useFirstMount","controllableValue","setValue","useControllableState","state","value","initialState","selectedOptions","selectOption","baseSelectOption","clearSelection","useSelection","ev","ReactDOM","unstable_batchedUpdates","useMemo","defaultValue","selectedOptionsText","optionValue","includes","map","text","join","open","setOpenState","defaultState","defaultOpen","setOpen","event","newState","useEffect","length","selectedOption","v","pop","first","onActiveDescendantChange","useEventCallback","previousOption","detail","previousId","type","setActiveOption","onOptionClick","e"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}