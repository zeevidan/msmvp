{"version":3,"sources":["../src/components/TeachingPopoverCarousel/Carousel/Carousel.tsx"],"sourcesContent":["import * as React from 'react';\nimport { isHTMLElement, useMergedRefs, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useAnnounce, useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n\nimport { CAROUSEL_ITEM } from './constants';\nimport { useCarouselWalker_unstable } from './useCarouselWalker';\nimport { createCarouselStore } from './createCarouselStore';\nimport type { UseCarouselOptions } from './Carousel.types';\nimport { CarouselContextValue } from './CarouselContext';\n\n// TODO: Migrate this into an external @fluentui/carousel component\n// For now, we won't export this publicly, is only for internal TeachingPopover use until stabilized.\nexport function useCarousel_unstable(options: UseCarouselOptions) {\n  'use no memo';\n\n  const { announcement, onValueChange, onFinish } = options;\n\n  const { targetDocument } = useFluent();\n  const win = targetDocument?.defaultView;\n  const { ref: carouselRef, walker: carouselWalker } = useCarouselWalker_unstable();\n  const [store] = React.useState(() => createCarouselStore());\n\n  const [value, setValue] = useControllableState({\n    defaultState: options.defaultValue,\n    state: options.value,\n    initialState: null,\n  });\n  const rootRef = React.useRef<HTMLDivElement>(null);\n\n  const { announce } = useAnnounce();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (value === null) {\n        // eslint-disable-next-line no-console\n        console.error(\n          'useCarousel: Carousel needs to have a `defaultValue` or `value` prop set. If you want to control the value, use the `value` prop.',\n        );\n      }\n    }, [value]);\n  }\n\n  React.useEffect(() => {\n    const allItems = rootRef.current?.querySelectorAll(`[${CAROUSEL_ITEM}]`)!;\n\n    for (let i = 0; i < allItems.length; i++) {\n      store.addValue(allItems.item(i).getAttribute(CAROUSEL_ITEM)!);\n    }\n\n    return () => {\n      store.clear();\n    };\n  }, [store]);\n\n  React.useEffect(() => {\n    if (!win) {\n      return;\n    }\n\n    const config: MutationObserverInit = {\n      attributes: true,\n      attributeFilter: [CAROUSEL_ITEM],\n      childList: true,\n      subtree: true,\n    };\n\n    // Callback function to execute when mutations are observed\n    const callback: MutationCallback = mutationList => {\n      for (const mutation of mutationList) {\n        for (const addedNode of Array.from(mutation.addedNodes)) {\n          if (isHTMLElement(addedNode) && addedNode.hasAttribute(CAROUSEL_ITEM)) {\n            const newValue = addedNode.getAttribute(CAROUSEL_ITEM)!;\n            const newNode = carouselWalker.find(newValue);\n            if (!newNode?.value) {\n              return;\n            }\n\n            const previousNode = carouselWalker.prevPage(newNode?.value);\n            store.insertValue(newValue, previousNode?.value ?? null);\n          }\n        }\n\n        for (const removedNode of Array.from(mutation.removedNodes)) {\n          if (isHTMLElement(removedNode) && removedNode?.hasAttribute(CAROUSEL_ITEM)) {\n            const removedValue = removedNode.getAttribute(CAROUSEL_ITEM)!;\n\n            store.removeValue(removedValue);\n          }\n        }\n      }\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new win.MutationObserver(callback);\n\n    // Start observing the target node for configured mutations\n    observer.observe(rootRef.current!, config);\n\n    // Later, you can stop observing\n    return () => {\n      observer.disconnect();\n    };\n  }, [carouselWalker, store, win]);\n\n  const updateSlide = useEventCallback(\n    (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>, newValue: string) => {\n      setValue(newValue);\n      onValueChange?.(event, { event, type: 'click', value: newValue });\n\n      const announceText = announcement?.(newValue);\n      if (announceText) {\n        announce(announceText, { polite: true });\n      }\n    },\n  );\n\n  const selectPageByDirection: CarouselContextValue['selectPageByDirection'] = useEventCallback((event, direction) => {\n    const active = carouselWalker.active();\n\n    if (!active?.value) {\n      return;\n    }\n\n    const newPage =\n      direction === 'prev' ? carouselWalker.prevPage(active.value) : carouselWalker.nextPage(active.value);\n\n    if (newPage) {\n      updateSlide(event, newPage?.value);\n    } else {\n      onFinish?.(event, { event, type: 'click', value: active?.value });\n    }\n  });\n\n  return {\n    carouselRef: useMergedRefs(rootRef, carouselRef),\n    carousel: {\n      store,\n      value,\n      selectPageByDirection,\n      selectPageByValue: updateSlide,\n    },\n  };\n}\n"],"names":["useCarousel_unstable","options","announcement","onValueChange","onFinish","targetDocument","useFluent","win","defaultView","ref","carouselRef","walker","carouselWalker","useCarouselWalker_unstable","store","React","useState","createCarouselStore","value","setValue","useControllableState","defaultState","defaultValue","state","initialState","rootRef","useRef","announce","useAnnounce","process","env","NODE_ENV","useEffect","console","error","allItems","current","querySelectorAll","CAROUSEL_ITEM","i","length","addValue","item","getAttribute","clear","config","attributes","attributeFilter","childList","subtree","callback","mutationList","mutation","addedNode","Array","from","addedNodes","isHTMLElement","hasAttribute","newValue","newNode","find","previousNode","prevPage","insertValue","removedNode","removedNodes","removedValue","removeValue","observer","MutationObserver","observe","disconnect","updateSlide","useEventCallback","event","type","announceText","polite","selectPageByDirection","direction","active","newPage","nextPage","useMergedRefs","carousel","selectPageByValue"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}