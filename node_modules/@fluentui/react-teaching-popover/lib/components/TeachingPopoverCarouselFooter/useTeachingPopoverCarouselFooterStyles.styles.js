import { __styles, mergeClasses } from '@griffel/react';
export const teachingPopoverCarouselFooterClassNames = {
  root: 'fui-TeachingPopoverCarouselFooter',
  previous: 'fui-TeachingPopoverCarouselFooter__previous',
  next: 'fui-TeachingPopoverCarouselFooter__next'
};
// Todo: Page change animation & styles
const useStyles = /*#__PURE__*/__styles({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq"
  },
  rootCentered: {
    Brf1p80: "f1869bpl",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f19gb1f4"
  },
  rootRightAligned: {
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f19gb1f4",
    Bp34fd5: "f1y65ohq"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f1869bpl{justify-content:space-between;}", [".f19gb1f4{gap:8px;}", {
    p: -1
  }], [".f19gb1f4{gap:8px;}", {
    p: -1
  }], ".f1y65ohq :first-child{-webkit-margin-end:auto;margin-inline-end:auto;}"]
});
/** Applies style classnames to slots */
export const useTeachingPopoverCarouselFooterStyles_unstable = state => {
  'use no memo';

  const styles = useStyles();
  const {
    layout
  } = state;
  state.root.className = mergeClasses(teachingPopoverCarouselFooterClassNames.root, styles.root, layout === 'centered' ? styles.rootCentered : styles.rootRightAligned, state.root.className);
  if (state.previous) {
    state.previous.className = mergeClasses(teachingPopoverCarouselFooterClassNames.previous, state.previous.className);
  }
  state.next.className = mergeClasses(teachingPopoverCarouselFooterClassNames.next, state.next.className);
  return state;
};