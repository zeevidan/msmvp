{"version":3,"names":["__styles","mergeClasses","shorthands","tokens","createCustomFocusIndicatorStyle","teachingPopoverCarouselNavButtonClassNames","root","useStyles","mc9l5x","Bceei9c","B7ck84d","Bqenvij","a9b677","De3pzq","rootUnselected","Bgfg5da","B9xav0g","oivjwe","Bn0qgzm","B4g9neb","zhjwy3","wvpqe5","ibv6hh","u1mtju","h3c5rm","vrafjx","Bekrc4i","i8vvqc","g2u3we","icvyot","B4j52fo","irswps","Beyfa6y","Bbmb7ep","Btl43ni","B7oj6ja","Dimara","Byoj8tv","uwmqm3","z189sj","z8tnut","B0ocmuz","Bw0xxkn","oeaueh","Bpd4iqm","Befb4lg","Bfpq7zp","g9k6zt","Bn4voq9","giviqs","Bw81rd7","kdpuga","dm238s","B6xbmo0","B3whbx2","B8q5s1w","Bci5o5g","n8qw10","Bdrgwmp","Bfclv37","B372c46","rootSelected","Bsw6fvg","rootBrand","rootBrandUnselected","d","p","t","m","useTeachingPopoverCarouselNavButtonStyles_unstable","state","styles","appearance","isSelected","brandStyles","className"],"sources":["useTeachingPopoverCarouselNavButtonStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport { createCustomFocusIndicatorStyle } from '@fluentui/react-tabster';\nexport const teachingPopoverCarouselNavButtonClassNames = {\n    root: 'fui-TeachingPopoverCarouselNavButton'\n};\n/**\n * Styles for the root slot\n */ const useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        cursor: 'pointer',\n        boxSizing: 'border-box',\n        height: '8px',\n        width: '8px',\n        backgroundColor: tokens.colorBrandBackground\n    },\n    rootUnselected: {\n        border: 'none',\n        borderRadius: '50%',\n        padding: '0px',\n        outline: `${tokens.strokeWidthThin} solid transparent`,\n        ...createCustomFocusIndicatorStyle({\n            outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,\n            borderRadius: tokens.borderRadiusMedium,\n            ...shorthands.borderColor('transparent')\n        }),\n        backgroundColor: `color-mix(in srgb, ${tokens.colorBrandBackground} 30%, transparent)`,\n        '@supports not (color: color-mix(in lch, white, black))': {\n            // This will also affect the focus border, but only in older unsupported browsers\n            opacity: 0.3,\n            backgroundColor: tokens.colorBrandBackground\n        }\n    },\n    rootSelected: {\n        outline: `${tokens.strokeWidthThin} solid transparent`,\n        width: '16px',\n        border: 'none',\n        borderRadius: '4px',\n        padding: '0px',\n        ...createCustomFocusIndicatorStyle({\n            outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,\n            borderRadius: tokens.borderRadiusMedium,\n            ...shorthands.borderColor('transparent')\n        }),\n        '@media (forced-colors: active)': {\n            backgroundColor: 'CanvasText'\n        }\n    },\n    rootBrand: {\n        backgroundColor: tokens.colorNeutralForegroundOnBrand\n    },\n    rootBrandUnselected: {\n        backgroundColor: `color-mix(in srgb, ${tokens.colorNeutralForegroundOnBrand} 30%, transparent)`,\n        '@supports not (color: color-mix(in lch, white, black))': {\n            // This will also affect the focus border, but only in older unsupported browsers\n            opacity: 0.3,\n            backgroundColor: tokens.colorBrandBackground\n        }\n    }\n});\n/**\n * Apply styling to the TeachingPopoverCarouselNavButton slots based on the state\n */ export const useTeachingPopoverCarouselNavButtonStyles_unstable = (state)=>{\n    'use no memo';\n    const styles = useStyles();\n    const { appearance, isSelected } = state;\n    const brandStyles = isSelected ? styles.rootBrand : styles.rootBrandUnselected;\n    state.root.className = mergeClasses(teachingPopoverCarouselNavButtonClassNames.root, styles.root, isSelected ? styles.rootSelected : styles.rootUnselected, appearance === 'brand' && brandStyles, state.root.className);\n    return state;\n};\n"],"mappings":"AAAA,SAAAA,QAAA,EAAqBC,YAAY,EAAEC,UAAU,QAAQ,gBAAgB;AACrE,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,+BAA+B,QAAQ,yBAAyB;AACzE,OAAO,MAAMC,0CAA0C,GAAG;EACtDC,IAAI,EAAE;AACV,CAAC;AACD;AACA;AACA;AAAI,MAAMC,SAAS,gBAAGP,QAAA;EAAAM,IAAA;IAAAE,MAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,MAAA;EAAA;EAAAC,cnB,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAjC,MAAA;IAAAG,OAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAK,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAI,OAAA;EAAA;EAAAC,SAAA;IAAAlD,MAAA;EAAA;EAAAmD,mBAAA;IAAAnD,MAAA;IAAA8C,OAAA;IAAAC,OAAA;EAAA;AAAA;EAAAK,CAAA;IAAAC,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;IAAAA,CAAA;EAAA;EAAAC,CAAA;EAAAC,CAAA;IAAAA,CAAA;EAAA;AAAA,CAoDrB,CAAC;AACF;AACA;AACA;AAAI,OAAO,MAAMC,kDAAkD,GAAIC,KAAK,IAAG;EAC3E,aAAa;;EACb,MAAMC,MAAM,GAAGhE,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEiE,UAAU;IAAEC;EAAW,CAAC,GAAGH,KAAK;EACxC,MAAMI,WAAW,GAAGD,UAAU,GAAGF,MAAM,CAACR,SAAS,GAAGQ,MAAM,CAACP,mBAAmB;EAC9EM,KAAK,CAAChE,IAAI,CAACqE,SAAS,GAAG1E,YAAY,CAACI,0CAA0C,CAACC,IAAI,EAAEiE,MAAM,CAACjE,IAAI,EAAEmE,UAAU,GAAGF,MAAM,CAACV,YAAY,GAAGU,MAAM,CAACzD,cAAc,EAAE0D,UAAU,KAAK,OAAO,IAAIE,WAAW,EAAEJ,KAAK,CAAChE,IAAI,CAACqE,SAAS,CAAC;EACxN,OAAOL,KAAK;AAChB,CAAC","ignoreList":[]}