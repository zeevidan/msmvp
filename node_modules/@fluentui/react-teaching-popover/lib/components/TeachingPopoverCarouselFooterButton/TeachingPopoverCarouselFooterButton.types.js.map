{"version":3,"sources":["../src/components/TeachingPopoverCarouselFooterButton/TeachingPopoverCarouselFooterButton.types.ts"],"sourcesContent":["import * as React from 'react';\nimport type { ComponentProps, ComponentState, Slot } from '@fluentui/react-utilities';\nimport { PopoverContextValue } from '@fluentui/react-popover';\nimport { ButtonProps, ButtonState } from '@fluentui/react-button';\nimport { ARIAButtonSlotProps } from '@fluentui/react-aria';\n\nexport type TeachingPopoverCarouselFooterButtonSlots = {\n  root: NonNullable<Slot<ARIAButtonSlotProps<'a'>>>;\n};\n\n/**\n * TeachingPopoverCarouselFooterButton Props\n */\nexport type TeachingPopoverCarouselFooterButtonProps = ComponentProps<TeachingPopoverCarouselFooterButtonSlots> &\n  ButtonProps & {\n    /**\n     * Defines whether the button should be next or previous type - used for both styling and functionality.\n     */\n    navType: 'next' | 'prev';\n\n    /**\n     * The ReactNode provided to the button when it is on it's first (navType 'prev') or last (navType 'next') step\n     */\n    altText: React.ReactNode;\n  };\n\n/**\n * State used in rendering TeachingPopoverCarouselFooterButton\n */\nexport type TeachingPopoverCarouselFooterButtonState = ButtonState &\n  ComponentState<TeachingPopoverCarouselFooterButtonSlots> &\n  Pick<TeachingPopoverCarouselFooterButtonProps, 'navType' | 'altText'> & {\n    /* Rename popover appearance to prevent conflict with button appearance */\n    popoverAppearance: PopoverContextValue['appearance'];\n  };\n"],"names":["React"],"rangeMappings":"","mappings":"AAAA,YAAYA,WAAW,QAAQ"}