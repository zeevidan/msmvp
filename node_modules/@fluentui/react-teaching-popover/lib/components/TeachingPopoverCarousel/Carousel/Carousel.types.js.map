{"version":3,"sources":["../src/components/TeachingPopoverCarousel/Carousel/Carousel.types.ts"],"sourcesContent":["import * as React from 'react';\nimport { EventData, EventHandler } from '@fluentui/react-utilities';\n\nexport type CarouselStore = {\n  clear: () => void;\n  addValue: (value: string) => void;\n  insertValue: (value: string, prev: string | null) => void;\n  removeValue: (value: string) => void;\n  subscribe: (listener: () => void) => () => void;\n  getSnapshot: () => string[];\n};\n\nexport type CarouselItem = {\n  el: HTMLElement;\n  value: string | null;\n};\n\nexport type UseCarouselOptions = {\n  /**\n   * Localizes the string used to announce carousel page changes to screen reader users\n   * Defaults to: undefined\n   */\n  announcement?: (newValue: string) => string;\n\n  /**\n   * The initial page to display in uncontrolled mode.\n   */\n  defaultValue?: string;\n\n  /**\n   * The value of the currently active page.\n   */\n  value?: string;\n\n  /**\n   * Callback to notify a page change.\n   */\n  onValueChange?: EventHandler<CarouselValueChangeData>;\n\n  /**\n   * Callback to notify when the final button step of a carousel has been activated.\n   */\n  onFinish?: EventHandler<CarouselValueChangeData>;\n};\n\nexport type CarouselValueChangeData = EventData<'click', React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>> & {\n  /**\n   * The value to be set after event has occurred.\n   */\n  value?: string;\n};\n"],"names":["React"],"rangeMappings":"","mappings":"AAAA,YAAYA,WAAW,QAAQ"}