{"version":3,"sources":["useBreadcrumbButtonStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useButtonStyles_unstable, buttonClassNames } from '@fluentui/react-button';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { iconFilledClassName, iconRegularClassName } from '@fluentui/react-icons';\n/**\n * Static CSS class names used internally for the component slots.\n */ export const breadcrumbButtonClassNames = {\n    root: 'fui-BreadcrumbButton',\n    icon: 'fui-BreadcrumbButton__icon'\n};\n/**\n * CSS variable names used internally for styling in the Breadcrumb.\n */ const breadcrumbCSSVars = {\n    breadcrumbIconSizeVar: '--fui-Breadcrumb--icon-size',\n    breadcrumbIconLineHeightVar: '--fui-Breadcrumb--icon-line-height'\n};\nconst useIconStyles = makeStyles({\n    base: {\n        fontSize: `var(${breadcrumbCSSVars.breadcrumbIconSizeVar})`,\n        height: `var(${breadcrumbCSSVars.breadcrumbIconSizeVar})`,\n        lineHeight: `var(${breadcrumbCSSVars.breadcrumbIconLineHeightVar})`,\n        width: `var(${breadcrumbCSSVars.breadcrumbIconSizeVar})`,\n        marginRight: tokens.spacingHorizontalXS\n    },\n    small: {\n        [breadcrumbCSSVars.breadcrumbIconSizeVar]: '12px',\n        [breadcrumbCSSVars.breadcrumbIconLineHeightVar]: tokens.lineHeightBase200\n    },\n    medium: {\n        [breadcrumbCSSVars.breadcrumbIconSizeVar]: '16px',\n        [breadcrumbCSSVars.breadcrumbIconLineHeightVar]: tokens.lineHeightBase400\n    },\n    large: {\n        [breadcrumbCSSVars.breadcrumbIconSizeVar]: '20px',\n        [breadcrumbCSSVars.breadcrumbIconLineHeightVar]: tokens.lineHeightBase600\n    }\n});\nconst defaultButtonStyles = {\n    backgroundColor: tokens.colorTransparentBackground,\n    color: tokens.colorNeutralForeground2,\n    cursor: 'auto'\n};\nconst currentIconStyles = {\n    ...defaultButtonStyles,\n    [`& .${buttonClassNames.icon}`]: {\n        color: 'unset'\n    },\n    [`& .${iconFilledClassName}`]: {\n        display: 'none'\n    },\n    [`& .${iconRegularClassName}`]: {\n        display: 'inline'\n    }\n};\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 'unset',\n        textWrap: 'nowrap'\n    },\n    small: {\n        height: '24px',\n        ...typographyStyles.caption1,\n        padding: tokens.spacingHorizontalSNudge\n    },\n    medium: {\n        height: '32px',\n        ...typographyStyles.body1,\n        padding: tokens.spacingHorizontalSNudge\n    },\n    large: {\n        height: '40px',\n        ...typographyStyles.body2,\n        padding: tokens.spacingHorizontalS\n    },\n    current: {\n        ':hover': {\n            ...currentIconStyles\n        },\n        ':hover:active': {\n            ...currentIconStyles\n        },\n        ':disabled': {\n            ...currentIconStyles\n        }\n    },\n    currentSmall: {\n        ...typographyStyles.caption1Strong\n    },\n    currentMedium: {\n        ...typographyStyles.body1Strong\n    },\n    currentLarge: {\n        ...typographyStyles.subtitle2\n    }\n});\n/**\n * Apply styling to the BreadcrumbButton slots based on the state\n */ export const useBreadcrumbButtonStyles_unstable = (state)=>{\n    'use no memo';\n    const styles = useStyles();\n    const iconStyles = useIconStyles();\n    const currentSizeMap = {\n        small: styles.currentSmall,\n        medium: styles.currentMedium,\n        large: styles.currentLarge\n    };\n    state.root.className = mergeClasses(breadcrumbButtonClassNames.root, styles[state.size], styles.root, state.current && currentSizeMap[state.size], state.current && styles.current, state.root.className);\n    if (state.icon) {\n        state.icon.className = mergeClasses(iconStyles.base, iconStyles[state.size], state.icon.className);\n    }\n    useButtonStyles_unstable(state);\n    return state;\n};\n"],"names":["breadcrumbButtonClassNames","useBreadcrumbButtonStyles_unstable","root","icon","breadcrumbCSSVars","breadcrumbIconSizeVar","breadcrumbIconLineHeightVar","useIconStyles","__styles","base","Be2twd7","Bqenvij","Bg96gwp","a9b677","t21cq0","small","u3h8gg","Biu6dll","medium","large","d","defaultButtonStyles","backgroundColor","tokens","colorTransparentBackground","color","colorNeutralForeground2","cursor","currentIconStyles","buttonClassNames","iconFilledClassName","display","iconRegularClassName","useStyles","Bf4jedk","j4b8c3","Bahqtrf","Bhrd7zp","Byoj8tv","uwmqm3","z189sj","z8tnut","B0ocmuz","current","Jwef8y","Bi91k9c","eoavqd","Bbdnnc7","Bk3fhr4","Bmfj8id","iro3zm","B2d53fq","c3iz72","x3br3k","em6i61","vm6p8p","Bszkowt","Dyrjrp","ezr58z","nhk3du","Bfrek18","G209fr","currentSmall","currentMedium","currentLarge","p","h","state","styles","iconStyles","currentSizeMap","className","mergeClasses","size","useButtonStyles_unstable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}