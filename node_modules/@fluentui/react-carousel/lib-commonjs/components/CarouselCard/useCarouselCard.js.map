{"version":3,"sources":["../src/components/CarouselCard/useCarouselCard.ts"],"sourcesContent":["import { useFocusableGroup } from '@fluentui/react-tabster';\nimport {\n  getIntrinsicElementProps,\n  isHTMLElement,\n  mergeCallbacks,\n  slot,\n  useMergedRefs,\n  useId,\n} from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { useCarouselContext_unstable as useCarouselContext } from '../CarouselContext';\nimport type { CarouselVisibilityChangeEvent } from '../Carousel/Carousel.types';\nimport { EMBLA_VISIBILITY_EVENT } from '../useEmblaCarousel';\nimport type { CarouselCardProps, CarouselCardState } from './CarouselCard.types';\nimport { carouselCardClassNames } from './useCarouselCardStyles.styles';\nimport { useCarouselSliderContext } from '../CarouselSlider/CarouselSliderContext';\n\n/**\n * Create the state required to render CarouselCard.\n *\n * The returned state can be modified with hooks such as useCarouselCardStyles_unstable,\n * before being passed to renderCarouselCard_unstable.\n *\n * @param props - props from this instance of CarouselCard\n * @param ref - reference to root HTMLDivElement of CarouselCard\n */\nexport const useCarouselCard_unstable = (\n  props: CarouselCardProps,\n  ref: React.Ref<HTMLDivElement>,\n): CarouselCardState => {\n  const { autoSize } = props;\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const isMouseEvent = React.useRef<boolean>(false);\n  const selectPageByElement = useCarouselContext(ctx => ctx.selectPageByElement);\n  const containerRef = useCarouselContext(ctx => ctx.containerRef);\n  const { cardFocus } = useCarouselSliderContext();\n\n  const focusAttr = useFocusableGroup({\n    tabBehavior: 'limited',\n  });\n  const focusAttrProps = cardFocus ? { ...focusAttr, tabIndex: 0 } : {};\n\n  // We attach a unique card id if user does not provide\n  const id = useId(carouselCardClassNames.root, props.id);\n\n  React.useEffect(() => {\n    const element = elementRef.current;\n\n    if (element) {\n      const listener = (_e: Event) => {\n        const event = _e as CarouselVisibilityChangeEvent;\n        // When there is no tab index present, only current cards should be visible to accessibility\n        if (!cardFocus) {\n          const hidden = !event.detail.isVisible;\n          element.ariaHidden = hidden.toString();\n          element.inert = hidden;\n        }\n      };\n\n      element.addEventListener(EMBLA_VISIBILITY_EVENT, listener);\n\n      return () => {\n        element.removeEventListener(EMBLA_VISIBILITY_EVENT, listener);\n      };\n    }\n  }, [cardFocus]);\n\n  const handleFocus = React.useCallback(\n    (e: React.FocusEvent) => {\n      if (!e.defaultPrevented && isHTMLElement(e.currentTarget) && !isMouseEvent.current) {\n        // We want to prevent any browser scroll intervention for 'offscreen' focus\n        containerRef?.current?.scrollTo(0, 0);\n        selectPageByElement(e, e.currentTarget, false);\n      }\n      // Mouse focus event has been consumed\n      isMouseEvent.current = false;\n    },\n    [selectPageByElement, containerRef],\n  );\n\n  const handlePointerDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!e.defaultPrevented) {\n      isMouseEvent.current = true;\n    }\n  };\n\n  const handlePointerUp = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!e.defaultPrevented) {\n      isMouseEvent.current = false;\n    }\n  };\n\n  const onFocusCapture = mergeCallbacks(props.onFocusCapture, handleFocus);\n  const onPointerUp = mergeCallbacks(props.onPointerUp, handlePointerUp);\n  const onPointerDown = mergeCallbacks(props.onPointerDown, handlePointerDown);\n\n  const state: CarouselCardState = {\n    autoSize,\n    components: {\n      root: 'div',\n    },\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        ref: useMergedRefs(elementRef, ref),\n        role: 'tabpanel',\n        tabIndex: cardFocus ? 0 : undefined,\n        ...props,\n        id,\n        onFocusCapture,\n        onPointerUp,\n        onPointerDown,\n        ...focusAttrProps,\n      }),\n      { elementType: 'div' },\n    ),\n  };\n\n  return state;\n};\n"],"names":["useCarouselCard_unstable","props","ref","autoSize","elementRef","React","useRef","isMouseEvent","selectPageByElement","useCarouselContext","ctx","containerRef","cardFocus","useCarouselSliderContext","focusAttr","useFocusableGroup","tabBehavior","focusAttrProps","tabIndex","id","useId","carouselCardClassNames","root","useEffect","element","current","listener","_e","event","hidden","detail","isVisible","ariaHidden","toString","inert","addEventListener","EMBLA_VISIBILITY_EVENT","removeEventListener","handleFocus","useCallback","e","defaultPrevented","isHTMLElement","currentTarget","scrollTo","handlePointerDown","handlePointerUp","onFocusCapture","mergeCallbacks","onPointerUp","onPointerDown","state","components","slot","always","getIntrinsicElementProps","useMergedRefs","role","undefined","elementType"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}