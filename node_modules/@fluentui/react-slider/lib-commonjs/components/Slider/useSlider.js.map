{"version":3,"sources":["../src/components/Slider/useSlider.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, useId, useMergedRefs, slot } from '@fluentui/react-utilities';\nimport { useSliderState_unstable } from './useSliderState';\nimport { SliderProps, SliderState } from './Slider.types';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n\nexport const useSlider_unstable = (props: SliderProps, ref: React.Ref<HTMLInputElement>): SliderState => {\n  // Merge props from surrounding <Field>, if any\n  props = useFieldControlProps_unstable(props, { supportsLabelFor: true });\n\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['onChange', 'size'],\n  });\n\n  const {\n    disabled,\n    vertical,\n    size = 'medium',\n    // Slots\n    root,\n    input,\n    rail,\n    thumb,\n  } = props;\n\n  const state: SliderState = {\n    disabled,\n    size,\n    vertical,\n    components: {\n      input: 'input',\n      rail: 'div',\n      root: 'div',\n      thumb: 'div',\n    },\n    root: slot.always(root, {\n      defaultProps: nativeProps.root,\n      elementType: 'div',\n    }),\n    input: slot.always(input, {\n      defaultProps: {\n        id: useId('slider-', props.id),\n        ref,\n        ...nativeProps.primary,\n        type: 'range',\n        orient: vertical ? 'vertical' : undefined,\n      },\n      elementType: 'input',\n    }),\n    rail: slot.always(rail, { elementType: 'div' }),\n    thumb: slot.always(thumb, { elementType: 'div' }),\n  };\n\n  state.root.ref = useMergedRefs(state.root.ref, useFocusWithin<HTMLDivElement>());\n\n  useSliderState_unstable(state, props);\n\n  return state;\n};\n"],"names":["useSlider_unstable","props","ref","useFieldControlProps_unstable","supportsLabelFor","nativeProps","getPartitionedNativeProps","primarySlotTagName","excludedPropNames","disabled","vertical","size","root","input","rail","thumb","state","components","slot","always","defaultProps","elementType","id","useId","primary","type","orient","undefined","useMergedRefs","useFocusWithin","useSliderState_unstable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAOaA;;;eAAAA;;;;iEAPU;4BACuB;gCACwB;gCAC9B;8BAET;AAExB,MAAMA,qBAAqB,CAACC,OAAoBC;IACrD,+CAA+C;IAC/CD,QAAQE,IAAAA,yCAAAA,EAA8BF,OAAO;QAAEG,kBAAkB;IAAK;IAEtE,MAAMC,cAAcC,IAAAA,yCAAAA,EAA0B;QAC5CL;QACAM,oBAAoB;QACpBC,mBAAmB;YAAC;YAAY;SAAO;IACzC;IAEA,MAAM,EACJC,QAAQ,EACRC,QAAQ,EACRC,OAAO,QAAQ,EAEfC,IAAI,EACJC,KAAK,EACLC,IAAI,EACJC,KAAK,EACN,GAAGd;IAEJ,MAAMe,QAAqB;QACzBP;QACAE;QACAD;QACAO,YAAY;YACVJ,OAAO;YACPC,MAAM;YACNF,MAAM;YACNG,OAAO;QACT;QACAH,MAAMM,oBAAAA,CAAKC,MAAM,CAACP,MAAM;YACtBQ,cAAcf,YAAYO,IAAI;YAC9BS,aAAa;QACf;QACAR,OAAOK,oBAAAA,CAAKC,MAAM,CAACN,OAAO;YACxBO,cAAc;gBACZE,IAAIC,IAAAA,qBAAAA,EAAM,WAAWtB,MAAMqB,EAAE;gBAC7BpB;gBACA,GAAGG,YAAYmB,OAAO;gBACtBC,MAAM;gBACNC,QAAQhB,WAAW,aAAaiB;YAClC;YACAN,aAAa;QACf;QACAP,MAAMI,oBAAAA,CAAKC,MAAM,CAACL,MAAM;YAAEO,aAAa;QAAM;QAC7CN,OAAOG,oBAAAA,CAAKC,MAAM,CAACJ,OAAO;YAAEM,aAAa;QAAM;IACjD;IAEAL,MAAMJ,IAAI,CAACV,GAAG,GAAG0B,IAAAA,6BAAAA,EAAcZ,MAAMJ,IAAI,CAACV,GAAG,EAAE2B,IAAAA,4BAAAA;IAE/CC,IAAAA,uCAAAA,EAAwBd,OAAOf;IAE/B,OAAOe;AACT"}