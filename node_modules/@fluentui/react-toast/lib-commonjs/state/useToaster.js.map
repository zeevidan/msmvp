{"version":3,"sources":["../src/state/useToaster.ts"],"sourcesContent":["import * as React from 'react';\nimport { isHTMLElement, useEventCallback, useForceUpdate } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createToaster } from './vanilla';\nimport type {\n  CommonToastDetail,\n  ShowToastEventDetail,\n  Toast,\n  ToastListenerMap,\n  ToastPosition,\n  ToasterId,\n  ToasterOptions,\n} from './types';\nimport { EVENTS } from './constants';\n\nexport function useToaster<TElement extends HTMLElement = HTMLDivElement>(options: Partial<ToasterOptions> = {}) {\n  const forceUpdate = useForceUpdate();\n  const { toasterId: userToasterId, shortcuts } = options;\n  // Currently the toaster options can never be changed at runtime\n  const [toaster] = React.useState(() => createToaster(options));\n  const { targetDocument } = useFluent();\n\n  const lastActiveElementRef = React.useRef<HTMLElement | null>(null);\n\n  const isCorrectToaster = useEventCallback((toasterId: ToasterId | undefined) => {\n    return toasterId === userToasterId;\n  });\n\n  const isFocusShortcut = useEventCallback((e: KeyboardEvent) => {\n    if (shortcuts?.focus) {\n      return shortcuts.focus(e);\n    }\n  });\n\n  const pauseAllToasts = React.useCallback(() => {\n    toaster.visibleToasts.forEach(toastId => {\n      const toast = toaster.toasts.get(toastId);\n      toast?.imperativeRef.current?.pause();\n    });\n  }, [toaster]);\n\n  const playAllToasts = React.useCallback(() => {\n    toaster.visibleToasts.forEach(toastId => {\n      const toast = toaster.toasts.get(toastId);\n      toast?.imperativeRef.current?.play();\n    });\n  }, [toaster]);\n\n  const getMostRecentVisibleToast = React.useCallback(() => {\n    return Array.from(toaster.visibleToasts).reduce((cur, next) => {\n      const toast = toaster.toasts.get(next);\n      if (!toast) {\n        return cur;\n      }\n\n      if (!cur) {\n        return toast;\n      }\n\n      if (cur.order < toast?.order) {\n        return toast;\n      }\n\n      return cur;\n    }, undefined as Toast | undefined);\n  }, [toaster]);\n\n  const tryRestoreFocus = React.useCallback(() => {\n    const mostRecentToast = getMostRecentVisibleToast();\n    if (mostRecentToast?.imperativeRef.current) {\n      mostRecentToast.imperativeRef.current.focus();\n    } else {\n      lastActiveElementRef.current?.focus();\n      lastActiveElementRef.current = null;\n    }\n  }, [getMostRecentVisibleToast]);\n\n  const closeAllToasts = React.useCallback(() => {\n    toaster.visibleToasts.forEach(toastId => {\n      const toast = toaster.toasts.get(toastId);\n      toast?.close();\n    });\n\n    tryRestoreFocus();\n  }, [toaster, tryRestoreFocus]);\n\n  React.useEffect(() => {\n    if (!targetDocument) {\n      return;\n    }\n\n    const addToastListener = <TType extends keyof ToastListenerMap>(\n      eventType: TType,\n      callback: ToastListenerMap[TType],\n    ) => {\n      const listener: ToastListenerMap[TType] = (e: CustomEvent<CommonToastDetail>) => {\n        if (!isCorrectToaster(e.detail.toasterId)) {\n          return;\n        }\n\n        callback(e as CustomEvent<ShowToastEventDetail>);\n        forceUpdate();\n      };\n\n      targetDocument.addEventListener(eventType, listener as () => void);\n      return () => targetDocument.removeEventListener(eventType, listener as () => void);\n    };\n\n    const buildToast: ToastListenerMap[typeof EVENTS.show] = e => {\n      toaster.buildToast(e.detail, forceUpdate);\n    };\n\n    const dismissToast: ToastListenerMap[typeof EVENTS.dismiss] = e => {\n      toaster.dismissToast(e.detail.toastId);\n    };\n\n    const updateToast: ToastListenerMap[typeof EVENTS.update] = e => {\n      toaster.updateToast(e.detail);\n    };\n\n    const dismissAllToasts: ToastListenerMap[typeof EVENTS.dismissAll] = e => {\n      toaster.dismissAllToasts();\n    };\n\n    const pauseToast: ToastListenerMap[typeof EVENTS.pause] = e => {\n      const toast = toaster.toasts.get(e.detail.toastId);\n      if (toast) {\n        toast.imperativeRef.current?.pause();\n      }\n    };\n\n    const playToast: ToastListenerMap[typeof EVENTS.play] = e => {\n      const toast = toaster.toasts.get(e.detail.toastId);\n      if (toast) {\n        toast.imperativeRef.current?.play();\n      }\n    };\n\n    const cleanupBuildListener = addToastListener(EVENTS.show, buildToast);\n    const cleanupUpdateListener = addToastListener(EVENTS.update, updateToast);\n    const cleanupDismissListener = addToastListener(EVENTS.dismiss, dismissToast);\n    const cleanupDismissAllListener = addToastListener(EVENTS.dismissAll, dismissAllToasts);\n    const cleanupPauseListener = addToastListener(EVENTS.pause, pauseToast);\n    const cleanupPlayListener = addToastListener(EVENTS.play, playToast);\n\n    const focusShortcutListener = (e: KeyboardEvent) => {\n      if (isFocusShortcut(e)) {\n        pauseAllToasts();\n        const mostRecentToast = getMostRecentVisibleToast();\n\n        if (mostRecentToast) {\n          lastActiveElementRef.current = isHTMLElement(targetDocument.activeElement)\n            ? targetDocument.activeElement\n            : null;\n          mostRecentToast.imperativeRef.current?.focus();\n        }\n      }\n    };\n\n    targetDocument.addEventListener('keydown', focusShortcutListener);\n\n    return () => {\n      cleanupBuildListener();\n      cleanupDismissAllListener();\n      cleanupUpdateListener();\n      cleanupDismissListener();\n      cleanupPauseListener();\n      cleanupPlayListener();\n\n      targetDocument.removeEventListener('keydown', focusShortcutListener);\n    };\n  }, [\n    toaster,\n    forceUpdate,\n    targetDocument,\n    isCorrectToaster,\n    pauseAllToasts,\n    getMostRecentVisibleToast,\n    isFocusShortcut,\n  ]);\n\n  const toastsToRender = (() => {\n    if (!toaster) {\n      return new Map<ToastPosition, Toast[]>();\n    }\n\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const toasts = Array.from(toaster.toasts.values());\n\n    toasts.forEach(toast => {\n      const { position } = toast;\n      toRender.has(position) || toRender.set(position, []);\n      if (position.startsWith('bottom')) {\n        toRender.get(position)!.push(toast);\n      } else {\n        toRender.get(position)!.unshift(toast);\n      }\n    });\n\n    return toRender;\n  })();\n\n  return {\n    isToastVisible: toaster.isToastVisible,\n    toastsToRender,\n    pauseAllToasts,\n    playAllToasts,\n    tryRestoreFocus,\n    closeAllToasts,\n  };\n}\n"],"names":["useToaster","options","forceUpdate","useForceUpdate","toasterId","userToasterId","shortcuts","toaster","React","useState","createToaster","targetDocument","useFluent","lastActiveElementRef","useRef","isCorrectToaster","useEventCallback","isFocusShortcut","e","focus","pauseAllToasts","useCallback","visibleToasts","forEach","toastId","toast","toasts","get","imperativeRef","current","pause","playAllToasts","play","getMostRecentVisibleToast","Array","from","reduce","cur","next","order","undefined","tryRestoreFocus","mostRecentToast","closeAllToasts","close","useEffect","addToastListener","eventType","callback","listener","detail","addEventListener","removeEventListener","buildToast","dismissToast","updateToast","dismissAllToasts","pauseToast","playToast","cleanupBuildListener","EVENTS","show","cleanupUpdateListener","update","cleanupDismissListener","dismiss","cleanupDismissAllListener","dismissAll","cleanupPauseListener","cleanupPlayListener","focusShortcutListener","isHTMLElement","activeElement","toastsToRender","Map","toRender","values","position","has","set","startsWith","push","unshift","isToastVisible"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAegBA;;;eAAAA;;;;iEAfO;gCACyC;qCAChB;yBAClB;2BAUP;AAEhB,SAASA,WAA0DC,UAAmC,CAAC,CAAC;IAC7G,MAAMC,cAAcC,IAAAA,8BAAAA;IACpB,MAAM,EAAEC,WAAWC,aAAa,EAAEC,SAAS,EAAE,GAAGL;IAChD,gEAAgE;IAChE,MAAM,CAACM,QAAQ,GAAGC,OAAMC,QAAQ,CAAC,IAAMC,IAAAA,sBAAAA,EAAcT;IACrD,MAAM,EAAEU,cAAc,EAAE,GAAGC,IAAAA,uCAAAA;IAE3B,MAAMC,uBAAuBL,OAAMM,MAAM,CAAqB;IAE9D,MAAMC,mBAAmBC,IAAAA,gCAAAA,EAAiB,CAACZ;QACzC,OAAOA,cAAcC;IACvB;IAEA,MAAMY,kBAAkBD,IAAAA,gCAAAA,EAAiB,CAACE;QACxC,IAAIZ,cAAAA,QAAAA,cAAAA,KAAAA,IAAAA,KAAAA,IAAAA,UAAWa,KAAK,EAAE;YACpB,OAAOb,UAAUa,KAAK,CAACD;QACzB;IACF;IAEA,MAAME,iBAAiBZ,OAAMa,WAAW,CAAC;QACvCd,QAAQe,aAAa,CAACC,OAAO,CAACC,CAAAA;gBAE5BC;YADA,MAAMA,QAAQlB,QAAQmB,MAAM,CAACC,GAAG,CAACH;YACjCC,UAAAA,QAAAA,UAAAA,KAAAA,IAAAA,KAAAA,IAAAA,CAAAA,+BAAAA,MAAOG,aAAa,CAACC,OAAO,AAAPA,MAAO,QAA5BJ,iCAAAA,KAAAA,IAAAA,KAAAA,IAAAA,6BAA8BK,KAAK;QACrC;IACF,GAAG;QAACvB;KAAQ;IAEZ,MAAMwB,gBAAgBvB,OAAMa,WAAW,CAAC;QACtCd,QAAQe,aAAa,CAACC,OAAO,CAACC,CAAAA;gBAE5BC;YADA,MAAMA,QAAQlB,QAAQmB,MAAM,CAACC,GAAG,CAACH;YACjCC,UAAAA,QAAAA,UAAAA,KAAAA,IAAAA,KAAAA,IAAAA,CAAAA,+BAAAA,MAAOG,aAAa,CAACC,OAAO,AAAPA,MAAO,QAA5BJ,iCAAAA,KAAAA,IAAAA,KAAAA,IAAAA,6BAA8BO,IAAI;QACpC;IACF,GAAG;QAACzB;KAAQ;IAEZ,MAAM0B,4BAA4BzB,OAAMa,WAAW,CAAC;QAClD,OAAOa,MAAMC,IAAI,CAAC5B,QAAQe,aAAa,EAAEc,MAAM,CAAC,CAACC,KAAKC;YACpD,MAAMb,QAAQlB,QAAQmB,MAAM,CAACC,GAAG,CAACW;YACjC,IAAI,CAACb,OAAO;gBACV,OAAOY;YACT;YAEA,IAAI,CAACA,KAAK;gBACR,OAAOZ;YACT;YAEA,IAAIY,IAAIE,KAAK,GAAGd,CAAAA,UAAAA,QAAAA,UAAAA,KAAAA,IAAAA,KAAAA,IAAAA,MAAOc,KAAK,AAALA,GAAO;gBAC5B,OAAOd;YACT;YAEA,OAAOY;QACT,GAAGG;IACL,GAAG;QAACjC;KAAQ;IAEZ,MAAMkC,kBAAkBjC,OAAMa,WAAW,CAAC;QACxC,MAAMqB,kBAAkBT;QACxB,IAAIS,oBAAAA,QAAAA,oBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,gBAAiBd,aAAa,CAACC,OAAO,EAAE;YAC1Ca,gBAAgBd,aAAa,CAACC,OAAO,CAACV,KAAK;QAC7C,OAAO;gBACLN;YAAAA,CAAAA,gCAAAA,qBAAqBgB,OAAO,AAAPA,MAAO,QAA5BhB,kCAAAA,KAAAA,IAAAA,KAAAA,IAAAA,8BAA8BM,KAAK;YACnCN,qBAAqBgB,OAAO,GAAG;QACjC;IACF,GAAG;QAACI;KAA0B;IAE9B,MAAMU,iBAAiBnC,OAAMa,WAAW,CAAC;QACvCd,QAAQe,aAAa,CAACC,OAAO,CAACC,CAAAA;YAC5B,MAAMC,QAAQlB,QAAQmB,MAAM,CAACC,GAAG,CAACH;YACjCC,UAAAA,QAAAA,UAAAA,KAAAA,IAAAA,KAAAA,IAAAA,MAAOmB,KAAK;QACd;QAEAH;IACF,GAAG;QAAClC;QAASkC;KAAgB;IAE7BjC,OAAMqC,SAAS,CAAC;QACd,IAAI,CAAClC,gBAAgB;YACnB;QACF;QAEA,MAAMmC,mBAAmB,CACvBC,WACAC;YAEA,MAAMC,WAAoC,CAAC/B;gBACzC,IAAI,CAACH,iBAAiBG,EAAEgC,MAAM,CAAC9C,SAAS,GAAG;oBACzC;gBACF;gBAEA4C,SAAS9B;gBACThB;YACF;YAEAS,eAAewC,gBAAgB,CAACJ,WAAWE;YAC3C,OAAO,IAAMtC,eAAeyC,mBAAmB,CAACL,WAAWE;QAC7D;QAEA,MAAMI,aAAmDnC,CAAAA;YACvDX,QAAQ8C,UAAU,CAACnC,EAAEgC,MAAM,EAAEhD;QAC/B;QAEA,MAAMoD,eAAwDpC,CAAAA;YAC5DX,QAAQ+C,YAAY,CAACpC,EAAEgC,MAAM,CAAC1B,OAAO;QACvC;QAEA,MAAM+B,cAAsDrC,CAAAA;YAC1DX,QAAQgD,WAAW,CAACrC,EAAEgC,MAAM;QAC9B;QAEA,MAAMM,mBAA+DtC,CAAAA;YACnEX,QAAQiD,gBAAgB;QAC1B;QAEA,MAAMC,aAAoDvC,CAAAA;YACxD,MAAMO,QAAQlB,QAAQmB,MAAM,CAACC,GAAG,CAACT,EAAEgC,MAAM,CAAC1B,OAAO;YACjD,IAAIC,OAAO;oBACTA;gBAAAA,CAAAA,+BAAAA,MAAMG,aAAa,CAACC,OAAO,AAAPA,MAAO,QAA3BJ,iCAAAA,KAAAA,IAAAA,KAAAA,IAAAA,6BAA6BK,KAAK;YACpC;QACF;QAEA,MAAM4B,YAAkDxC,CAAAA;YACtD,MAAMO,QAAQlB,QAAQmB,MAAM,CAACC,GAAG,CAACT,EAAEgC,MAAM,CAAC1B,OAAO;YACjD,IAAIC,OAAO;oBACTA;gBAAAA,CAAAA,+BAAAA,MAAMG,aAAa,CAACC,OAAO,AAAPA,MAAO,QAA3BJ,iCAAAA,KAAAA,IAAAA,KAAAA,IAAAA,6BAA6BO,IAAI;YACnC;QACF;QAEA,MAAM2B,uBAAuBb,iBAAiBc,iBAAAA,CAAOC,IAAI,EAAER;QAC3D,MAAMS,wBAAwBhB,iBAAiBc,iBAAAA,CAAOG,MAAM,EAAER;QAC9D,MAAMS,yBAAyBlB,iBAAiBc,iBAAAA,CAAOK,OAAO,EAAEX;QAChE,MAAMY,4BAA4BpB,iBAAiBc,iBAAAA,CAAOO,UAAU,EAAEX;QACtE,MAAMY,uBAAuBtB,iBAAiBc,iBAAAA,CAAO9B,KAAK,EAAE2B;QAC5D,MAAMY,sBAAsBvB,iBAAiBc,iBAAAA,CAAO5B,IAAI,EAAE0B;QAE1D,MAAMY,wBAAwB,CAACpD;YAC7B,IAAID,gBAAgBC,IAAI;gBACtBE;gBACA,MAAMsB,kBAAkBT;gBAExB,IAAIS,iBAAiB;wBAInBA;oBAHA7B,qBAAqBgB,OAAO,GAAG0C,IAAAA,6BAAAA,EAAc5D,eAAe6D,aAAa,IACrE7D,eAAe6D,aAAa,GAC5B;oBACJ9B,CAAAA,yCAAAA,gBAAgBd,aAAa,CAACC,OAAO,AAAPA,MAAO,QAArCa,2CAAAA,KAAAA,IAAAA,KAAAA,IAAAA,uCAAuCvB,KAAK;gBAC9C;YACF;QACF;QAEAR,eAAewC,gBAAgB,CAAC,WAAWmB;QAE3C,OAAO;YACLX;YACAO;YACAJ;YACAE;YACAI;YACAC;YAEA1D,eAAeyC,mBAAmB,CAAC,WAAWkB;QAChD;IACF,GAAG;QACD/D;QACAL;QACAS;QACAI;QACAK;QACAa;QACAhB;KACD;IAED,MAAMwD,iBAAiB,AAAC,CAAA;QACtB,IAAI,CAAClE,SAAS;YACZ,OAAO,IAAImE;QACb;QAEA,MAAMC,WAAW,IAAID;QACrB,MAAMhD,SAASQ,MAAMC,IAAI,CAAC5B,QAAQmB,MAAM,CAACkD,MAAM;QAE/ClD,OAAOH,OAAO,CAACE,CAAAA;YACb,MAAM,EAAEoD,QAAQ,EAAE,GAAGpD;YACrBkD,SAASG,GAAG,CAACD,aAAaF,SAASI,GAAG,CAACF,UAAU,EAAE;YACnD,IAAIA,SAASG,UAAU,CAAC,WAAW;gBACjCL,SAAShD,GAAG,CAACkD,UAAWI,IAAI,CAACxD;YAC/B,OAAO;gBACLkD,SAAShD,GAAG,CAACkD,UAAWK,OAAO,CAACzD;YAClC;QACF;QAEA,OAAOkD;IACT,CAAA;IAEA,OAAO;QACLQ,gBAAgB5E,QAAQ4E,cAAc;QACtCV;QACArD;QACAW;QACAU;QACAE;IACF;AACF"}