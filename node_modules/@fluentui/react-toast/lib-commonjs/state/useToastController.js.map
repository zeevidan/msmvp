{"version":3,"sources":["../src/state/useToastController.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport {\n  dispatchToast as dispatchToastVanilla,\n  dismissToast as dismissToastVanilla,\n  dismissAllToasts as dismissAllToastsVanilla,\n  updateToast as updateToastVanilla,\n  playToast as playToastVanilla,\n  pauseToast as pauseToastVanilla,\n} from './vanilla';\nimport { DispatchToastOptions, ToastId, ToasterId, UpdateToastOptions } from './types';\n\nconst noop = () => undefined;\n\n/**\n * @param toasterId - If an id is provided all imperative methods control that specific toaster\n * @returns Imperative methods to control toasts\n */\nexport function useToastController(toasterId?: ToasterId) {\n  const { targetDocument } = useFluent();\n\n  return React.useMemo(() => {\n    if (!targetDocument) {\n      return {\n        dispatchToast: noop,\n        dismissToast: noop,\n        dismissAllToasts: noop,\n        updateToast: noop,\n        pauseToast: noop,\n        playToast: noop,\n      };\n    }\n\n    return {\n      dispatchToast: (content: React.ReactNode, options?: DispatchToastOptions) => {\n        dispatchToastVanilla(content, { ...options, toasterId, data: { root: options?.root } }, targetDocument);\n      },\n      dismissToast: (toastId: ToastId) => {\n        dismissToastVanilla(toastId, toasterId, targetDocument);\n      },\n      dismissAllToasts: () => {\n        dismissAllToastsVanilla(toasterId, targetDocument);\n      },\n      updateToast: (options: UpdateToastOptions) => {\n        updateToastVanilla({ ...options, data: { root: options.root }, toasterId }, targetDocument);\n      },\n      pauseToast: (toastId: ToastId) => {\n        pauseToastVanilla(toastId, toasterId, targetDocument);\n      },\n      playToast: (toastId: ToastId) => {\n        playToastVanilla(toastId, toasterId, targetDocument);\n      },\n    };\n  }, [targetDocument, toasterId]);\n}\n"],"names":["useToastController","noop","undefined","toasterId","targetDocument","useFluent","React","useMemo","dispatchToast","dismissToast","dismissAllToasts","updateToast","pauseToast","playToast","content","options","dispatchToastVanilla","data","root","toastId","dismissToastVanilla","dismissAllToastsVanilla","updateToastVanilla","pauseToastVanilla","playToastVanilla"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkBgBA;;;eAAAA;;;;iEAlBO;qCACyB;yBAQzC;AAGP,MAAMC,OAAO,IAAMC;AAMZ,SAASF,mBAAmBG,SAAqB;IACtD,MAAM,EAAEC,cAAc,EAAE,GAAGC,IAAAA,uCAAAA;IAE3B,OAAOC,OAAMC,OAAO,CAAC;QACnB,IAAI,CAACH,gBAAgB;YACnB,OAAO;gBACLI,eAAeP;gBACfQ,cAAcR;gBACdS,kBAAkBT;gBAClBU,aAAaV;gBACbW,YAAYX;gBACZY,WAAWZ;YACb;QACF;QAEA,OAAO;YACLO,eAAe,CAACM,SAA0BC;gBACxCC,IAAAA,sBAAAA,EAAqBF,SAAS;oBAAE,GAAGC,OAAO;oBAAEZ;oBAAWc,MAAM;wBAAEC,MAAMH,YAAAA,QAAAA,YAAAA,KAAAA,IAAAA,KAAAA,IAAAA,QAASG,IAAI;oBAAC;gBAAE,GAAGd;YAC1F;YACAK,cAAc,CAACU;gBACbC,IAAAA,qBAAAA,EAAoBD,SAAShB,WAAWC;YAC1C;YACAM,kBAAkB;gBAChBW,IAAAA,yBAAAA,EAAwBlB,WAAWC;YACrC;YACAO,aAAa,CAACI;gBACZO,IAAAA,oBAAAA,EAAmB;oBAAE,GAAGP,OAAO;oBAAEE,MAAM;wBAAEC,MAAMH,QAAQG,IAAI;oBAAC;oBAAGf;gBAAU,GAAGC;YAC9E;YACAQ,YAAY,CAACO;gBACXI,IAAAA,mBAAAA,EAAkBJ,SAAShB,WAAWC;YACxC;YACAS,WAAW,CAACM;gBACVK,IAAAA,kBAAAA,EAAiBL,SAAShB,WAAWC;YACvC;QACF;IACF,GAAG;QAACA;QAAgBD;KAAU;AAChC"}