{"version":3,"sources":["../src/components/ToastContainer/useToastContainer.ts"],"sourcesContent":["import * as React from 'react';\nimport {\n  getIntrinsicElementProps,\n  useMergedRefs,\n  ExtractSlotProps,\n  Slot,\n  useEventCallback,\n  useId,\n  slot,\n} from '@fluentui/react-utilities';\nimport { useFluent_unstable } from '@fluentui/react-shared-contexts';\nimport { Delete, Tab } from '@fluentui/keyboard-keys';\nimport { useFocusableGroup, useFocusFinders } from '@fluentui/react-tabster';\nimport { ToastStatus } from '../../state';\nimport type { ToastContainerProps, ToastContainerState } from './ToastContainer.types';\nimport { Timer, TimerProps } from '../Timer/Timer';\n\nconst intentPolitenessMap = {\n  success: 'assertive',\n  warning: 'assertive',\n  error: 'assertive',\n  info: 'polite',\n} as const;\n\n/**\n * Create the state required to render ToastContainer.\n *\n * The returned state can be modified with hooks such as useToastContainerStyles_unstable,\n * before being passed to renderToastContainer_unstable.\n *\n * @param props - props from this instance of ToastContainer\n * @param ref - reference to root HTMLElement of ToastContainer\n */\nexport const useToastContainer_unstable = (\n  props: ToastContainerProps,\n  ref: React.Ref<HTMLElement>,\n): ToastContainerState => {\n  const {\n    visible,\n    children,\n    close: closeProp,\n    remove,\n    updateId,\n    announce,\n    data,\n    timeout: timerTimeout,\n    politeness: desiredPoliteness,\n    intent = 'info',\n    pauseOnHover,\n    pauseOnWindowBlur,\n    imperativeRef,\n    tryRestoreFocus,\n    ...rest\n  } = props;\n  const titleId = useId('toast-title');\n  const bodyId = useId('toast-body');\n  const toastRef = React.useRef<HTMLDivElement | null>(null);\n  const { targetDocument } = useFluent_unstable();\n  const [running, setRunning] = React.useState(false);\n  const imperativePauseRef = React.useRef(false);\n  const focusedToastBeforeClose = React.useRef(false);\n  const focusableGroupAttribute = useFocusableGroup({\n    tabBehavior: 'limited-trap-focus',\n    // Users should only use Tab to focus into the toast\n    // Escape is already reserved to dismiss all toasts\n    ignoreDefaultKeydown: { Tab: true, Escape: true, Enter: true },\n  });\n\n  const close = useEventCallback(() => {\n    const activeElement = targetDocument?.activeElement;\n    if (activeElement && toastRef.current?.contains(activeElement)) {\n      focusedToastBeforeClose.current = true;\n    }\n\n    closeProp();\n  });\n  const onStatusChange = useEventCallback((status: ToastStatus) => props.onStatusChange?.(null, { status, ...props }));\n  const pause = useEventCallback(() => setRunning(false));\n  const play = useEventCallback(() => {\n    if (imperativePauseRef.current) {\n      return;\n    }\n    const containsActive = !!toastRef.current?.contains(targetDocument?.activeElement ?? null);\n    if (timerTimeout < 0) {\n      setRunning(true);\n      return;\n    }\n\n    if (!containsActive) {\n      setRunning(true);\n    }\n  });\n\n  React.useImperativeHandle(imperativeRef, () => ({\n    focus: () => {\n      if (!toastRef.current) {\n        return;\n      }\n\n      toastRef.current.focus();\n    },\n\n    play: () => {\n      imperativePauseRef.current = false;\n      play();\n    },\n    pause: () => {\n      imperativePauseRef.current = true;\n      pause();\n    },\n  }));\n\n  React.useEffect(() => {\n    return () => onStatusChange('unmounted');\n  }, [onStatusChange]);\n\n  React.useEffect(() => {\n    if (!targetDocument) {\n      return;\n    }\n\n    if (pauseOnWindowBlur) {\n      targetDocument.defaultView?.addEventListener('focus', play);\n      targetDocument.defaultView?.addEventListener('blur', pause);\n      return () => {\n        targetDocument.defaultView?.removeEventListener('focus', play);\n        targetDocument.defaultView?.removeEventListener('blur', pause);\n      };\n    }\n  }, [targetDocument, pause, play, pauseOnWindowBlur]);\n\n  // Users never actually use ToastContainer as a JSX but imperatively through useToastContainerController\n  const userRootSlot = (data as { root?: ExtractSlotProps<Slot<'div'>> }).root;\n  const onMotionFinish: ToastContainerState['onMotionFinish'] = React.useCallback(\n    (_, { direction }) => {\n      if (direction === 'exit') {\n        remove();\n      }\n\n      if (direction === 'enter') {\n        // start toast once it's fully animated in\n        play();\n        onStatusChange('visible');\n      }\n    },\n    [onStatusChange, play, remove],\n  );\n\n  const onMouseEnter = useEventCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    pause();\n    userRootSlot?.onMouseEnter?.(e);\n  });\n\n  const onMouseLeave = useEventCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    play();\n    userRootSlot?.onMouseEnter?.(e);\n  });\n\n  const { findFirstFocusable, findLastFocusable } = useFocusFinders();\n  const onKeyDown = useEventCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.key === Delete) {\n      e.preventDefault();\n      close();\n    }\n\n    if (e.key === Tab && e.currentTarget === e.target) {\n      e.preventDefault();\n      if (e.shiftKey) {\n        findLastFocusable(e.currentTarget)?.focus();\n      } else {\n        findFirstFocusable(e.currentTarget)?.focus();\n      }\n    }\n\n    userRootSlot?.onKeyDown?.(e);\n  });\n\n  React.useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    const politeness = desiredPoliteness ?? intentPolitenessMap[intent];\n    announce(toastRef.current?.textContent ?? '', { politeness });\n  }, [announce, desiredPoliteness, toastRef, visible, updateId, intent]);\n\n  React.useEffect(() => {\n    return () => {\n      if (focusedToastBeforeClose.current) {\n        focusedToastBeforeClose.current = false;\n        tryRestoreFocus();\n      }\n    };\n  }, [tryRestoreFocus]);\n\n  return {\n    components: {\n      timer: Timer,\n      root: 'div',\n    },\n    timer: slot.always<TimerProps>({ onTimeout: close, running, timeout: timerTimeout ?? -1 }, { elementType: Timer }),\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        // FIXME:\n        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: useMergedRefs(ref, toastRef) as React.Ref<HTMLDivElement>,\n        children,\n        tabIndex: 0,\n        role: 'listitem',\n        'aria-labelledby': titleId,\n        'aria-describedby': bodyId,\n        ...rest,\n        ...userRootSlot,\n        ...focusableGroupAttribute,\n        onMouseEnter,\n        onMouseLeave,\n        onKeyDown,\n      }),\n      { elementType: 'div' },\n    ),\n    timerTimeout,\n    transitionTimeout: 0,\n    running,\n    visible,\n    remove,\n    close,\n    onTransitionEntering: () => {\n      /* no-op */\n    },\n    updateId,\n    nodeRef: toastRef,\n    intent,\n    titleId,\n    bodyId,\n    onMotionFinish,\n  };\n};\n"],"names":["useToastContainer_unstable","intentPolitenessMap","success","warning","error","info","props","ref","visible","children","close","closeProp","remove","updateId","announce","data","timeout","timerTimeout","politeness","desiredPoliteness","intent","pauseOnHover","pauseOnWindowBlur","imperativeRef","tryRestoreFocus","rest","titleId","useId","bodyId","toastRef","React","useRef","targetDocument","useFluent_unstable","running","setRunning","useState","imperativePauseRef","focusedToastBeforeClose","focusableGroupAttribute","useFocusableGroup","tabBehavior","ignoreDefaultKeydown","Tab","Escape","Enter","useEventCallback","activeElement","current","contains","onStatusChange","status","pause","play","containsActive","useImperativeHandle","focus","useEffect","defaultView","addEventListener","removeEventListener","userRootSlot","root","onMotionFinish","useCallback","_","direction","onMouseEnter","e","onMouseLeave","findFirstFocusable","findLastFocusable","useFocusFinders","onKeyDown","key","Delete","preventDefault","currentTarget","target","shiftKey","textContent","components","timer","Timer","slot","always","onTimeout","elementType","getIntrinsicElementProps","useMergedRefs","tabIndex","role","transitionTimeout","onTransitionEntering","nodeRef"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}