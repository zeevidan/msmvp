{"version":3,"sources":["../src/components/RatingDisplay/RatingDisplay.types.ts"],"sourcesContent":["import * as React from 'react';\nimport type { ComponentProps, ComponentState, Slot } from '@fluentui/react-utilities';\nimport { RatingItemContextValue } from '../RatingItem/RatingItem.types';\n\nexport type RatingDisplaySlots = {\n  root: NonNullable<Slot<'div'>>;\n  valueText?: Slot<'span'>;\n  countText?: Slot<'span'>;\n};\n\n/**\n * RatingDisplay Props\n */\nexport type RatingDisplayProps = ComponentProps<RatingDisplaySlots> & {\n  /**\n   * Color of the rating items (stars).\n   * @default neutral\n   */\n  color?: 'brand' | 'marigold' | 'neutral';\n  /**\n   * Renders a single filled star, with the value written next to it.\n   * @default false\n   */\n  compact?: boolean;\n  /**\n   * The number of ratings represented by the rating value.\n   * This will be formatted with a thousands separator (if applicable) and displayed next to the value.\n   */\n  count?: number;\n  /**\n   * The icon used for rating items.\n   * @default StarFilled\n   */\n  icon?: React.ElementType;\n  /**\n   * The max value of the rating. This controls the number of rating items displayed.\n   * Must be a whole number greater than 1.\n   * @default 5\n   */\n  max?: number;\n  /**\n   * Sets the size of the RatingDisplay items.\n   * @default medium\n   */\n  size?: 'small' | 'medium' | 'large' | 'extra-large';\n  /**\n   * The value of the rating\n   */\n  value?: number;\n};\n\n/**\n * State used in rendering RatingDisplay\n */\nexport type RatingDisplayState = ComponentState<RatingDisplaySlots> &\n  Required<Pick<RatingDisplayProps, 'color' | 'compact' | 'icon' | 'max' | 'size'>> &\n  Pick<RatingDisplayProps, 'value'>;\n\nexport type RatingDisplayContextValues = { ratingItem: RatingItemContextValue };\n"],"names":[],"rangeMappings":";;;;;","mappings":";;;;;iEAAuB"}