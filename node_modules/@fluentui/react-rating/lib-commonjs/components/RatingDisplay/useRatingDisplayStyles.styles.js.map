{"version":3,"sources":["useRatingDisplayStyles.styles.js"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nexport const ratingDisplayClassNames = {\n    root: 'fui-RatingDisplay',\n    valueText: 'fui-RatingDisplay__valueText',\n    countText: 'fui-RatingDisplay__countText'\n};\n/**\n * Styles for the root slot\n */ const useRootClassName = makeResetStyles({\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n});\nconst useLabelClassName = makeResetStyles({\n    color: tokens.colorNeutralForeground1,\n    marginLeft: tokens.spacingHorizontalXS,\n    ...typographyStyles.caption1\n});\nconst useLabelStyles = makeStyles({\n    large: {\n        fontSize: tokens.fontSizeBase300,\n        lineHeight: tokens.lineHeightBase300,\n        marginLeft: tokens.spacingHorizontalSNudge\n    },\n    extraLarge: {\n        fontSize: tokens.fontSizeBase400,\n        lineHeight: tokens.lineHeightBase400,\n        marginLeft: tokens.spacingHorizontalS\n    },\n    strong: {\n        fontWeight: tokens.fontWeightSemibold\n    },\n    divider: {\n        '::before': {\n            content: '\"Â· \"'\n        }\n    }\n});\n/**\n * Apply styling to the RatingDisplay slots based on the state\n */ export const useRatingDisplayStyles_unstable = (state)=>{\n    'use no memo';\n    const { size } = state;\n    const rootClassName = useRootClassName();\n    state.root.className = mergeClasses(ratingDisplayClassNames.root, rootClassName, state.root.className);\n    const labelClassName = useLabelClassName();\n    const labelStyles = useLabelStyles();\n    if (state.valueText) {\n        state.valueText.className = mergeClasses(ratingDisplayClassNames.valueText, labelClassName, labelStyles.strong, size === 'large' && labelStyles.large, size === 'extra-large' && labelStyles.extraLarge, state.valueText.className);\n    }\n    if (state.countText) {\n        state.countText.className = mergeClasses(ratingDisplayClassNames.countText, labelClassName, size === 'large' && labelStyles.large, size === 'extra-large' && labelStyles.extraLarge, state.valueText && labelStyles.divider, state.countText.className);\n    }\n    return state;\n};\n"],"names":["ratingDisplayClassNames","useRatingDisplayStyles_unstable","root","valueText","countText","useRootClassName","__resetStyles","useLabelClassName","useLabelStyles","__styles","large","Be2twd7","Bg96gwp","Frg6f3","extraLarge","strong","Bhrd7zp","divider","Ftih45","d","state","size","rootClassName","className","mergeClasses","labelClassName","labelStyles"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAEaA,uBAAuB;eAAvBA;;IAuCIC,+BAA+B;eAA/BA;;;uBAzCyC;AAEnD,MAAMD,0BAA0B;IACnCE,MAAM;IACNC,WAAW;IACXC,WAAW;AACf;AACA;;CAEA,GAAI,MAAMC,mBAAgB,WAAA,GAAGC,IAAAA,oBAAA,EAAA,WAAA,MAAA;IAAA;CAI5B;AACD,MAAMC,oBAAiB,WAAA,GAAGD,IAAAA,oBAAA,EAAA,WAAA,WAAA;IAAA;IAAA;CAIzB;AACD,MAAME,iBAAc,WAAA,GAAGC,IAAAA,eAAA,EAAA;IAAAC,OAAA;QAAAC,SAAA;QAAAC,SAAA;QAAAC,QAAA;YAAA;YAAA;SAAA;IAAA;IAAAC,YAAA;QAAAH,SAAA;QAAAC,SAAA;QAAAC,QAAA;YAAA;YAAA;SAAA;IAAA;IAAAE,QAAA;QAAAC,SAAA;IAAA;IAAAC,SAAA;QAAAC,QAAA;IAAA;AAAA,GAAA;IAAAC,GAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;AAAA;AAsBZ,MAAMlB,kCAAmCmB,CAAAA;IAChD;IACA,MAAM,EAAEC,IAAAA,EAAM,GAAGD;IACjB,MAAME,gBAAgBjB;IACtBe,MAAMlB,IAAI,CAACqB,SAAS,GAAGC,IAAAA,mBAAY,EAACxB,wBAAwBE,IAAI,EAAEoB,eAAeF,MAAMlB,IAAI,CAACqB,SAAS;IACrG,MAAME,iBAAiBlB;IACvB,MAAMmB,cAAclB;IACpB,IAAIY,MAAMjB,SAAS,EAAE;QACjBiB,MAAMjB,SAAS,CAACoB,SAAS,GAAGC,IAAAA,mBAAY,EAACxB,wBAAwBG,SAAS,EAAEsB,gBAAgBC,YAAYX,MAAM,EAAEM,SAAS,WAAWK,YAAYhB,KAAK,EAAEW,SAAS,iBAAiBK,YAAYZ,UAAU,EAAEM,MAAMjB,SAAS,CAACoB,SAAS;IACtO;IACA,IAAIH,MAAMhB,SAAS,EAAE;QACjBgB,MAAMhB,SAAS,CAACmB,SAAS,GAAGC,IAAAA,mBAAY,EAACxB,wBAAwBI,SAAS,EAAEqB,gBAAgBJ,SAAS,WAAWK,YAAYhB,KAAK,EAAEW,SAAS,iBAAiBK,YAAYZ,UAAU,EAAEM,MAAMjB,SAAS,IAAIuB,YAAYT,OAAO,EAAEG,MAAMhB,SAAS,CAACmB,SAAS;IAC1P;IACA,OAAOH;AACX"}