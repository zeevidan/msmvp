{"version":3,"sources":["../src/components/RatingItem/useRatingItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport type { RatingItemProps, RatingItemState } from './RatingItem.types';\nimport { useRatingItemContextValue_unstable } from '../../contexts/RatingItemContext';\n\nconst defaultItemLabel = (num: number) => num + '';\n\n/**\n * Create the state required to render RatingItem.\n *\n * The returned state can be modified with hooks such as useRatingItemStyles_unstable,\n * before being passed to renderRatingItem_unstable.\n *\n * @param props - props from this instance of RatingItem\n * @param ref - reference to root HTMLElement of RatingItem\n */\nexport const useRatingItem_unstable = (props: RatingItemProps, ref: React.Ref<HTMLSpanElement>): RatingItemState => {\n  const context = useRatingItemContextValue_unstable();\n  const { value = 0 } = props;\n  const { itemLabel = defaultItemLabel, iconFilled: IconFilled, iconOutline: IconOutline } = context;\n\n  const ratingValue = Math.round((context.value || 0) * 2) / 2; // round to the nearest 0.5\n\n  const displayedRatingValue = context.hoveredValue ?? ratingValue;\n\n  const appearance = context.interactive ? 'outline' : 'filled';\n\n  let iconFillWidth;\n  if (context.compact || displayedRatingValue >= value) {\n    iconFillWidth = 1;\n  } else if (displayedRatingValue >= value - 0.5) {\n    iconFillWidth = 0.5;\n  } else {\n    iconFillWidth = 0;\n  }\n\n  const root = slot.always(\n    getIntrinsicElementProps('span', {\n      ref: useMergedRefs(useFocusWithin<HTMLSpanElement>(), ref),\n      ...props,\n    }),\n    { elementType: 'span' },\n  );\n\n  let unselectedIcon;\n  if (iconFillWidth < 1) {\n    unselectedIcon = slot.always(props.unselectedIcon, {\n      defaultProps: {\n        children: appearance === 'filled' ? <IconFilled /> : <IconOutline />,\n        'aria-hidden': true,\n      },\n      elementType: 'div',\n    });\n  }\n\n  let selectedIcon;\n  if (iconFillWidth > 0) {\n    selectedIcon = slot.always(props.selectedIcon, {\n      defaultProps: {\n        children: <IconFilled />,\n        'aria-hidden': true,\n      },\n      elementType: 'div',\n    });\n  }\n\n  let halfValueInput;\n  if (context.interactive && context.step === 0.5) {\n    halfValueInput = slot.always(props.halfValueInput, {\n      defaultProps: {\n        type: 'radio',\n        name: context.name,\n        value: value - 0.5,\n        checked: ratingValue === value - 0.5,\n        'aria-label': itemLabel(value - 0.5),\n        onChange: () => {\n          // This empty onChange handler silences an incorrect React warning about not using onChange for a controlled input.\n          // The parent Rating component has the real onChange handler to listen to change events from this input.\n        },\n      },\n      elementType: 'input',\n    });\n  }\n\n  let fullValueInput;\n  if (context.interactive) {\n    fullValueInput = slot.always(props.fullValueInput, {\n      defaultProps: {\n        type: 'radio',\n        name: context.name,\n        value,\n        checked: ratingValue === value,\n        'aria-label': itemLabel(value),\n        onChange: () => {\n          // This empty onChange handler silences an incorrect React warning about not using onChange for a controlled input.\n          // The parent Rating component has the real onChange handler to listen to change events from this input.\n        },\n      },\n\n      elementType: 'input',\n    });\n  }\n\n  const state: RatingItemState = {\n    appearance,\n    color: context.color,\n    step: context.step,\n    size: context.size,\n    iconFillWidth,\n    value,\n    components: {\n      root: 'span',\n      selectedIcon: 'div',\n      unselectedIcon: 'div',\n      halfValueInput: 'input',\n      fullValueInput: 'input',\n    },\n    root,\n    selectedIcon,\n    unselectedIcon,\n    halfValueInput,\n    fullValueInput,\n  };\n\n  return state;\n};\n"],"names":["React","getIntrinsicElementProps","slot","useMergedRefs","useFocusWithin","useRatingItemContextValue_unstable","defaultItemLabel","num","useRatingItem_unstable","props","ref","context","value","itemLabel","iconFilled","IconFilled","iconOutline","IconOutline","ratingValue","Math","round","displayedRatingValue","hoveredValue","appearance","interactive","iconFillWidth","compact","root","always","elementType","unselectedIcon","defaultProps","children","selectedIcon","halfValueInput","step","type","name","checked","onChange","fullValueInput","state","color","size","components"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,wBAAwB,EAAEC,IAAI,EAAEC,aAAa,QAAQ,4BAA4B;AAC1F,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,SAASC,kCAAkC,QAAQ,mCAAmC;AAEtF,MAAMC,mBAAmB,CAACC,MAAgBA,MAAM;AAEhD;;;;;;;;CAQC,GACD,OAAO,MAAMC,yBAAyB,CAACC,OAAwBC;IAC7D,MAAMC,UAAUN;IAChB,MAAM,EAAEO,QAAQ,CAAC,EAAE,GAAGH;IACtB,MAAM,EAAEI,YAAYP,gBAAgB,EAAEQ,YAAYC,UAAU,EAAEC,aAAaC,WAAW,EAAE,GAAGN;IAE3F,MAAMO,cAAcC,KAAKC,KAAK,CAAC,AAACT,CAAAA,QAAQC,KAAK,IAAI,CAAA,IAAK,KAAK,GAAG,2BAA2B;QAE5DD;IAA7B,MAAMU,uBAAuBV,CAAAA,wBAAAA,QAAQW,YAAY,cAApBX,mCAAAA,wBAAwBO;IAErD,MAAMK,aAAaZ,QAAQa,WAAW,GAAG,YAAY;IAErD,IAAIC;IACJ,IAAId,QAAQe,OAAO,IAAIL,wBAAwBT,OAAO;QACpDa,gBAAgB;IAClB,OAAO,IAAIJ,wBAAwBT,QAAQ,KAAK;QAC9Ca,gBAAgB;IAClB,OAAO;QACLA,gBAAgB;IAClB;IAEA,MAAME,OAAOzB,KAAK0B,MAAM,CACtB3B,yBAAyB,QAAQ;QAC/BS,KAAKP,cAAcC,kBAAmCM;QACtD,GAAGD,KAAK;IACV,IACA;QAAEoB,aAAa;IAAO;IAGxB,IAAIC;IACJ,IAAIL,gBAAgB,GAAG;QACrBK,iBAAiB5B,KAAK0B,MAAM,CAACnB,MAAMqB,cAAc,EAAE;YACjDC,cAAc;gBACZC,UAAUT,eAAe,yBAAW,oBAACR,kCAAgB,oBAACE;gBACtD,eAAe;YACjB;YACAY,aAAa;QACf;IACF;IAEA,IAAII;IACJ,IAAIR,gBAAgB,GAAG;QACrBQ,eAAe/B,KAAK0B,MAAM,CAACnB,MAAMwB,YAAY,EAAE;YAC7CF,cAAc;gBACZC,wBAAU,oBAACjB;gBACX,eAAe;YACjB;YACAc,aAAa;QACf;IACF;IAEA,IAAIK;IACJ,IAAIvB,QAAQa,WAAW,IAAIb,QAAQwB,IAAI,KAAK,KAAK;QAC/CD,iBAAiBhC,KAAK0B,MAAM,CAACnB,MAAMyB,cAAc,EAAE;YACjDH,cAAc;gBACZK,MAAM;gBACNC,MAAM1B,QAAQ0B,IAAI;gBAClBzB,OAAOA,QAAQ;gBACf0B,SAASpB,gBAAgBN,QAAQ;gBACjC,cAAcC,UAAUD,QAAQ;gBAChC2B,UAAU;gBACR,mHAAmH;gBACnH,wGAAwG;gBAC1G;YACF;YACAV,aAAa;QACf;IACF;IAEA,IAAIW;IACJ,IAAI7B,QAAQa,WAAW,EAAE;QACvBgB,iBAAiBtC,KAAK0B,MAAM,CAACnB,MAAM+B,cAAc,EAAE;YACjDT,cAAc;gBACZK,MAAM;gBACNC,MAAM1B,QAAQ0B,IAAI;gBAClBzB;gBACA0B,SAASpB,gBAAgBN;gBACzB,cAAcC,UAAUD;gBACxB2B,UAAU;gBACR,mHAAmH;gBACnH,wGAAwG;gBAC1G;YACF;YAEAV,aAAa;QACf;IACF;IAEA,MAAMY,QAAyB;QAC7BlB;QACAmB,OAAO/B,QAAQ+B,KAAK;QACpBP,MAAMxB,QAAQwB,IAAI;QAClBQ,MAAMhC,QAAQgC,IAAI;QAClBlB;QACAb;QACAgC,YAAY;YACVjB,MAAM;YACNM,cAAc;YACdH,gBAAgB;YAChBI,gBAAgB;YAChBM,gBAAgB;QAClB;QACAb;QACAM;QACAH;QACAI;QACAM;IACF;IAEA,OAAOC;AACT,EAAE"}