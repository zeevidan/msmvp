{"version":3,"sources":["../src/components/RatingItem/RatingItem.types.ts"],"sourcesContent":["import type { ComponentProps, ComponentState, Slot } from '@fluentui/react-utilities';\nimport { RatingState } from '../Rating/Rating.types';\nimport { RatingDisplayState } from '../RatingDisplay/RatingDisplay.types';\n\nexport type RatingItemSlots = {\n  /**\n   * The root slot of the RatingItem.\n   * Default html element is span\n   */\n  root: NonNullable<Slot<'span'>>;\n  /**\n   * Icon displayed when the rating value is greater than or equal to the item's value.\n   */\n  selectedIcon?: NonNullable<Slot<'div'>>;\n  /**\n   * Icon displayed when the rating value is less than the item's value.\n   */\n  unselectedIcon?: NonNullable<Slot<'div'>>;\n  /**\n   * Radio input slot used for half star precision\n   */\n  halfValueInput?: NonNullable<Slot<'input'>>;\n  /**\n   * Radio input slot used for full star precision\n   */\n  fullValueInput?: NonNullable<Slot<'input'>>;\n};\n\n/**\n * RatingItem Props\n */\nexport type RatingItemProps = ComponentProps<Partial<RatingItemSlots>> & {\n  /**\n   * The positive whole number value that is displayed by this RatingItem\n   */\n  value?: number;\n};\n\n/**\n * State used in rendering RatingItem\n */\nexport type RatingItemState = ComponentState<RatingItemSlots> &\n  Required<Pick<RatingItemProps, 'value'>> &\n  Pick<RatingState, 'color' | 'step' | 'size'> & {\n    iconFillWidth: number;\n    appearance: 'outline' | 'filled';\n  };\n\nexport type RatingItemContextValue = Partial<Pick<RatingState, 'name' | 'hoveredValue' | 'value'>> &\n  Pick<RatingState, 'color' | 'iconFilled' | 'iconOutline' | 'itemLabel' | 'step' | 'size'> &\n  Partial<Pick<RatingDisplayState, 'compact'>> & {\n    interactive?: boolean;\n  };\n"],"names":[],"rangeMappings":"","mappings":"AAgDA,WAII"}