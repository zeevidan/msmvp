"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    toolbarClassNames: function() {
        return toolbarClassNames;
    },
    useToolbarStyles_unstable: function() {
        return useToolbarStyles_unstable;
    }
});
const _react = require("@griffel/react");
const toolbarClassNames = {
    root: 'fui-Toolbar'
};
/**
 * Styles for the root slot
 */ const useStyles = /*#__PURE__*/ (0, _react.__styles)({
    root: {
        mc9l5x: "f22iagw",
        Bt984gj: "f122n59",
        Byoj8tv: 0,
        uwmqm3: 0,
        z189sj: 0,
        z8tnut: 0,
        B0ocmuz: "f1yqiaad"
    },
    vertical: {
        Beiy3e4: "f1vx9l62",
        a9b677: "f1acs6jw"
    },
    small: {
        Byoj8tv: 0,
        uwmqm3: 0,
        z189sj: 0,
        z8tnut: 0,
        B0ocmuz: "fvz760z"
    },
    medium: {
        Byoj8tv: 0,
        uwmqm3: 0,
        z189sj: 0,
        z8tnut: 0,
        B0ocmuz: "f1yqiaad"
    },
    large: {
        Byoj8tv: 0,
        uwmqm3: 0,
        z189sj: 0,
        z8tnut: 0,
        B0ocmuz: "f1ms6bdn"
    }
}, {
    d: [
        ".f22iagw{display:flex;}",
        ".f122n59{align-items:center;}",
        [
            ".f1yqiaad{padding:4px 8px;}",
            {
                p: -1
            }
        ],
        ".f1vx9l62{flex-direction:column;}",
        ".f1acs6jw{width:fit-content;}",
        [
            ".fvz760z{padding:0px 4px;}",
            {
                p: -1
            }
        ],
        [
            ".f1yqiaad{padding:4px 8px;}",
            {
                p: -1
            }
        ],
        [
            ".f1ms6bdn{padding:4px 20px;}",
            {
                p: -1
            }
        ]
    ]
});
const useToolbarStyles_unstable = (state)=>{
    'use no memo';
    const styles = useStyles();
    const { vertical, size } = state;
    state.root.className = (0, _react.mergeClasses)(toolbarClassNames.root, styles.root, vertical && styles.vertical, size === 'small' && !vertical && styles.small, size === 'medium' && !vertical && styles.medium, size === 'large' && !vertical && styles.large, state.root.className);
    return state;
};
