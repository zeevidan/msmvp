{"version":3,"sources":["../src/hooks/useOnClickOutside.ts"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n\n/**\n * @internal\n */\nexport type UseOnClickOrScrollOutsideOptions = {\n  /**\n   * The element to listen for the click event\n   */\n  element: Document | undefined;\n  /**\n   * Refs to elements that check if the click is outside\n   */\n  refs: React.MutableRefObject<HTMLElement | undefined | null>[];\n\n  /**\n   * By default uses element.contains, but custom contain function can be provided\n   *\n   * @param parent - provided parent element\n   * @param child - event target element\n   */\n  contains?(parent: HTMLElement | null, child: HTMLElement): boolean;\n\n  /**\n   * Disables event listeners\n   */\n  disabled?: boolean;\n\n  /**\n   * Disables custom focus event listeners for iframes\n   */\n  disabledFocusOnIframe?: boolean;\n\n  /**\n   * Called if the click is outside the element refs\n   */\n  callback: (ev: MouseEvent | TouchEvent) => void;\n};\n\nconst DEFAULT_CONTAINS: UseOnClickOrScrollOutsideOptions['contains'] = (parent, child) => !!parent?.contains(child);\n\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */\nexport const useOnClickOutside = (options: UseOnClickOrScrollOutsideOptions) => {\n  const { targetDocument } = useFluent();\n  const win = targetDocument?.defaultView;\n  const { refs, callback, element, disabled, disabledFocusOnIframe, contains = DEFAULT_CONTAINS } = options;\n  const timeoutId = React.useRef<number | undefined>(undefined);\n\n  useIFrameFocus({ element, disabled: disabledFocusOnIframe || disabled, callback, refs, contains });\n\n  const isMouseDownInsideRef = React.useRef(false);\n  const listener = useEventCallback((ev: MouseEvent | TouchEvent) => {\n    if (isMouseDownInsideRef.current) {\n      isMouseDownInsideRef.current = false;\n      return;\n    }\n\n    const target = ev.composedPath()[0] as HTMLElement;\n    const isOutside = refs.every(ref => !contains(ref.current || null, target));\n\n    if (isOutside && !disabled) {\n      callback(ev);\n    }\n  });\n\n  const handleMouseDown = useEventCallback((ev: MouseEvent) => {\n    // Selecting text from inside to outside will rigger click event.\n    // In this case click event target is outside but mouse down event target is inside.\n    // And this click event should be considered as inside click.\n    isMouseDownInsideRef.current = refs.some(ref => contains(ref.current || null, ev.target as HTMLElement));\n  });\n\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = getWindowEvent(win);\n\n    const conditionalHandler = (event: MouseEvent | TouchEvent) => {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      listener(event);\n    };\n\n    // use capture phase because React can update DOM before the event bubbles to the document\n    element?.addEventListener('click', conditionalHandler, true);\n    element?.addEventListener('touchstart', conditionalHandler, true);\n    element?.addEventListener('contextmenu', conditionalHandler, true);\n    element?.addEventListener('mousedown', handleMouseDown, true);\n\n    // Garbage collect this event after it's no longer useful to avoid memory leaks\n    timeoutId.current = win?.setTimeout(() => {\n      currentEvent = undefined;\n    }, 1);\n\n    return () => {\n      element?.removeEventListener('click', conditionalHandler, true);\n      element?.removeEventListener('touchstart', conditionalHandler, true);\n      element?.removeEventListener('contextmenu', conditionalHandler, true);\n      element?.removeEventListener('mousedown', handleMouseDown, true);\n\n      win?.clearTimeout(timeoutId.current);\n      currentEvent = undefined;\n    };\n  }, [listener, element, disabled, handleMouseDown, win]);\n};\n\nconst getWindowEvent = (target: Node | Window | null | undefined): Event | undefined => {\n  if (target) {\n    if (typeof (target as Window).window === 'object' && (target as Window).window === target) {\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      return target.event;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    return (target as Node).ownerDocument?.defaultView?.event ?? undefined;\n  }\n\n  return undefined;\n};\n\nconst FUI_FRAME_EVENT = 'fuiframefocus';\n\ninterface UseIFrameFocusOptions\n  extends Pick<UseOnClickOrScrollOutsideOptions, 'disabled' | 'element' | 'callback' | 'contains' | 'refs'> {\n  /**\n   * Millisecond duration to poll\n   */\n  pollDuration?: number;\n}\n\n/**\n * Since click events do not propagate past iframes, we use focus to detect if a\n * click has happened inside an iframe, since the only ways of focusing inside an\n * iframe are:\n *   - clicking inside\n *   - tabbing inside\n *\n * Polls the value of `document.activeElement`. If it is an iframe, then dispatch\n * a custom DOM event. When the custom event is received call the provided callback\n */\nconst useIFrameFocus = (options: UseIFrameFocusOptions) => {\n  const {\n    disabled,\n    element: targetDocument,\n    callback,\n    contains = DEFAULT_CONTAINS,\n    pollDuration = 1000,\n    refs,\n  } = options;\n  const timeoutRef = React.useRef<number>();\n\n  const listener = useEventCallback((e: Event) => {\n    const isOutside = refs.every(ref => !contains(ref.current || null, e.target as HTMLElement));\n\n    if (isOutside && !disabled) {\n      callback(e as MouseEvent);\n    }\n  });\n\n  // Adds listener to the custom iframe focus event\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    targetDocument?.addEventListener(FUI_FRAME_EVENT, listener, true);\n\n    return () => {\n      targetDocument?.removeEventListener(FUI_FRAME_EVENT, listener, true);\n    };\n  }, [targetDocument, disabled, listener]);\n\n  // Starts polling for the active element\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    timeoutRef.current = targetDocument?.defaultView?.setInterval(() => {\n      const activeElement = targetDocument?.activeElement;\n\n      if (activeElement?.tagName === 'IFRAME' || activeElement?.tagName === 'WEBVIEW') {\n        const event = new CustomEvent(FUI_FRAME_EVENT, { bubbles: true });\n        activeElement.dispatchEvent(event);\n      }\n    }, pollDuration);\n\n    return () => {\n      targetDocument?.defaultView?.clearTimeout(timeoutRef.current);\n    };\n  }, [targetDocument, disabled, pollDuration]);\n};\n"],"names":["useOnClickOutside","DEFAULT_CONTAINS","parent","child","contains","options","targetDocument","useFluent","win","defaultView","refs","callback","element","disabled","disabledFocusOnIframe","timeoutId","React","useRef","undefined","useIFrameFocus","isMouseDownInsideRef","listener","useEventCallback","ev","current","target","composedPath","isOutside","every","ref","handleMouseDown","some","useEffect","currentEvent","getWindowEvent","conditionalHandler","event","addEventListener","setTimeout","removeEventListener","clearTimeout","window","ownerDocument","FUI_FRAME_EVENT","pollDuration","timeoutRef","e","setInterval","activeElement","tagName","CustomEvent","bubbles","dispatchEvent"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA+CaA;;;eAAAA;;;;iEA/CU;kCACU;qCACe;AAuChD,MAAMC,mBAAiE,CAACC,QAAQC,QAAU,CAAC,EAACD,mBAAAA,6BAAAA,OAAQE,QAAQ,CAACD;AAMtG,MAAMH,oBAAoB,CAACK;IAChC,MAAM,EAAEC,cAAc,EAAE,GAAGC,IAAAA,uCAAS;IACpC,MAAMC,MAAMF,2BAAAA,qCAAAA,eAAgBG,WAAW;IACvC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,qBAAqB,EAAEV,WAAWH,gBAAgB,EAAE,GAAGI;IAClG,MAAMU,YAAYC,OAAMC,MAAM,CAAqBC;IAEnDC,eAAe;QAAEP;QAASC,UAAUC,yBAAyBD;QAAUF;QAAUD;QAAMN;IAAS;IAEhG,MAAMgB,uBAAuBJ,OAAMC,MAAM,CAAC;IAC1C,MAAMI,WAAWC,IAAAA,kCAAgB,EAAC,CAACC;QACjC,IAAIH,qBAAqBI,OAAO,EAAE;YAChCJ,qBAAqBI,OAAO,GAAG;YAC/B;QACF;QAEA,MAAMC,SAASF,GAAGG,YAAY,EAAE,CAAC,EAAE;QACnC,MAAMC,YAAYjB,KAAKkB,KAAK,CAACC,CAAAA,MAAO,CAACzB,SAASyB,IAAIL,OAAO,IAAI,MAAMC;QAEnE,IAAIE,aAAa,CAACd,UAAU;YAC1BF,SAASY;QACX;IACF;IAEA,MAAMO,kBAAkBR,IAAAA,kCAAgB,EAAC,CAACC;QACxC,iEAAiE;QACjE,oFAAoF;QACpF,6DAA6D;QAC7DH,qBAAqBI,OAAO,GAAGd,KAAKqB,IAAI,CAACF,CAAAA,MAAOzB,SAASyB,IAAIL,OAAO,IAAI,MAAMD,GAAGE,MAAM;IACzF;IAEAT,OAAMgB,SAAS,CAAC;QACd,IAAInB,UAAU;YACZ;QACF;QAEA,mEAAmE;QACnE,2FAA2F;QAC3F,iDAAiD;QACjD,IAAIoB,eAAeC,eAAe1B;QAElC,MAAM2B,qBAAqB,CAACC;YAC1B,+EAA+E;YAC/E,IAAIA,UAAUH,cAAc;gBAC1BA,eAAef;gBACf;YACF;YAEAG,SAASe;QACX;QAEA,0FAA0F;QAC1FxB,oBAAAA,8BAAAA,QAASyB,gBAAgB,CAAC,SAASF,oBAAoB;QACvDvB,oBAAAA,8BAAAA,QAASyB,gBAAgB,CAAC,cAAcF,oBAAoB;QAC5DvB,oBAAAA,8BAAAA,QAASyB,gBAAgB,CAAC,eAAeF,oBAAoB;QAC7DvB,oBAAAA,8BAAAA,QAASyB,gBAAgB,CAAC,aAAaP,iBAAiB;QAExD,+EAA+E;QAC/Ef,UAAUS,OAAO,GAAGhB,gBAAAA,0BAAAA,IAAK8B,UAAU,CAAC;YAClCL,eAAef;QACjB,GAAG;QAEH,OAAO;YACLN,oBAAAA,8BAAAA,QAAS2B,mBAAmB,CAAC,SAASJ,oBAAoB;YAC1DvB,oBAAAA,8BAAAA,QAAS2B,mBAAmB,CAAC,cAAcJ,oBAAoB;YAC/DvB,oBAAAA,8BAAAA,QAAS2B,mBAAmB,CAAC,eAAeJ,oBAAoB;YAChEvB,oBAAAA,8BAAAA,QAAS2B,mBAAmB,CAAC,aAAaT,iBAAiB;YAE3DtB,gBAAAA,0BAAAA,IAAKgC,YAAY,CAACzB,UAAUS,OAAO;YACnCS,eAAef;QACjB;IACF,GAAG;QAACG;QAAUT;QAASC;QAAUiB;QAAiBtB;KAAI;AACxD;AAEA,MAAM0B,iBAAiB,CAACT;IACtB,IAAIA,QAAQ;YAOH,mCAAA;QANP,IAAI,OAAO,AAACA,OAAkBgB,MAAM,KAAK,YAAY,AAAChB,OAAkBgB,MAAM,KAAKhB,QAAQ;YACzF,4DAA4D;YAC5D,OAAOA,OAAOW,KAAK;QACrB;YAGO;QADP,4DAA4D;QAC5D,OAAO,CAAA,2CAAA,wBAAA,AAACX,OAAgBiB,aAAa,cAA9B,6CAAA,oCAAA,sBAAgCjC,WAAW,cAA3C,wDAAA,kCAA6C2B,KAAK,cAAlD,qDAAA,0CAAsDlB;IAC/D;IAEA,OAAOA;AACT;AAEA,MAAMyB,kBAAkB;AAUxB;;;;;;;;;CASC,GACD,MAAMxB,iBAAiB,CAACd;IACtB,MAAM,EACJQ,QAAQ,EACRD,SAASN,cAAc,EACvBK,QAAQ,EACRP,WAAWH,gBAAgB,EAC3B2C,eAAe,IAAI,EACnBlC,IAAI,EACL,GAAGL;IACJ,MAAMwC,aAAa7B,OAAMC,MAAM;IAE/B,MAAMI,WAAWC,IAAAA,kCAAgB,EAAC,CAACwB;QACjC,MAAMnB,YAAYjB,KAAKkB,KAAK,CAACC,CAAAA,MAAO,CAACzB,SAASyB,IAAIL,OAAO,IAAI,MAAMsB,EAAErB,MAAM;QAE3E,IAAIE,aAAa,CAACd,UAAU;YAC1BF,SAASmC;QACX;IACF;IAEA,iDAAiD;IACjD9B,OAAMgB,SAAS,CAAC;QACd,IAAInB,UAAU;YACZ;QACF;QAEAP,2BAAAA,qCAAAA,eAAgB+B,gBAAgB,CAACM,iBAAiBtB,UAAU;QAE5D,OAAO;YACLf,2BAAAA,qCAAAA,eAAgBiC,mBAAmB,CAACI,iBAAiBtB,UAAU;QACjE;IACF,GAAG;QAACf;QAAgBO;QAAUQ;KAAS;IAEvC,wCAAwC;IACxCL,OAAMgB,SAAS,CAAC;YAKO1B;QAJrB,IAAIO,UAAU;YACZ;QACF;QAEAgC,WAAWrB,OAAO,GAAGlB,2BAAAA,sCAAAA,8BAAAA,eAAgBG,WAAW,cAA3BH,kDAAAA,4BAA6ByC,WAAW,CAAC;YAC5D,MAAMC,gBAAgB1C,2BAAAA,qCAAAA,eAAgB0C,aAAa;YAEnD,IAAIA,CAAAA,0BAAAA,oCAAAA,cAAeC,OAAO,MAAK,YAAYD,CAAAA,0BAAAA,oCAAAA,cAAeC,OAAO,MAAK,WAAW;gBAC/E,MAAMb,QAAQ,IAAIc,YAAYP,iBAAiB;oBAAEQ,SAAS;gBAAK;gBAC/DH,cAAcI,aAAa,CAAChB;YAC9B;QACF,GAAGQ;QAEH,OAAO;gBACLtC;YAAAA,2BAAAA,sCAAAA,8BAAAA,eAAgBG,WAAW,cAA3BH,kDAAAA,4BAA6BkC,YAAY,CAACK,WAAWrB,OAAO;QAC9D;IACF,GAAG;QAAClB;QAAgBO;QAAU+B;KAAa;AAC7C"}