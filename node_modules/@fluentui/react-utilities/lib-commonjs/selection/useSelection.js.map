{"version":3,"sources":["../src/selection/useSelection.ts"],"sourcesContent":["import * as React from 'react';\nimport { SelectionHookParams, SelectionItemId, SelectionMethods } from './types';\nimport { useControllableState } from '../hooks/useControllableState';\nimport { createSetFromIterable } from '../utils/createSetFromIterable';\n\nfunction useSelectionState(params: Omit<SelectionHookParams, 'selectionMode'>) {\n  const [selected, setSelected] = useControllableState<Set<SelectionItemId>>({\n    initialState: new Set(),\n    defaultState: React.useMemo(\n      () => params.defaultSelectedItems && createSetFromIterable(params.defaultSelectedItems),\n      [params.defaultSelectedItems],\n    ),\n    state: React.useMemo(\n      () => params.selectedItems && createSetFromIterable(params.selectedItems),\n      [params.selectedItems],\n    ),\n  });\n  const changeSelection = (event: React.SyntheticEvent, nextSelectedItems: Set<SelectionItemId>) => {\n    params.onSelectionChange?.(event, { selectedItems: nextSelectedItems });\n    setSelected(nextSelectedItems);\n  };\n  return [selected, changeSelection] as const;\n}\n\nfunction useSingleSelection(params: Omit<SelectionHookParams, 'selectionMode'>) {\n  const [selected, changeSelection] = useSelectionState(params);\n  const methods: SelectionMethods = {\n    deselectItem: event => changeSelection(event, new Set()),\n    selectItem: (event, itemId) => changeSelection(event, new Set([itemId])),\n    toggleAllItems: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('[react-utilities]: `toggleAllItems` should not be used in single selection mode');\n      }\n    },\n    toggleItem: (event, itemId) => changeSelection(event, new Set([itemId])),\n    clearItems: event => changeSelection(event, new Set()),\n    isSelected: itemId => selected.has(itemId) ?? false,\n  };\n  return [selected, methods] as const;\n}\n\nfunction useMultipleSelection(params: Omit<SelectionHookParams, 'selectionMode'>) {\n  const [selected, changeSelection] = useSelectionState(params);\n  const methods: SelectionMethods = {\n    toggleItem: (event, itemId) => {\n      const nextSelectedItems = new Set(selected);\n      if (selected.has(itemId)) {\n        nextSelectedItems.delete(itemId);\n      } else {\n        nextSelectedItems.add(itemId);\n      }\n      changeSelection(event, nextSelectedItems);\n    },\n    selectItem: (event, itemId) => {\n      const nextSelectedItems = new Set(selected);\n      nextSelectedItems.add(itemId);\n      changeSelection(event, nextSelectedItems);\n    },\n    deselectItem: (event, itemId) => {\n      const nextSelectedItems = new Set(selected);\n      nextSelectedItems.delete(itemId);\n      changeSelection(event, nextSelectedItems);\n    },\n    clearItems: event => {\n      changeSelection(event, new Set());\n    },\n    isSelected: itemId => selected.has(itemId),\n    toggleAllItems: (event, itemIds) => {\n      const allItemsSelected = itemIds.every(itemId => selected.has(itemId));\n      const nextSelectedItems = new Set(selected);\n      if (allItemsSelected) {\n        nextSelectedItems.clear();\n      } else {\n        itemIds.forEach(itemId => nextSelectedItems.add(itemId));\n      }\n      changeSelection(event, nextSelectedItems);\n    },\n  };\n  return [selected, methods] as const;\n}\n\nexport function useSelection(params: SelectionHookParams) {\n  'use no memo';\n\n  if (params.selectionMode === 'multiselect') {\n    // selectionMode is a static value, so we can safely ignore rules-of-hooks\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useMultipleSelection(params);\n  }\n  // selectionMode is a static value, so we can safely ignore rules-of-hooks\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useSingleSelection(params);\n}\n"],"names":["useSelection","useSelectionState","params","selected","setSelected","useControllableState","initialState","Set","defaultState","React","useMemo","defaultSelectedItems","createSetFromIterable","state","selectedItems","changeSelection","event","nextSelectedItems","onSelectionChange","useSingleSelection","methods","deselectItem","selectItem","itemId","toggleAllItems","process","env","NODE_ENV","Error","toggleItem","clearItems","isSelected","has","useMultipleSelection","delete","add","itemIds","allItemsSelected","every","clear","forEach","selectionMode"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}