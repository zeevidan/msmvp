{"version":3,"sources":["../src/hooks/useVirtualizerMeasure.ts"],"sourcesContent":["import * as React from 'react';\nimport { VirtualizerMeasureProps } from './hooks.types';\nimport { useResizeObserverRef_unstable } from './useResizeObserverRef';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n\n/**\n * React hook that measures virtualized space based on a static size to ensure optimized virtualization length.\n */\nexport const useStaticVirtualizerMeasure = <TElement extends HTMLElement>(\n  virtualizerProps: VirtualizerMeasureProps,\n): {\n  virtualizerLength: number;\n  bufferItems: number;\n  bufferSize: number;\n  scrollRef: (instance: TElement | null) => void;\n  containerSizeRef: React.MutableRefObject<number>;\n} => {\n  const { defaultItemSize, direction = 'vertical', bufferItems, bufferSize } = virtualizerProps;\n\n  const [state, setState] = React.useState({\n    virtualizerLength: 0,\n    _bufferSize: 0,\n    _bufferItems: 0,\n  });\n\n  const containerSizeRef = React.useRef<number>(0);\n  const { targetDocument } = useFluent();\n\n  const { virtualizerLength, _bufferItems, _bufferSize } = state;\n\n  const resizeCallback = React.useCallback(\n    (\n      _entries: ResizeObserverEntry[],\n      // TODO: exclude types from this lint rule: https://github.com/microsoft/fluentui/issues/31286\n      // eslint-disable-next-line no-restricted-globals\n      _observer: ResizeObserver,\n      scrollRef?: React.MutableRefObject<HTMLElement | null>,\n    ) => {\n      if (!scrollRef?.current) {\n        return;\n      }\n\n      if (scrollRef.current !== targetDocument?.body) {\n        // We have a local scroll container\n        containerSizeRef.current =\n          direction === 'vertical'\n            ? scrollRef?.current.getBoundingClientRect().height\n            : scrollRef?.current.getBoundingClientRect().width;\n      } else if (targetDocument?.defaultView) {\n        // If our scroll ref is the document body, we should check window height\n        containerSizeRef.current =\n          direction === 'vertical' ? targetDocument?.defaultView?.innerHeight : targetDocument?.defaultView?.innerWidth;\n      }\n      /*\n       * Number of items required to cover viewport.\n       */\n      const length = Math.ceil(containerSizeRef.current / defaultItemSize + 1);\n\n      /*\n       * Number of items to append at each end, i.e. 'preload' each side before entering view.\n       * Minimum: 1\n       */\n      const newBufferItems = bufferItems ?? Math.max(Math.ceil(length / 4), 1);\n\n      /*\n       * This is how far we deviate into the bufferItems to detect a redraw.\n       */\n      const newBufferSize = bufferSize ?? Math.max(defaultItemSize / 2.0, 1);\n\n      const totalLength = length + newBufferItems * 2;\n\n      setState({\n        virtualizerLength: totalLength,\n        _bufferItems: newBufferItems,\n        _bufferSize: newBufferSize,\n      });\n    },\n    [bufferItems, bufferSize, defaultItemSize, direction, targetDocument?.body, targetDocument?.defaultView],\n  );\n\n  const scrollRef = useResizeObserverRef_unstable(resizeCallback);\n\n  return {\n    virtualizerLength,\n    bufferItems: _bufferItems,\n    bufferSize: _bufferSize,\n    scrollRef,\n    containerSizeRef,\n  };\n};\n"],"names":["useStaticVirtualizerMeasure","virtualizerProps","defaultItemSize","direction","bufferItems","bufferSize","state","setState","React","useState","virtualizerLength","_bufferSize","_bufferItems","containerSizeRef","useRef","targetDocument","useFluent","resizeCallback","useCallback","_entries","_observer","scrollRef","current","body","getBoundingClientRect","height","width","defaultView","innerHeight","innerWidth","length","Math","ceil","newBufferItems","max","newBufferSize","totalLength","useResizeObserverRef_unstable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAQaA;;;eAAAA;;;;iEARU;sCAEuB;qCACE;AAKzC,MAAMA,8BAA8B,CACzCC;IAQA,MAAM,EAAEC,eAAe,EAAEC,YAAY,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAE,GAAGJ;IAE7E,MAAM,CAACK,OAAOC,SAAS,GAAGC,OAAMC,QAAQ,CAAC;QACvCC,mBAAmB;QACnBC,aAAa;QACbC,cAAc;IAChB;IAEA,MAAMC,mBAAmBL,OAAMM,MAAM,CAAS;IAC9C,MAAM,EAAEC,cAAc,EAAE,GAAGC,IAAAA,uCAAAA;IAE3B,MAAM,EAAEN,iBAAiB,EAAEE,YAAY,EAAED,WAAW,EAAE,GAAGL;IAEzD,MAAMW,iBAAiBT,OAAMU,WAAW,CACtC,CACEC,UAEA,iDAAiD;IACjDC,WACAC;QAEA,IAAI,CAACA,CAAAA,cAAAA,QAAAA,cAAAA,KAAAA,IAAAA,KAAAA,IAAAA,UAAWC,OAAO,AAAPA,GAAS;YACvB;QACF;QAEA,IAAID,UAAUC,OAAO,KAAKP,CAAAA,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,eAAgBQ,IAAI,AAAJA,GAAM;YAC9C,mCAAmC;YACnCV,iBAAiBS,OAAO,GACtBnB,cAAc,aACVkB,cAAAA,QAAAA,cAAAA,KAAAA,IAAAA,KAAAA,IAAAA,UAAWC,OAAO,CAACE,qBAAqB,GAAGC,MAAM,GACjDJ,cAAAA,QAAAA,cAAAA,KAAAA,IAAAA,KAAAA,IAAAA,UAAWC,OAAO,CAACE,qBAAqB,GAAGE,KAAK;QACxD,OAAO,IAAIX,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,eAAgBY,WAAW,EAAE;gBAGTZ,6BAA2CA;YAFxE,wEAAwE;YACxEF,iBAAiBS,OAAO,GACtBnB,cAAc,aAAaY,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,CAAAA,8BAAAA,eAAgBY,WAAW,AAAXA,MAAW,QAA3BZ,gCAAAA,KAAAA,IAAAA,KAAAA,IAAAA,4BAA6Ba,WAAW,GAAGb,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,CAAAA,+BAAAA,eAAgBY,WAAW,AAAXA,MAAW,QAA3BZ,iCAAAA,KAAAA,IAAAA,KAAAA,IAAAA,6BAA6Bc,UAAU;QACjH;QACA;;OAEC,GACD,MAAMC,SAASC,KAAKC,IAAI,CAACnB,iBAAiBS,OAAO,GAAGpB,kBAAkB;QAEtE;;;OAGC,GACD,MAAM+B,iBAAiB7B,gBAAAA,QAAAA,gBAAAA,KAAAA,IAAAA,cAAe2B,KAAKG,GAAG,CAACH,KAAKC,IAAI,CAACF,SAAS,IAAI;QAEtE;;OAEC,GACD,MAAMK,gBAAgB9B,eAAAA,QAAAA,eAAAA,KAAAA,IAAAA,aAAc0B,KAAKG,GAAG,CAAChC,kBAAkB,KAAK;QAEpE,MAAMkC,cAAcN,SAASG,iBAAiB;QAE9C1B,SAAS;YACPG,mBAAmB0B;YACnBxB,cAAcqB;YACdtB,aAAawB;QACf;IACF,GACA;QAAC/B;QAAaC;QAAYH;QAAiBC;QAAWY,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,eAAgBQ,IAAI;QAAER,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,eAAgBY,WAAW;KAAC;IAG1G,MAAMN,YAAYgB,IAAAA,mDAAAA,EAA8BpB;IAEhD,OAAO;QACLP;QACAN,aAAaQ;QACbP,YAAYM;QACZU;QACAR;IACF;AACF"}