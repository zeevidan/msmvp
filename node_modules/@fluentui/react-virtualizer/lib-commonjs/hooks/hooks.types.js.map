{"version":3,"sources":["../src/hooks/hooks.types.ts"],"sourcesContent":["import * as React from 'react';\nimport { DynamicVirtualizerContextProps } from '../Utilities';\n\nexport type VirtualizerMeasureProps = {\n  defaultItemSize: number;\n  direction?: 'vertical' | 'horizontal';\n\n  /**\n   * Override recommended number of buffer items\n   */\n  bufferItems?: number;\n\n  /**\n   * Override recommended buffer size (px)\n   */\n  bufferSize?: number;\n};\n\nexport type VirtualizerMeasureDynamicProps = {\n  defaultItemSize: number;\n  virtualizerContext: DynamicVirtualizerContextProps;\n  numItems: number;\n  getItemSize: (index: number) => number;\n  direction?: 'vertical' | 'horizontal';\n\n  /**\n   * Override recommended number of buffer items\n   */\n  bufferItems?: number;\n\n  /**\n   * Override recommended buffer size (px)\n   */\n  bufferSize?: number;\n};\n\nexport type VirtualizerStaticPaginationProps = {\n  itemSize: number;\n  axis?: 'vertical' | 'horizontal';\n};\n\n/**\n * Props to be passed into dynamic virtualization hooks\n * All props can be acquired from useVirtualizer hooks themselves and passed in\n */\nexport type VirtualizerDynamicPaginationProps = {\n  /**\n   * An array that tracks the sizing of each item in virtualizer cumulatively\n   */\n  progressiveItemSizes: React.RefObject<number[]> | undefined;\n  /**\n   * The current starting index of the virtualizer's DOM elements\n   */\n  currentIndex: number;\n  /**\n   * The axis we should paginate on (should match virtualizer's axis)\n   */\n  axis?: 'vertical' | 'horizontal';\n  /**\n   * The current length of Virtualizer's actual DOM elements\n   */\n  virtualizerLength: number;\n};\n\n/**\n * Additional direct Ref prevents reading old resize entry data\n * Backwards compatible with ResizeObserverCallback if preferred\n */\nexport interface ResizeCallbackWithRef {\n  (\n    entries: ResizeObserverEntry[],\n    // TODO: exclude types from this lint rule: https://github.com/microsoft/fluentui/issues/31286\n    // eslint-disable-next-line no-restricted-globals\n    observer: ResizeObserver,\n    scrollRef?: React.MutableRefObject<HTMLElement | null>,\n  ): void;\n}\n"],"names":[],"rangeMappings":";;;;;","mappings":";;;;;iEAAuB"}