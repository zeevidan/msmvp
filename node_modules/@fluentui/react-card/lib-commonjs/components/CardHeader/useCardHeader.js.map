{"version":3,"sources":["../src/components/CardHeader/useCardHeader.ts"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, useId, slot } from '@fluentui/react-utilities';\nimport type { CardHeaderProps, CardHeaderState } from './CardHeader.types';\nimport { useCardContext_unstable } from '../Card/CardContext';\nimport { cardHeaderClassNames } from './useCardHeaderStyles.styles';\n\n/**\n * Finds the first child of CardHeader with an id prop.\n *\n * @param header - the header prop of CardHeader\n */\nfunction getChildWithId(header: React.ReactNode) {\n  function isReactElementWithIdProp(element: React.ReactNode): element is React.ReactElement {\n    return React.isValidElement(element) && Boolean(element.props.id);\n  }\n\n  return React.Children.toArray(header).find(isReactElementWithIdProp);\n}\n\n/**\n * Returns the id to use for the CardHeader root element.\n *\n * @param headerId - the id prop of the CardHeader component\n * @param childWithId - the first child of the CardHeader component with an id prop\n * @param generatedId - a generated id\n *\n * @returns the id to use for the CardHeader root element\n */\nfunction getReferenceId(\n  headerId: string | undefined,\n  childWithId: React.ReactElement | undefined,\n  generatedId: string,\n): string {\n  if (headerId) {\n    return headerId;\n  }\n\n  if (childWithId?.props.id) {\n    return childWithId.props.id;\n  }\n\n  return generatedId;\n}\n\n/**\n * Create the state required to render CardHeader.\n *\n * The returned state can be modified with hooks such as useCardHeaderStyles_unstable,\n * before being passed to renderCardHeader_unstable.\n *\n * @param props - props from this instance of CardHeader\n * @param ref - reference to root HTMLElement of CardHeader\n */\nexport const useCardHeader_unstable = (props: CardHeaderProps, ref: React.Ref<HTMLElement>): CardHeaderState => {\n  const { image, header, description, action } = props;\n\n  const {\n    selectableA11yProps: { referenceId, setReferenceId },\n  } = useCardContext_unstable();\n  const headerRef = React.useRef<HTMLDivElement>(null);\n\n  const hasChildId = React.useRef(false);\n  const generatedId = useId(cardHeaderClassNames.header, referenceId);\n\n  const headerSlot = slot.optional(header, {\n    renderByDefault: true,\n    defaultProps: {\n      ref: headerRef,\n      id: !hasChildId.current ? referenceId : undefined,\n    },\n    elementType: 'div',\n  });\n  React.useEffect(() => {\n    const headerId = !hasChildId.current ? headerRef.current?.id : undefined;\n    const childWithId = getChildWithId(headerSlot?.children);\n    hasChildId.current = Boolean(childWithId);\n    setReferenceId(getReferenceId(headerId, childWithId, generatedId));\n  }, [generatedId, header, headerSlot, setReferenceId]);\n  return {\n    components: { root: 'div', image: 'div', header: 'div', description: 'div', action: 'div' },\n\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        // FIXME:\n        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: ref as React.Ref<HTMLDivElement>,\n        ...props,\n      }),\n      { elementType: 'div' },\n    ),\n    image: slot.optional(image, { elementType: 'div' }),\n    header: headerSlot,\n    description: slot.optional(description, { elementType: 'div' }),\n    action: slot.optional(action, { elementType: 'div' }),\n  };\n};\n"],"names":["useCardHeader_unstable","getChildWithId","header","isReactElementWithIdProp","element","React","isValidElement","Boolean","props","id","Children","toArray","find","getReferenceId","headerId","childWithId","generatedId","ref","image","description","action","selectableA11yProps","referenceId","setReferenceId","useCardContext_unstable","headerRef","useRef","hasChildId","useId","cardHeaderClassNames","headerSlot","slot","optional","renderByDefault","defaultProps","current","undefined","elementType","useEffect","children","components","root","always","getIntrinsicElementProps"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqDaA;;;eAAAA;;;;iEArDU;gCAC+B;6BAEd;2CACH;AAErC;;;;CAIC,GACD,SAASC,eAAeC,MAAuB;IAC7C,SAASC,yBAAyBC,OAAwB;QACxD,qBAAOC,OAAMC,cAAc,CAACF,YAAYG,QAAQH,QAAQI,KAAK,CAACC,EAAE;IAClE;IAEA,OAAOJ,OAAMK,QAAQ,CAACC,OAAO,CAACT,QAAQU,IAAI,CAACT;AAC7C;AAEA;;;;;;;;CAQC,GACD,SAASU,eACPC,QAA4B,EAC5BC,WAA2C,EAC3CC,WAAmB;IAEnB,IAAIF,UAAU;QACZ,OAAOA;IACT;IAEA,IAAIC,gBAAAA,QAAAA,gBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,YAAaP,KAAK,CAACC,EAAE,EAAE;QACzB,OAAOM,YAAYP,KAAK,CAACC,EAAE;IAC7B;IAEA,OAAOO;AACT;AAWO,MAAMhB,yBAAyB,CAACQ,OAAwBS;IAC7D,MAAM,EAAEC,KAAK,EAAEhB,MAAM,EAAEiB,WAAW,EAAEC,MAAM,EAAE,GAAGZ;IAE/C,MAAM,EACJa,qBAAqB,EAAEC,WAAW,EAAEC,cAAc,EAAE,EACrD,GAAGC,IAAAA,oCAAAA;IACJ,MAAMC,YAAYpB,OAAMqB,MAAM,CAAiB;IAE/C,MAAMC,aAAatB,OAAMqB,MAAM,CAAC;IAChC,MAAMV,cAAcY,IAAAA,qBAAAA,EAAMC,+CAAAA,CAAqB3B,MAAM,EAAEoB;IAEvD,MAAMQ,aAAaC,oBAAAA,CAAKC,QAAQ,CAAC9B,QAAQ;QACvC+B,iBAAiB;QACjBC,cAAc;YACZjB,KAAKQ;YACLhB,IAAI,CAACkB,WAAWQ,OAAO,GAAGb,cAAcc;QAC1C;QACAC,aAAa;IACf;IACAhC,OAAMiC,SAAS,CAAC;YACyBb;QAAvC,MAAMX,WAAW,CAACa,WAAWQ,OAAO,GAAA,AAAGV,CAAAA,qBAAAA,UAAUU,OAAO,AAAPA,MAAO,QAAjBV,uBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,mBAAmBhB,EAAE,GAAG2B;QAC/D,MAAMrB,cAAcd,eAAe6B,eAAAA,QAAAA,eAAAA,KAAAA,IAAAA,KAAAA,IAAAA,WAAYS,QAAQ;QACvDZ,WAAWQ,OAAO,GAAG5B,QAAQQ;QAC7BQ,eAAeV,eAAeC,UAAUC,aAAaC;IACvD,GAAG;QAACA;QAAad;QAAQ4B;QAAYP;KAAe;IACpD,OAAO;QACLiB,YAAY;YAAEC,MAAM;YAAOvB,OAAO;YAAOhB,QAAQ;YAAOiB,aAAa;YAAOC,QAAQ;QAAM;QAE1FqB,MAAMV,oBAAAA,CAAKW,MAAM,CACfC,IAAAA,wCAAAA,EAAyB,OAAO;YAC9B,SAAS;YACT,4EAA4E;YAC5E,4FAA4F;YAC5F1B,KAAKA;YACL,GAAGT,KAAK;QACV,IACA;YAAE6B,aAAa;QAAM;QAEvBnB,OAAOa,oBAAAA,CAAKC,QAAQ,CAACd,OAAO;YAAEmB,aAAa;QAAM;QACjDnC,QAAQ4B;QACRX,aAAaY,oBAAAA,CAAKC,QAAQ,CAACb,aAAa;YAAEkB,aAAa;QAAM;QAC7DjB,QAAQW,oBAAAA,CAAKC,QAAQ,CAACZ,QAAQ;YAAEiB,aAAa;QAAM;IACrD;AACF"}