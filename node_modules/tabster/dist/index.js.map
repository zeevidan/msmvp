{"version":3,"file":"index.js","sources":["../src/Consts.ts","../src/Instance.ts","../src/Events.ts","../src/DOMAPI.ts","../src/Utils.ts","../src/AttributeHelpers.ts","../src/Root.ts","../src/Deloser.ts","../src/State/Subscribable.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/State/KeyboardNavigation.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Restorer.ts","../src/Shadowdomize/DOMFunctions.ts","../src/Shadowdomize/ShadowTreeWalker.ts","../src/Shadowdomize/ShadowMutationObserver.ts","../src/Shadowdomize/querySelector.ts","../src/Shadowdomize/index.ts","../src/Tabster.ts","../src/Types.ts","../src/EventsTypes.ts","../src/Deprecated.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TABSTER_ATTRIBUTE_NAME = \"data-tabster\" as const;\nexport const TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME = \"data-tabster-dummy\" as const;\n\nexport const FOCUSABLE_SELECTOR = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n    \"details > summary\",\n    \"audio[controls]\",\n    \"video[controls]\",\n].join(\", \");\n\nexport const AsyncFocusSources = {\n    EscapeGroupper: 1,\n    Restorer: 2,\n    Deloser: 3,\n} as const;\n\nexport const ObservedElementAccessibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n} as const;\n\nexport const ObservedElementRequestStatuses = {\n    Waiting: 0,\n    Succeeded: 1,\n    Canceled: 2,\n    TimedOut: 3,\n} as const;\n\nexport const RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n} as const;\n\nexport const DeloserStrategies = {\n    /**\n     * If the focus is lost, the focus will be restored automatically using all available focus history.\n     * This is the default strategy.\n     */\n    Auto: 0,\n    /**\n     * If the focus is lost from this Deloser instance, the focus will not be restored automatically.\n     * The application might listen to the event and restore the focus manually.\n     * But if it is lost from another Deloser instance, the history of this Deloser could be used finding\n     * the element to focus.\n     */\n    Manual: 1,\n} as const;\n\nexport const Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n} as const;\n\nexport const RestorerTypes = {\n    Source: 0,\n    Target: 1,\n} as const;\n\nexport const MoverDirections = {\n    Both: 0, // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1, // Only up/down arrows move to the next/previous.\n    Horizontal: 2, // Only left/right arrows move to the next/previous.\n    Grid: 3, // Two-dimentional movement depending on the visual placement.\n    GridLinear: 4, // Two-dimentional movement depending on the visual placement. Allows linear movement.\n} as const;\n\nexport const MoverKeys = {\n    ArrowUp: 1,\n    ArrowDown: 2,\n    ArrowLeft: 3,\n    ArrowRight: 4,\n    PageUp: 5,\n    PageDown: 6,\n    Home: 7,\n    End: 8,\n} as const;\n\nexport const GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1, // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2, // The focus is limited as above, plus trapped when inside.\n} as const;\n\nexport const GroupperMoveFocusActions = {\n    Enter: 1,\n    Escape: 2,\n} as const;\n\nexport const SysDummyInputsPositions = {\n    Auto: 0, // Tabster will place dummy inputs depending on the container tag name and on the default behaviour.\n    Inside: 1, // Tabster will always place dummy inputs inside the container.\n    Outside: 2, // Tabster will always place dummy inputs outside of the container.\n} as const;\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"restorer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                case \"sys\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const sys = newTabsterProps.sys;\n\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps,\n                        sys\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"restorer\":\n                if (tabsterOnElement.restorer) {\n                    tabsterOnElement.restorer.setProps(\n                        newTabsterProps.restorer as Types.RestorerProps\n                    );\n                } else {\n                    if (tabster.restorer) {\n                        if (newTabsterProps.restorer) {\n                            tabsterOnElement.restorer =\n                                tabster.restorer.createRestorer(\n                                    element,\n                                    newTabsterProps.restorer\n                                );\n                        }\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Restorer API used before initialization, please call `getRestorer()`\"\n                        );\n                    }\n                }\n\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps,\n                            sys\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            case \"sys\":\n                tabsterOnElement.sys = newTabsterProps.sys;\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport * as EventsTypes from \"./EventsTypes\";\n\n/**\n * Events sent by Tabster.\n */\n\nexport const TabsterFocusInEventName = \"tabster:focusin\";\nexport const TabsterFocusOutEventName = \"tabster:focusout\";\n\n// Event is dispatched when Tabster wants to move focus as the result of\n// handling keyboard event. This allows to preventDefault() if you want to have\n// some custom logic.\nexport const TabsterMoveFocusEventName = \"tabster:movefocus\";\n\n/**\n * Events sent by Deloser.\n */\n\nexport const DeloserFocusLostEventName = \"tabster:deloser:focus-lost\";\n\n/**\n * Events to be sent to Deloser by the application.\n */\n\nexport const DeloserRestoreFocusEventName = \"tabster:deloser:restore-focus\";\n\n/**\n * Events sent by Modalizer.\n */\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\n\n/**\n * Events sent by Mover.\n */\nexport const MoverStateEventName = \"tabster:mover:state\";\n\n/**\n * Events to be sent to Mover by the application.\n */\n\n// Event that can be dispatched by the application to programmatically move\n// focus inside Mover.\nexport const MoverMoveFocusEventName = \"tabster:mover:movefocus\";\n// Event that can be dispatched by the application to forget or modify\n// memorized element in Mover with memorizeCurrent property.\nexport const MoverMemorizedElementEventName = \"tabster:mover:memorized-element\";\n\n/**\n * Events sent by Groupper.\n */\n\n/**\n * Events to be sent to Groupper by the application.\n */\n\n// Event that can be dispatched by the application to programmatically enter\n// or escape Groupper.\nexport const GroupperMoveFocusEventName = \"tabster:groupper:movefocus\";\n\n/**\n * Events sent by Restorer.\n */\n\nexport const RestorerRestoreFocusEventName = \"tabster:restorer:restore-focus\";\n\n/**\n * Events sent by Root.\n */\nexport const RootFocusEventName = \"tabster:root:focus\";\nexport const RootBlurEventName = \"tabster:root:blur\";\n\n// Node.js environments do not have CustomEvent and it is needed for the events to be\n// evaluated. It doesn't matter if it works or not in Node.js environment.\n// So, we just need to make sure that it doesn't throw undefined reference.\nconst CustomEvent_ =\n    typeof CustomEvent !== \"undefined\"\n        ? CustomEvent\n        : (function () {\n              /* no-op */\n          } as typeof CustomEvent);\n\nexport abstract class TabsterCustomEvent<D> extends CustomEvent_<D> {\n    /**\n     * @deprecated use `detail`.\n     */\n    details?: D;\n\n    constructor(type: string, detail?: D) {\n        super(type, {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail,\n        });\n\n        this.details = detail;\n    }\n}\n\nexport class TabsterFocusInEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusInEventName, detail);\n    }\n}\n\nexport class TabsterFocusOutEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusOutEventName, detail);\n    }\n}\n\nexport class TabsterMoveFocusEvent extends TabsterCustomEvent<EventsTypes.TabsterMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.TabsterMoveFocusEventDetail) {\n        super(TabsterMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverStateEvent extends TabsterCustomEvent<Types.MoverElementState> {\n    constructor(detail: Types.MoverElementState) {\n        super(MoverStateEventName, detail);\n    }\n}\n\nexport class MoverMoveFocusEvent extends TabsterCustomEvent<EventsTypes.MoverMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.MoverMoveFocusEventDetail) {\n        super(MoverMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverMemorizedElementEvent extends TabsterCustomEvent<EventsTypes.MoverMemorizedElementEventDetail> {\n    constructor(detail: EventsTypes.MoverMemorizedElementEventDetail) {\n        super(MoverMemorizedElementEventName, detail);\n    }\n}\n\nexport class GroupperMoveFocusEvent extends TabsterCustomEvent<EventsTypes.GroupperMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.GroupperMoveFocusEventDetail) {\n        super(GroupperMoveFocusEventName, detail);\n    }\n}\n\nexport class ModalizerActiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerActiveEventName, detail);\n    }\n}\n\nexport class ModalizerInactiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerInactiveEventName, detail);\n    }\n}\n\nexport class DeloserFocusLostEvent extends TabsterCustomEvent<Types.DeloserElementActions> {\n    constructor(detail: Types.DeloserElementActions) {\n        super(DeloserFocusLostEventName, detail);\n    }\n}\n\nexport class DeloserRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(DeloserRestoreFocusEventName);\n    }\n}\n\nexport class RestorerRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(RestorerRestoreFocusEventName);\n    }\n}\n\nexport class RootFocusEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootFocusEventName, detail);\n    }\n}\n\nexport class RootBlurEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootBlurEventName, detail);\n    }\n}\n\n// addEventListener() typings augmentation.\ndeclare global {\n    interface GlobalEventHandlersEventMap {\n        [TabsterFocusInEventName]: TabsterFocusInEvent;\n        [TabsterFocusOutEventName]: TabsterFocusOutEvent;\n        [TabsterMoveFocusEventName]: TabsterMoveFocusEvent;\n\n        [MoverStateEventName]: MoverStateEvent;\n        [MoverMoveFocusEventName]: MoverMoveFocusEvent;\n        [MoverMemorizedElementEventName]: MoverMemorizedElementEvent;\n\n        [GroupperMoveFocusEventName]: GroupperMoveFocusEvent;\n\n        [ModalizerActiveEventName]: ModalizerActiveEvent;\n        [ModalizerInactiveEventName]: ModalizerInactiveEvent;\n\n        [DeloserFocusLostEventName]: DeloserFocusLostEvent;\n        [DeloserRestoreFocusEventName]: DeloserRestoreFocusEvent;\n\n        [RestorerRestoreFocusEventName]: RestorerRestoreFocusEvent;\n\n        [RootFocusEventName]: RootFocusEvent;\n        [RootBlurEventName]: RootBlurEvent;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DOMAPI } from \"./Types\";\n\nconst _createMutationObserver = (callback: MutationCallback) =>\n    new MutationObserver(callback);\nconst _createTreeWalker = (\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) => doc.createTreeWalker(root, whatToShow, filter);\nconst _getParentNode = (node: Node | null | undefined) =>\n    node ? node.parentNode : null;\nconst _getParentElement = (element: HTMLElement) =>\n    element ? element.parentElement : null;\nconst _nodeContains = (\n    parent: Node | null | undefined,\n    child: Node | null | undefined\n) => !!(child && parent?.contains(child));\nconst _getActiveElement = (doc: Document) => doc.activeElement;\nconst _querySelector = (element: Element, selector: string) =>\n    element.querySelector(selector);\nconst _querySelectorAll = (element: ParentNode, selector: string) =>\n    Array.prototype.slice.call(element.querySelectorAll(selector), 0);\nconst _getElementById = (doc: Document, id: string): HTMLElement | null =>\n    doc.getElementById(id);\nconst _getFirstChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.firstChild || null;\nconst _getLastChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.lastChild || null;\nconst _getNextSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.nextSibling || null;\nconst _getPreviousSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.previousSibling || null;\nconst _getFirstElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.firstElementChild || null;\nconst _getLastElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.lastElementChild || null;\nconst _getNextElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.nextElementSibling || null;\nconst _getPreviousElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.previousElementSibling || null;\nconst _appendChild = (parent: Node, child: Node): Node =>\n    parent.appendChild(child);\nconst _insertBefore = (\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node => parent.insertBefore(child, referenceChild);\nconst _getSelection = (ref: Node): Selection | null =>\n    ref.ownerDocument?.getSelection() || null;\nconst _getElementsByName = (referenceElement: HTMLElement, name: string) =>\n    referenceElement.ownerDocument.getElementsByName(name);\n\nexport const dom: DOMAPI = {\n    createMutationObserver: _createMutationObserver,\n    createTreeWalker: _createTreeWalker,\n    getParentNode: _getParentNode,\n    getParentElement: _getParentElement,\n    nodeContains: _nodeContains,\n    getActiveElement: _getActiveElement,\n    querySelector: _querySelector,\n    querySelectorAll: _querySelectorAll,\n    getElementById: _getElementById,\n    getFirstChild: _getFirstChild,\n    getLastChild: _getLastChild,\n    getNextSibling: _getNextSibling,\n    getPreviousSibling: _getPreviousSibling,\n    getFirstElementChild: _getFirstElementChild,\n    getLastElementChild: _getLastElementChild,\n    getNextElementSibling: _getNextElementSibling,\n    getPreviousElementSibling: _getPreviousElementSibling,\n    appendChild: _appendChild,\n    insertBefore: _insertBefore,\n    getSelection: _getSelection,\n    getElementsByName: _getElementsByName,\n};\n\nexport function setDOMAPI(domapi: Partial<DOMAPI>) {\n    for (const key of Object.keys(domapi) as (keyof DOMAPI)[]) {\n        (dom[key] as typeof domapi[typeof key]) = domapi[key];\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport {\n    DummyInputObserver as DummyInputObserverInterface,\n    GetWindow,\n    RadioButtonGroup,\n    SysProps,\n    TabsterAttributeProps,\n    TabsterCore,\n    TabsterPart as TabsterPartInterface,\n    Visibility,\n    WeakHTMLElement as WeakHTMLElementInterface,\n} from \"./Types\";\nimport {\n    FOCUSABLE_SELECTOR,\n    SysDummyInputsPositions,\n    TABSTER_ATTRIBUTE_NAME,\n    TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n    Visibilities,\n} from \"./Consts\";\nimport { TabsterMoveFocusEvent } from \"./Events\";\nimport { dom } from \"./DOMAPI\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\ninterface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\nconst _updateDummyInputsTimeout = 100;\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\nexport function hasSubFocusable(element: HTMLElement): boolean {\n    return !!element.querySelector(FOCUSABLE_SELECTOR);\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements WeakHTMLElementInterface<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return dom.createTreeWalker(\n        doc,\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!dom.nodeContains(parent, el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return dom.nodeContains(doc?.body, element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements TabsterPartInterface<P>\n{\n    protected _tabster: TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _fixedTarget?: WeakHTMLElement;\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement,\n        fixedTarget?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n        this._fixedTarget = fixedTarget;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this._fixedTarget;\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        dom.getParentNode(input)?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            const target = this._fixedTarget.get();\n\n            if (target) {\n                nativeFocus(target);\n            }\n\n            return;\n        }\n\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            return;\n        }\n\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n} as const;\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            sys,\n            outsideByDefault,\n            callForDefaultAction\n        );\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    moveOut(backwards: boolean): void {\n        this._instance?.moveOut(backwards);\n    }\n\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void {\n        this._instance?.moveOutWithDefaultAction(backwards, relatedEvent);\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: TabsterCore,\n        element: HTMLElement, // The target element to move to or out of.\n        moveOutOfElement: boolean, // Whether to move out of the element or into it.\n        isBackward: boolean, // Are we tabbing of shift-tabbing?\n        relatedEvent: KeyboardEvent // The event that triggered the move.\n    ): void {\n        // Phantom dummy is a hack to use browser's default action to move\n        // focus from a specific point in the application to the next/previous\n        // element. Default action is needed because next focusable element\n        // is not always available to focus directly (for example, next focusable\n        // is inside isolated iframe) or for uncontrolled areas we want to make\n        // sure that something that controls it takes care of the focusing.\n        // It works in a way that during the Tab key handling, we create a dummy\n        // input element, place it to the specific place in the DOM and focus it,\n        // then the default action of the Tab press will move focus from our dummy\n        // input. And we remove it from the DOM right after that.\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            let parent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            // Let's say we have a following DOM structure:\n            // <div>\n            //   <button>Button1</button>\n            //   <div id=\"uncontrolled\" data-tabster={uncontrolled: {}}>\n            //     <button>Button2</button>\n            //     <button>Button3</button>\n            //   </div>\n            //   <button>Button4</button>\n            // </div>\n            //\n            // We pass the \"uncontrolled\" div as the element to move to or out of.\n            //\n            // When we pass moveOutOfElement=true and isBackward=false,\n            // the phantom dummy input will be inserted before Button4.\n            //\n            // When we pass moveOutOfElement=true and isBackward=true, there are\n            // two cases. If the uncontrolled element is focusable (has tabindex=0),\n            // the phantom dummy input will be inserted after Button1. If the\n            // uncontrolled element is not focusable, the phantom dummy input will be\n            // inserted before Button2.\n            //\n            // When we pass moveOutOfElement=false and isBackward=false, the\n            // phantom dummy input will be inserted after Button1.\n            //\n            // When we pass moveOutOfElement=false and isBackward=true, the phantom\n            // dummy input will be inserted before Button4.\n            //\n            // And we have a corner case for <body> and we make sure that the inserted\n            // dummy is inserted properly when there are existing permanent dummies.\n\n            if (element.tagName === \"BODY\") {\n                // We cannot insert elements outside of BODY.\n                parent = element;\n                insertBefore =\n                    (moveOutOfElement && isBackward) ||\n                    (!moveOutOfElement && !isBackward)\n                        ? (dom.getFirstElementChild(\n                              element\n                          ) as HTMLElement | null)\n                        : null;\n            } else {\n                if (\n                    moveOutOfElement &&\n                    (!isBackward ||\n                        (isBackward &&\n                            !tabster.focusable.isFocusable(\n                                element,\n                                false,\n                                true,\n                                true\n                            )))\n                ) {\n                    parent = element;\n                    insertBefore = isBackward\n                        ? (element.firstElementChild as HTMLElement | null)\n                        : null;\n                } else {\n                    parent = dom.getParentElement(element);\n                    insertBefore =\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? element\n                            : (dom.getNextElementSibling(\n                                  element\n                              ) as HTMLElement | null);\n                }\n\n                let potentialDummy: HTMLElement | null;\n                let dummyFor: HTMLElement | null;\n\n                do {\n                    // This is a safety pillow for the cases when someone, combines\n                    // groupper with uncontrolled on the same node. Which is technically\n                    // not correct, but moving into the container element via its dummy\n                    // input would produce a correct behaviour in uncontrolled mode.\n                    potentialDummy = (\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? dom.getPreviousElementSibling(insertBefore)\n                            : insertBefore\n                    ) as HTMLElement | null;\n\n                    dummyFor = getDummyInputContainer(potentialDummy);\n\n                    if (dummyFor === element) {\n                        insertBefore =\n                            (moveOutOfElement && isBackward) ||\n                            (!moveOutOfElement && !isBackward)\n                                ? potentialDummy\n                                : (dom.getNextElementSibling(\n                                      potentialDummy\n                                  ) as HTMLElement | null);\n                    } else {\n                        dummyFor = null;\n                    }\n                } while (dummyFor);\n            }\n\n            if (\n                parent?.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: parent,\n                        next: null,\n                        relatedEvent,\n                    })\n                )\n            ) {\n                dom.insertBefore(parent, input, insertBefore);\n                nativeFocus(input);\n            }\n        }\n    }\n\n    static addPhantomDummyWithTarget(\n        tabster: TabsterCore,\n        sourceElement: HTMLElement,\n        isBackward: boolean,\n        targetElement: HTMLElement\n    ): void {\n        const dummy: DummyInput = new DummyInput(\n            tabster.getWindow,\n            true,\n            {\n                isPhantom: true,\n                isFirst: true,\n            },\n            undefined,\n            new WeakHTMLElement(tabster.getWindow, targetElement)\n        );\n\n        const input = dummy.input;\n\n        if (input) {\n            let dummyParent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            if (hasSubFocusable(sourceElement) && !isBackward) {\n                dummyParent = sourceElement;\n                insertBefore = dom.getFirstElementChild(\n                    sourceElement\n                ) as HTMLElement | null;\n            } else {\n                dummyParent = dom.getParentElement(sourceElement);\n                insertBefore = isBackward\n                    ? sourceElement\n                    : (dom.getNextElementSibling(\n                          sourceElement\n                      ) as HTMLElement | null);\n            }\n\n            if (dummyParent) {\n                dom.insertBefore(dummyParent, input, insertBefore);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\nexport class DummyInputObserver implements DummyInputObserverInterface {\n    private _win?: GetWindow;\n    private _updateQueue: Set<\n        (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    > = new Set();\n    private _updateTimer?: number;\n    private _lastUpdateQueueTime = 0;\n    private _changedParents: WeakSet<Node> = new WeakSet();\n    private _updateDummyInputsTimer?: number;\n    private _dummyElements: WeakHTMLElement<HTMLElement>[] = [];\n    private _dummyCallbacks: WeakMap<HTMLElement, () => void> = new WeakMap();\n    domChanged?(parent: HTMLElement): void;\n\n    constructor(win: GetWindow) {\n        this._win = win;\n    }\n\n    add(dummy: HTMLElement, callback: () => void): void {\n        if (!this._dummyCallbacks.has(dummy) && this._win) {\n            this._dummyElements.push(new WeakHTMLElement(this._win, dummy));\n            this._dummyCallbacks.set(dummy, callback);\n            this.domChanged = this._domChanged;\n        }\n    }\n\n    remove(dummy: HTMLElement): void {\n        this._dummyElements = this._dummyElements.filter((ref) => {\n            const element = ref.get();\n            return element && element !== dummy;\n        });\n\n        this._dummyCallbacks.delete(dummy);\n\n        if (this._dummyElements.length === 0) {\n            delete this.domChanged;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win?.();\n\n        if (this._updateTimer) {\n            win?.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        if (this._updateDummyInputsTimer) {\n            win?.clearTimeout(this._updateDummyInputsTimer);\n            delete this._updateDummyInputsTimer;\n        }\n\n        this._changedParents = new WeakSet();\n        this._dummyCallbacks = new WeakMap();\n        this._dummyElements = [];\n        this._updateQueue.clear();\n\n        delete this.domChanged;\n        delete this._win;\n    }\n\n    private _domChanged = (parent: HTMLElement): void => {\n        if (this._changedParents.has(parent)) {\n            return;\n        }\n\n        this._changedParents.add(parent);\n\n        if (this._updateDummyInputsTimer) {\n            return;\n        }\n\n        this._updateDummyInputsTimer = this._win?.().setTimeout(() => {\n            delete this._updateDummyInputsTimer;\n\n            for (const ref of this._dummyElements) {\n                const dummyElement = ref.get();\n\n                if (dummyElement) {\n                    const callback = this._dummyCallbacks.get(dummyElement);\n\n                    if (callback) {\n                        const dummyParent = dom.getParentNode(dummyElement);\n\n                        if (\n                            !dummyParent ||\n                            this._changedParents.has(dummyParent)\n                        ) {\n                            callback();\n                        }\n                    }\n                }\n            }\n\n            this._changedParents = new WeakSet();\n        }, _updateDummyInputsTimeout);\n    };\n\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void {\n        if (!this._win) {\n            // As this is a public method, we make sure that it has no effect when\n            // called after dispose().\n            return;\n        }\n\n        this._updateQueue.add(compute);\n\n        this._lastUpdateQueueTime = Date.now();\n\n        this._scheduledUpdatePositions();\n    }\n\n    private _scheduledUpdatePositions(): void {\n        if (this._updateTimer) {\n            return;\n        }\n\n        this._updateTimer = this._win?.().setTimeout(() => {\n            delete this._updateTimer;\n\n            // updatePositions() might be called quite a lot during the scrolling.\n            // So, instead of clearing the timeout and scheduling a new one, we\n            // check if enough time has passed since the last updatePositions() call\n            // and only schedule a new one if not.\n            // At maximum, we will update dummy inputs positions\n            // _updateDummyInputsTimeout * 2 after the last updatePositions() call.\n            if (\n                this._lastUpdateQueueTime + _updateDummyInputsTimeout <=\n                Date.now()\n            ) {\n                // A cache for current bulk of updates to reduce getComputedStyle() calls.\n                const scrollTopLeftCache = new Map<\n                    HTMLElement,\n                    { scrollTop: number; scrollLeft: number } | null\n                >();\n\n                const setTopLeftCallbacks: (() => void)[] = [];\n\n                for (const compute of this._updateQueue) {\n                    setTopLeftCallbacks.push(compute(scrollTopLeftCache));\n                }\n\n                this._updateQueue.clear();\n\n                // We're splitting the computation of offsets and setting them to avoid extra\n                // reflows.\n                for (const setTopLeft of setTopLeftCallbacks) {\n                    setTopLeft();\n                }\n\n                // Explicitly clear to not hold references till the next garbage collection.\n                scrollTopLeftCache.clear();\n            } else {\n                this._scheduledUpdatePositions();\n            }\n        }, _updateDummyInputsTimeout);\n    }\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: TabsterCore;\n    private _addTimer: number | undefined;\n    private _getWindow: GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: Set<HTMLElement> = new Set();\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const forcedDummyPosition = sys?.dummyInputsPosition;\n        const tagName = el.tagName;\n        this._isOutside = !forcedDummyPosition\n            ? (outsideByDefault ||\n                  tagName === \"UL\" ||\n                  tagName === \"OL\" ||\n                  tagName === \"TABLE\") &&\n              !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\")\n            : forcedDummyPosition === SysDummyInputsPositions.Outside;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        // We will be checking dummy input parents to see if their child list have changed.\n        // So, it is enough to have just one of the inputs observed, because\n        // both dummy inputs always have the same parent.\n        const dummyElement = this._firstDummy.input;\n        dummyElement &&\n            tabster._dummyObserver.add(dummyElement, this._addDummyInputs);\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements.clear();\n\n            const win = this._getWindow();\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            const dummyElement = this._firstDummy?.input;\n            dummyElement && this._tabster._dummyObserver.remove(dummyElement);\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (\n                    toFocus &&\n                    element.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: element,\n                            next: null,\n                            relatedEvent,\n                        })\n                    )\n                ) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs = () => {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            this._ensurePosition();\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    };\n\n    private _ensurePosition(): void {\n        const element = this._element?.get();\n        const firstDummyInput = this._firstDummy?.input;\n        const lastDummyInput = this._lastDummy?.input;\n\n        if (!element || !firstDummyInput || !lastDummyInput) {\n            return;\n        }\n\n        if (this._isOutside) {\n            const elementParent = dom.getParentNode(element);\n\n            if (elementParent) {\n                const nextSibling = dom.getNextSibling(element);\n\n                if (nextSibling !== lastDummyInput) {\n                    dom.insertBefore(\n                        elementParent,\n                        lastDummyInput,\n                        nextSibling\n                    );\n                }\n\n                if (\n                    dom.getPreviousElementSibling(element) !== firstDummyInput\n                ) {\n                    dom.insertBefore(elementParent, firstDummyInput, element);\n                }\n            }\n        } else {\n            if (dom.getLastElementChild(element) !== lastDummyInput) {\n                dom.appendChild(element, lastDummyInput);\n            }\n\n            const firstElementChild = dom.getFirstElementChild(element);\n\n            if (\n                firstElementChild &&\n                firstElementChild !== firstDummyInput &&\n                firstElementChild.parentNode\n            ) {\n                dom.insertBefore(\n                    firstElementChild.parentNode,\n                    firstDummyInput,\n                    firstElementChild\n                );\n            }\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        this._tabster._dummyObserver.updatePositions(\n            this._computeTransformOffsets\n        );\n    };\n\n    private _computeTransformOffsets = (\n        scrollTopLeftCache: Map<\n            HTMLElement,\n            { scrollTop: number; scrollLeft: number } | null\n        >\n    ): (() => void) => {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: typeof transformElements = new Set();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element && element.nodeType === Node.ELEMENT_NODE;\n            element = dom.getParentElement(element)\n        ) {\n            let scrollTopLeft = scrollTopLeftCache.get(element);\n\n            // getComputedStyle() and element.scrollLeft/Top() cause style recalculation,\n            // so we cache the result across all elements in the current bulk.\n            if (scrollTopLeft === undefined) {\n                const transform = win.getComputedStyle(element).transform;\n\n                if (transform && transform !== \"none\") {\n                    scrollTopLeft = {\n                        scrollTop: element.scrollTop,\n                        scrollLeft: element.scrollLeft,\n                    };\n                }\n\n                scrollTopLeftCache.set(element, scrollTopLeft || null);\n            }\n\n            if (scrollTopLeft) {\n                newTransformElements.add(element);\n\n                if (!transformElements.has(element)) {\n                    element.addEventListener(\n                        \"scroll\",\n                        this._addTransformOffsets\n                    );\n                }\n\n                scrollTop += scrollTopLeft.scrollTop;\n                scrollLeft += scrollTopLeft.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElements.has(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        return () => {\n            this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n            this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n        };\n    };\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = dom.getLastElementChild(container);\n        i;\n        i = dom.getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev\n                ? dom.getPreviousElementSibling(cur)\n                : dom.getNextElementSibling(cur)\n        ) as HTMLElement | null;\n        cur = dom.getParentElement(cur);\n    }\n\n    return adjacent || undefined;\n}\n\nexport function augmentAttribute(\n    tabster: TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n\nexport function getTabsterAttributeOnElement(\n    element: HTMLElement\n): TabsterAttributeProps | null {\n    if (!element.hasAttribute(TABSTER_ATTRIBUTE_NAME)) {\n        return null;\n    }\n\n    // We already checked the presence with `hasAttribute`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rawAttribute = element.getAttribute(TABSTER_ATTRIBUTE_NAME)!;\n    let tabsterAttribute: TabsterAttributeProps;\n    try {\n        tabsterAttribute = JSON.parse(rawAttribute);\n    } catch {\n        console.error(\"Tabster: failed to parse attribute\", rawAttribute);\n        tabsterAttribute = {};\n    }\n\n    return tabsterAttribute;\n}\n\nexport function isDisplayNone(element: HTMLElement): boolean {\n    const elementDocument = element.ownerDocument;\n    const computedStyle =\n        elementDocument.defaultView?.getComputedStyle(element);\n\n    // offsetParent is null for elements with display:none, display:fixed and for <body>.\n    if (\n        element.offsetParent === null &&\n        elementDocument.body !== element &&\n        computedStyle?.position !== \"fixed\"\n    ) {\n        return true;\n    }\n\n    // For our purposes of looking for focusable elements, visibility:hidden has the same\n    // effect as display:none.\n    if (computedStyle?.visibility === \"hidden\") {\n        return true;\n    }\n\n    // if an element has display: fixed, we need to check if it is also hidden with CSS,\n    // or within a parent hidden with CSS\n    if (computedStyle?.position === \"fixed\") {\n        if (computedStyle.display === \"none\") {\n            return true;\n        }\n\n        if (\n            element.parentElement?.offsetParent === null &&\n            elementDocument.body !== element.parentElement\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isRadio(element: HTMLElement): boolean {\n    return (\n        element.tagName === \"INPUT\" &&\n        !!(element as HTMLInputElement).name &&\n        (element as HTMLInputElement).type === \"radio\"\n    );\n}\n\nexport function getRadioButtonGroup(\n    element: HTMLElement\n): RadioButtonGroup | undefined {\n    if (!isRadio(element)) {\n        return;\n    }\n\n    const name = (element as HTMLInputElement).name;\n    let radioButtons = Array.from(dom.getElementsByName(element, name));\n    let checked: HTMLInputElement | undefined;\n\n    radioButtons = radioButtons.filter((el) => {\n        if (isRadio(el)) {\n            if ((el as HTMLInputElement).checked) {\n                checked = el as HTMLInputElement;\n            }\n            return true;\n        }\n        return false;\n    });\n\n    return {\n        name,\n        buttons: new Set(radioButtons as HTMLInputElement[]),\n        checked,\n    };\n}\n\n/**\n * If the passed element is Tabster dummy input, returns the container element this dummy input belongs to.\n * @param element Element to check for being dummy input.\n * @returns Dummy input container element (if the passed element is a dummy input) or null.\n */\nexport function getDummyInputContainer(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    return (\n        (\n            element as HTMLElementWithDummyContainer | null | undefined\n        )?.__tabsterDummyContainer?.get() || null\n    );\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [TABSTER_ATTRIBUTE_NAME]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            TABSTER_ATTRIBUTE_NAME,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(TABSTER_ATTRIBUTE_NAME);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KEYBORG_FOCUSIN, KEYBORG_FOCUSOUT, nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { RootFocusEvent, RootBlurEvent } from \"./Events\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean) => void,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            sys,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _sys?: Types.SysProps;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        this._sys = sys;\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        const w = win();\n        const doc = w.document;\n\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused,\n                this._sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean, relatedEvent: KeyboardEvent) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward, relatedEvent);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward,\n                    relatedEvent\n                );\n            }\n        }\n    }\n\n    private _setFocused = (hasFocused: boolean): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                this._dummyManager?.setTabbable(false);\n                element.dispatchEvent(new RootFocusEvent({ element }));\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n\n                        this._isFocused = false;\n                        this._dummyManager?.setTabbable(true);\n                        element.dispatchEvent(new RootBlurEvent({ element }));\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocusIn = (event: FocusEvent) => {\n        const getParent = this._tabster.getParent;\n        const rootElement = this._element.get();\n        let curElement = event.composedPath()[0] as HTMLElement | null;\n\n        do {\n            if (curElement === rootElement) {\n                this._setFocused(true);\n                return;\n            }\n\n            curElement =\n                curElement && (getParent(curElement) as HTMLElement | null);\n        } while (curElement);\n    };\n\n    private _onFocusOut = () => {\n        this._setFocused(false);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._autoRoot = autoRoot;\n\n        tabster.queueInit(() => {\n            if (this._autoRoot) {\n                this._autoRootCreate();\n            }\n        });\n    }\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(\n        element: HTMLElement,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props,\n            sys\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const { checkRtl, referenceElement } = options;\n\n        const getParent = tabster.getParent;\n\n        // Normally, the initialization starts on the next tick after the tabster\n        // instance creation. However, if the application starts using it before\n        // the next tick, we need to make sure the initialization is done.\n        tabster.drainInitQueue();\n\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let excludedFromMover = false;\n        let groupperBeforeMover: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let dirRightToLeft: boolean | undefined;\n        let uncontrolled: HTMLElement | null | undefined;\n        let curElement: Node | null = referenceElement || element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && dirRightToLeft === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    dirRightToLeft = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = getParent(curElement);\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                (tabsterOnElement.uncontrolled ||\n                    tagName === \"IFRAME\" ||\n                    tagName === \"WEBVIEW\") &&\n                tabster.focusable.isVisible(curElement as HTMLElement)\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                excludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (\n                !mover &&\n                curMover &&\n                (!modalizer || curModalizer) &&\n                (!curGroupper || curElement !== element) &&\n                curElement.contains(element) // Mover makes sense only for really inside elements, not for virutal out of the DOM order children.\n            ) {\n                mover = curMover;\n                groupperBeforeMover = !!groupper && groupper !== curGroupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = getParent(curElement);\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            groupperBeforeMover = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[\n                event.key as keyof Types.FocusableProps[\"ignoreKeydown\"]\n            ];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  groupperBeforeMover,\n                  modalizerInGroupper,\n                  rtl: checkRtl ? !!dirRightToLeft : undefined,\n                  uncontrolled,\n                  excludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        const getParent = tabster.getParent;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = getParent(el) as HTMLElement | null\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { DeloserStrategies, RestoreFocusOrders } from \"./Consts\";\nimport {\n    DeloserFocusLostEvent,\n    DeloserRestoreFocusEvent,\n    DeloserRestoreFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    isDisplayNone,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const available = this._deloser.findAvailable();\n        const deloserElement = this._deloser.getElement();\n\n        if (available && deloserElement) {\n            if (\n                !deloserElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"deloser\",\n                        owner: deloserElement,\n                        next: available,\n                    })\n                )\n            ) {\n                // Default action is prevented, don't look further.\n                return null;\n            }\n\n            return this._tabster.focusedElement.focus(available);\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean | null>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await i.focusAvailable();\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await h.focusAvailable(from);\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    const elementId = element.getAttribute(\"id\");\n\n    if (elementId) {\n        selector.push(\n            \"#\" + elementId.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let node = dom.getParentNode(element);\n\n    while (node && node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        // Stop at the shadow root as cross shadow selectors won't work.\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const isBody = (node as HTMLElement).tagName === \"BODY\";\n\n            selector.unshift(\n                buildElementSelector(node as HTMLElement, false, !isBody)\n            );\n\n            if (isBody) {\n                break;\n            }\n        }\n\n        node = dom.getParentNode(node);\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    readonly strategy: Types.DeloserStrategy;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this.strategy = props.strategy || DeloserStrategies.Auto;\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (!available && restoreFocusOrder === RestoreFocusOrders.RootFirst) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? dom.nodeContains(element, e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return element.dispatchEvent(\n            new DeloserFocusLostEvent(this.getActions())\n        );\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && dom.nodeContains(element, e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: Element[];\n\n                    try {\n                        els = dom.querySelectorAll(\n                            element.ownerDocument,\n                            selector\n                        );\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n            const doc = this._win().document;\n\n            doc.addEventListener(\n                DeloserRestoreFocusEventName,\n                this._onRestoreFocus\n            );\n\n            const activeElement = dom.getActiveElement(doc);\n\n            if (activeElement && activeElement !== doc.body) {\n                // Adding currently focused element to the deloser history.\n                this._onFocus(activeElement as HTMLElement);\n            }\n        });\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\n            DeloserRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onRestoreFocus = (event: DeloserRestoreFocusEvent): void => {\n        const target = event.composedPath()[0] as\n            | HTMLElement\n            | null\n            | undefined;\n\n        if (target) {\n            const available = DeloserAPI.getDeloser(\n                this._tabster,\n                target\n            )?.findAvailable();\n\n            if (available) {\n                this._tabster.focusedElement.focus(available);\n            }\n\n            event.stopImmediatePropagation();\n        }\n    };\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    (lastFocused && !isDisplayNone(lastFocused)))\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            let isManual = false;\n\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                if (curDeloser.strategy === DeloserStrategies.Manual) {\n                    isManual = true;\n                } else {\n                    const curDeloserElement = curDeloser.getElement();\n                    const el = curDeloser.findAvailable();\n\n                    if (\n                        el &&\n                        (!curDeloserElement?.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"deloser\",\n                                owner: curDeloserElement,\n                                next: el,\n                            })\n                        ) ||\n                            this._tabster.focusedElement.focus(el))\n                    ) {\n                        return;\n                    }\n                }\n            }\n\n            this._deactivate();\n\n            if (isManual) {\n                return;\n            }\n\n            this._isRestoringFocus = true;\n\n            // focusAvailable returns null when the default action is prevented by the application, false\n            // when nothing was focused and true when something was focused.\n            if ((await this._history.focusAvailable(null)) === false) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, detail: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, detail);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, detail: B): void {\n        this._callCallbacks(val, detail);\n    }\n\n    private _callCallbacks(val: A, detail: B): void {\n        this._callbacks.forEach((callback) => callback(val, detail));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport { ObservedElementAccessibilities } from \"./Consts\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccessibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = dom.getElementById(getOwner().document, data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName,\n                    data.accessibility\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean | null> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetail\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, detail);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._tabster.queueInit(this._init);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FOCUSABLE_SELECTOR } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getDummyInputContainer,\n    getLastChild,\n    getRadioButtonGroup,\n    isDisplayNone,\n    isRadio,\n    matchesSelector,\n    shouldIgnoreFocus,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, FOCUSABLE_SELECTOR) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument || el.nodeType !== Node.ELEMENT_NODE) {\n            return false;\n        }\n\n        if (isDisplayNone(el)) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = dom.getParentElement(e)) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                ...options,\n            },\n            out\n        );\n    }\n\n    findLast(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                isBackward: true,\n                ...options,\n            },\n            out\n        );\n    }\n\n    findNext(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options }, out);\n    }\n\n    findPrev(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options, isBackward: true }, out);\n    }\n\n    findDefault(\n        options: Types.FindDefaultProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null {\n        return (\n            this.findElement(\n                {\n                    ...options,\n                    acceptCondition: (el) =>\n                        this.isFocusable(\n                            el,\n                            options.includeProgrammaticallyFocusable\n                        ) && !!this.getProps(el).isDefault,\n                },\n                out\n            ) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options, out);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        isFindAll: boolean,\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onElement,\n        } = options;\n\n        if (!out) {\n            out = {};\n        }\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n        const hasCustomCondition = !!acceptCondition;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            isFindAll,\n            acceptCondition,\n            hasCustomCondition,\n            includeProgrammaticallyFocusable,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n            cachedRadioGroups: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement =\n                acceptElementState.foundElement ??\n                acceptElementState.foundBackward;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (isFindAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.foundBackward;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                if (foundElement && out) {\n                    out.uncontrolled = RootAPI.getTabsterContext(\n                        this._tabster,\n                        foundElement\n                    )?.uncontrolled;\n                }\n\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (!currentElement) {\n            out.outOfDOMOrder = true;\n        }\n\n        if (currentElement && dom.nodeContains(container, currentElement)) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                if (acceptElementState.skippedFocusable) {\n                    out.outOfDOMOrder = true;\n                }\n\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        do {\n            if (isBackward) {\n                walker.previousNode();\n            } else {\n                walker.nextNode();\n            }\n        } while (prepareForNextElement());\n\n        if (acceptElementState.skippedFocusable) {\n            out.outOfDOMOrder = true;\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const foundBackward = state.foundBackward;\n\n        if (\n            foundBackward &&\n            (element === foundBackward ||\n                !dom.nodeContains(foundBackward, element))\n        ) {\n            state.found = true;\n            state.foundElement = foundBackward;\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!dom.nodeContains(container, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (getDummyInputContainer(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (dom.nodeContains(state.rejectElementsFrom, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (shouldIgnoreFocus(element)) {\n            if (this.isFocusable(element, undefined, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside.\n        // But we do it only during the standard search when there is no custom accept\n        // element condition.\n        if (\n            !state.hasCustomCondition &&\n            (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\")\n        ) {\n            if (\n                this.isVisible(element) &&\n                ctx.modalizer?.userId === this._tabster.modalizer?.activeId\n            ) {\n                state.found = true;\n                state.rejectElementsFrom = state.foundElement = element;\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            if (this.isFocusable(element, false, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                dom.nodeContains(fromMoverElement, moverElement) &&\n                dom.nodeContains(container, fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    dom.nodeContains(fromMoverElement, groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (groupperElement) {\n                if (\n                    groupperElement === container ||\n                    !dom.nodeContains(container, groupperElement)\n                ) {\n                    groupper = undefined;\n                } else if (!dom.nodeContains(groupperElement, element)) {\n                    // _acceptElement() callback is called during the tree walking.\n                    // Given the potentiality of virtual parents (driven by the custom getParent() function),\n                    // we need to make sure that the groupper from the current element's context is not,\n                    // portaling us out of the DOM order.\n                    return NodeFilter.FILTER_REJECT;\n                }\n            }\n\n            if (moverElement) {\n                if (!dom.nodeContains(container, moverElement)) {\n                    mover = undefined;\n                } else if (!dom.nodeContains(moverElement, element)) {\n                    // _acceptElement() callback is called during the tree walking.\n                    // Given the potentiality of virtual parents (driven by the custom getParent() function),\n                    // we need to make sure that the mover from the current element's context is not,\n                    // portaling us out of the DOM order.\n                    return NodeFilter.FILTER_REJECT;\n                }\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !dom.nodeContains(groupperElement, moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n\n            if (\n                result === NodeFilter.FILTER_SKIP &&\n                this.isFocusable(element, false, true, true)\n            ) {\n                state.skippedFocusable = true;\n            }\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            if (\n                !state.isFindAll &&\n                isRadio(element) &&\n                !(element as HTMLInputElement).checked\n            ) {\n                // We need to mimic the browser's behaviour to skip unchecked radio buttons.\n                const radioGroupName = (element as HTMLInputElement).name;\n                let radioGroup: Types.RadioButtonGroup | undefined =\n                    state.cachedRadioGroups[radioGroupName];\n\n                if (!radioGroup) {\n                    radioGroup = getRadioButtonGroup(element);\n\n                    if (radioGroup) {\n                        state.cachedRadioGroups[radioGroupName] = radioGroup;\n                    }\n                }\n\n                if (radioGroup?.checked && radioGroup.checked !== element) {\n                    // Currently found element is a radio button in a group that has another radio button checked.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n\n            if (state.isBackward) {\n                // When TreeWalker goes backwards, it visits the container first,\n                // then it goes inside. So, if the container is accepted, we remember it,\n                // but allowing the TreeWalker to check inside.\n                state.foundBackward = element;\n                result = NodeFilter.FILTER_SKIP;\n            } else {\n                state.found = true;\n                state.foundElement = element;\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: \"Tab\";\n    Enter: \"Enter\";\n    Escape: \"Escape\";\n    Space: \" \";\n    PageUp: \"PageUp\";\n    PageDown: \"PageDown\";\n    End: \"End\";\n    Home: \"Home\";\n    ArrowLeft: \"ArrowLeft\";\n    ArrowUp: \"ArrowUp\";\n    ArrowRight: \"ArrowRight\";\n    ArrowDown: \"ArrowDown\";\n} = {\n    Tab: \"Tab\",\n    Enter: \"Enter\",\n    Escape: \"Escape\",\n    Space: \" \",\n    PageUp: \"PageUp\",\n    PageDown: \"PageDown\",\n    End: \"End\",\n    Home: \"Home\",\n    ArrowLeft: \"ArrowLeft\",\n    ArrowUp: \"ArrowUp\",\n    ArrowRight: \"ArrowRight\",\n    ArrowDown: \"ArrowDown\",\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    KEYBORG_FOCUSIN,\n    KEYBORG_FOCUSOUT,\n    KeyborgFocusInEvent,\n    KeyborgFocusOutEvent,\n    nativeFocus,\n} from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport { AsyncFocusSources } from \"../Consts\";\nimport {\n    TabsterFocusInEvent,\n    TabsterFocusOutEvent,\n    TabsterMoveFocusEvent,\n} from \"../Events\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { getTabsterOnElement } from \"../Instance\";\nimport { dom } from \"../DOMAPI\";\nimport { Subscribable } from \"./Subscribable\";\n\nfunction getUncontrolledCompletelyContainer(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): HTMLElement | undefined {\n    const getParent = tabster.getParent;\n    let el: HTMLElement | null = element;\n\n    do {\n        const uncontrolledOnElement = getTabsterOnElement(\n            tabster,\n            el\n        )?.uncontrolled;\n\n        if (\n            uncontrolledOnElement &&\n            tabster.uncontrolled.isUncontrolledCompletely(\n                el,\n                !!uncontrolledOnElement.completely\n            )\n        ) {\n            return el;\n        }\n\n        el = getParent(el) as HTMLElement | null;\n    } while (el);\n\n    return undefined;\n}\n\nconst AsyncFocusIntentPriorityBySource = {\n    [AsyncFocusSources.Restorer]: 0,\n    [AsyncFocusSources.Deloser]: 1,\n    [AsyncFocusSources.EscapeGroupper]: 2,\n};\n\ninterface AsyncFocus {\n    source: Types.AsyncFocusSource;\n    callback: () => void;\n    timeout: number;\n}\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetail>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              detail: Types.FocusedElementDetail;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n    private _asyncFocus?: AsyncFocus;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n        const doc = win.document;\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement && activeElement !== doc.body) {\n            this._setFocusedElement(activeElement as HTMLElement);\n        }\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        const asyncFocus = this._asyncFocus;\n        if (asyncFocus) {\n            win.clearTimeout(asyncFocus.timeout);\n            delete this._asyncFocus;\n        }\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus({ preventScroll });\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const { container, ignoreAccessibility } = props;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    undefined,\n                    !isFirst,\n                    ignoreAccessibility\n                )?.element;\n            }\n        }\n\n        if (toFocus && !dom.nodeContains(container, toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    requestAsyncFocus(\n        source: Types.AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void {\n        const win = this._tabster.getWindow();\n        const currentAsyncFocus = this._asyncFocus;\n\n        if (currentAsyncFocus) {\n            if (\n                AsyncFocusIntentPriorityBySource[source] >\n                AsyncFocusIntentPriorityBySource[currentAsyncFocus.source]\n            ) {\n                // Previously registered intent has higher priority.\n                return;\n            }\n\n            // New intent has higher priority.\n            win.clearTimeout(currentAsyncFocus.timeout);\n        }\n\n        this._asyncFocus = {\n            source,\n            callback,\n            timeout: win.setTimeout(() => {\n                this._asyncFocus = undefined;\n                callback();\n            }, delay),\n        };\n    }\n\n    cancelAsyncFocus(source: Types.AsyncFocusSource): void {\n        const asyncFocus = this._asyncFocus;\n\n        if (asyncFocus?.source === source) {\n            this._tabster.getWindow().clearTimeout(asyncFocus.timeout);\n            this._asyncFocus = undefined;\n        }\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const detail: Types.FocusedElementDetail = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            detail.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                detail.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            detail,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, detail);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        super.setVal(val, detail);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement;\n\n        if (target) {\n            this._setFocusedElement(\n                target,\n                e.detail.relatedTarget as HTMLElement | undefined,\n                e.detail.isFocusedProgrammatically\n            );\n        }\n    };\n\n    private _onFocusOut = (e: KeyborgFocusOutEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.detail?.originalEvent.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer\n        ) => {\n            next = what.findNextTabbable(\n                currentElement,\n                referenceElement,\n                isBackward,\n                ignoreAccessibility\n            );\n\n            if (currentElement && !next?.element) {\n                const parentElement =\n                    what !== modalizer &&\n                    dom.getParentElement(what.getElement());\n\n                if (parentElement) {\n                    const parentCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        currentElement,\n                        { referenceElement: parentElement }\n                    );\n\n                    if (parentCtx) {\n                        const currentScopeElement = what.getElement();\n                        const newCurrent = isBackward\n                            ? currentScopeElement\n                            : (currentScopeElement &&\n                                  getLastChild(currentScopeElement)) ||\n                              currentScopeElement;\n\n                        if (newCurrent) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                parentCtx,\n                                container,\n                                newCurrent,\n                                parentElement,\n                                isBackward,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                next.outOfDOMOrder = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        if (groupper && mover) {\n            callFindNext(ctx.groupperBeforeMover ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            const findProps: Types.FindNextProps = {\n                container: actualContainer,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            const nextElement = tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            next = {\n                element: nextElement,\n                outOfDOMOrder: findPropsOut.outOfDOMOrder,\n                uncontrolled: findPropsOut.uncontrolled,\n            };\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Tab || event.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(event)) {\n            return;\n        }\n\n        const isBackward = event.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            undefined,\n            isBackward,\n            true\n        );\n\n        const rootElement = ctx.root.getElement();\n\n        if (!rootElement) {\n            return;\n        }\n\n        const nextElement = next?.element;\n        const uncontrolledCompletelyContainer =\n            getUncontrolledCompletelyContainer(tabster, currentElement);\n\n        if (nextElement) {\n            const nextUncontrolled = next.uncontrolled;\n\n            if (\n                ctx.uncontrolled ||\n                dom.nodeContains(nextUncontrolled, currentElement)\n            ) {\n                if (\n                    (!next.outOfDOMOrder &&\n                        nextUncontrolled === ctx.uncontrolled) ||\n                    (uncontrolledCompletelyContainer &&\n                        !dom.nodeContains(\n                            uncontrolledCompletelyContainer,\n                            nextElement\n                        ))\n                ) {\n                    // Nothing to do, everything will be done by the browser or something\n                    // that controls the uncontrolled area.\n                    return;\n                }\n\n                // We are in uncontrolled area. We allow whatever controls it to move\n                // focus, but we add a phantom dummy to make sure the focus is moved\n                // to the correct place if the uncontrolled area allows default action.\n                // We only need that in the controlled mode, because in uncontrolled\n                // mode we have dummy inputs around everything that redirects focus.\n                DummyInputManager.addPhantomDummyWithTarget(\n                    tabster,\n                    currentElement,\n                    isBackward,\n                    nextElement\n                );\n\n                return;\n            }\n\n            if (\n                (nextUncontrolled &&\n                    tabster.focusable.isVisible(nextUncontrolled)) ||\n                (nextElement.tagName === \"IFRAME\" &&\n                    tabster.focusable.isVisible(nextElement))\n            ) {\n                // For iframes and uncontrolled areas we always want to use default action to\n                // move focus into.\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    DummyInputManager.moveWithPhantomDummy(\n                        tabster,\n                        nextUncontrolled ?? nextElement,\n                        false,\n                        isBackward,\n                        event\n                    );\n                }\n\n                return;\n            }\n\n            if (controlTab || next?.outOfDOMOrder) {\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    nativeFocus(nextElement);\n                }\n            } else {\n                // We are in uncontrolled mode and the next element is in DOM order.\n                // Just allow the default action.\n            }\n        } else {\n            if (\n                !uncontrolledCompletelyContainer &&\n                rootElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: rootElement,\n                        next: null,\n                        relatedEvent: event,\n                    })\n                )\n            ) {\n                ctx.root.moveOutWithDefaultAction(isBackward, event);\n            }\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        if (element) {\n            element.dispatchEvent(new TabsterFocusInEvent(detail));\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...detail };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                last.dispatchEvent(new TabsterFocusOutEvent(d));\n            }\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    AsyncFocusSources,\n    GroupperMoveFocusActions,\n    GroupperTabbabilities,\n} from \"./Consts\";\nimport {\n    GroupperMoveFocusEvent,\n    GroupperMoveFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getAdjacentElement,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Groupper,\n            sys,\n            true\n        );\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            undefined,\n                            isBackward,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                undefined,\n                                isBackward,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            getDummyInputContainer(currentElement) === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            dom.nodeContains(groupperElement, currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, outOfDOMOrder: true };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !dom.nodeContains(groupperElement, currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                outOfDOMOrder: true,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            const findProps: Types.FindNextProps = {\n                container: groupperElement,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n\n            if (\n                !next &&\n                this._props.tabbability ===\n                    GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container: groupperElement,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (\n            let e = dom.getParentElement(element);\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = dom.getParentElement(this.getElement());\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.groupperBeforeMover\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                dom.nodeContains(state.container, parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        dom.nodeContains(\n                            state.container,\n                            parentGroupperElement\n                        ) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        state.skippedFocusable = true;\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    dom.nodeContains(groupperElement, element)\n                ) {\n                    state.skippedFocusable = true;\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.rejectElementsFrom = groupperElement;\n                    state.skippedFocusable = true;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _updateTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        const doc = win.document;\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement) {\n            this._onFocus(activeElement as HTMLElement);\n        }\n\n        doc.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.cancelAsyncFocus(\n            AsyncFocusSources.EscapeGroupper\n        );\n\n        this._current = {};\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(\n        element: HTMLElement,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const tabster = this._tabster;\n        const newGroupper = new Groupper(\n            tabster,\n            element,\n            this._onGroupperDispose,\n            props,\n            sys\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        const focusedElement = tabster.focusedElement.getFocusedElement();\n\n        // Newly created groupper contains currently focused element, update the state on the next tick (to\n        // make sure all grouppers are processed).\n        if (\n            focusedElement &&\n            dom.nodeContains(element, focusedElement) &&\n            !this._updateTimer\n        ) {\n            this._updateTimer = this._win().setTimeout(() => {\n                delete this._updateTimer;\n                // Making sure the focused element hasn't changed.\n                if (\n                    focusedElement ===\n                    tabster.focusedElement.getFocusedElement()\n                ) {\n                    this._updateCurrent(focusedElement);\n                }\n            }, 0);\n        }\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        let target = e.target as HTMLElement | null;\n\n        while (target && !this._tabster.focusable.isFocusable(target)) {\n            target = this._tabster.getParent(target) as HTMLElement | null;\n        }\n\n        if (target) {\n            this._updateCurrent(target);\n        }\n    };\n\n    private _updateCurrent(element: HTMLElement): void {\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        const tabster = this._tabster;\n        const newIds: Record<string, true> = {};\n\n        for (\n            let el = tabster.getParent(element);\n            el;\n            el = tabster.getParent(el)\n        ) {\n            const groupper = getTabsterOnElement(\n                tabster,\n                el as HTMLElement\n            )?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                this._current[groupper.id] = groupper;\n                const isTabbable =\n                    groupper.isActive() ||\n                    (element !== el &&\n                        (!groupper.getProps().delegated ||\n                            groupper.getFirst(false) !== element));\n\n                groupper.makeTabbable(isTabbable);\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Enter && event.key !== Keys.Escape) {\n            return;\n        }\n\n        // Give a chance to other listeners to handle the event.\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    private _onMoveFocus = (e: GroupperMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const action = e.detail?.action;\n\n        if (element && action !== undefined && !e.defaultPrevented) {\n            if (action === GroupperMoveFocusActions.Enter) {\n                this._enterGroupper(element);\n            } else {\n                this._escapeGroupper(element);\n            }\n\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _enterGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const groupper = ctx?.groupper || ctx?.modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            (element === groupperElement ||\n                (groupper.getProps().delegated &&\n                    element === groupper.getFirst(false)))\n        ) {\n            const next = tabster.focusable.findNext({\n                container: groupperElement,\n                currentElement: element,\n                useActiveModalizer: true,\n            });\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (relatedEvent) {\n                    // When the application hasn't prevented default,\n                    // we consider the event completely handled, hence we\n                    // prevent the initial event's default action and stop\n                    // propagation.\n                    relatedEvent.preventDefault();\n                    relatedEvent.stopImmediatePropagation();\n                }\n\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    private _escapeGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent,\n        fromModalizer?: boolean\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        let groupper = ctx?.groupper || ctx?.modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            dom.nodeContains(groupperElement, element)\n        ) {\n            let next: HTMLElement | null | undefined;\n\n            if (element !== groupperElement || fromModalizer) {\n                next = groupper.getFirst(true);\n            } else {\n                const parentElement = dom.getParentElement(groupperElement);\n                const parentCtx = parentElement\n                    ? RootAPI.getTabsterContext(tabster, parentElement)\n                    : undefined;\n\n                groupper = parentCtx?.groupper;\n                next = groupper?.getFirst(true);\n            }\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (groupper) {\n                    groupper.makeTabbable(false);\n                }\n\n                // This part happens asynchronously inside setTimeout,\n                // so no need to prevent default or stop propagation.\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    moveFocus(\n        element: HTMLElement,\n        action: Types.GroupperMoveFocusAction\n    ): HTMLElement | null {\n        return action === GroupperMoveFocusActions.Enter\n            ? this._enterGroupper(element)\n            : this._escapeGroupper(element);\n    }\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n\n        if (ctx && (ctx?.groupper || ctx?.modalizerInGroupper)) {\n            tabster.focusedElement.cancelAsyncFocus(\n                AsyncFocusSources.EscapeGroupper\n            );\n\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            if (event.key === Keys.Enter) {\n                this._enterGroupper(element, event);\n            } else if (event.key === Keys.Escape) {\n                // We will handle Esc asynchronously, if something in the application will\n                // move focus during the keypress handling, we will not interfere.\n                const focusedElement =\n                    tabster.focusedElement.getFocusedElement();\n\n                tabster.focusedElement.requestAsyncFocus(\n                    AsyncFocusSources.EscapeGroupper,\n                    () => {\n                        if (\n                            focusedElement !==\n                                tabster.focusedElement.getFocusedElement() &&\n                            // A part of Modalizer that has called this handler to escape the active groupper\n                            // might have been removed from DOM, if the focus is on body, we still want to handle Esc.\n                            ((fromModalizer && !focusedElement) ||\n                                !fromModalizer)\n                        ) {\n                            // Something else in the application has moved focus, we will not handle Esc.\n                            return;\n                        }\n\n                        this._escapeGroupper(element, event, fromModalizer);\n                    },\n                    0\n                );\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport { ModalizerActiveEvent, ModalizerInactiveEvent } from \"./Events\";\nimport { ModalizerEventDetail } from \"./EventsTypes\";\nimport {\n    augmentAttribute,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = getDummyInputContainer(input);\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        undefined,\n                        isBackward,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakHTMLElement<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined,\n        activeElements: WeakHTMLElement<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster,\n                sys\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.get())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(\n                            new WeakHTMLElement(\n                                this._tabster.getWindow,\n                                element\n                            )\n                        );\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this._dispatchEvent(isActive);\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return dom.nodeContains(this.getElement(), element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            const findProps: Types.FindNextProps = {\n                container,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            if (!next && this._props.isTrapped && tabster.modalizer?.activeId) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                if (next === null) {\n                    next = currentElement;\n                }\n\n                outOfDOMOrder = true;\n            } else {\n                outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    private _dispatchEvent(isActive: boolean, allElements?: boolean): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.get())\n                : [element];\n\n            for (const el of elements) {\n                if (el) {\n                    const eventDetail: ModalizerEventDetail = {\n                        id: this.userId,\n                        element,\n                    };\n\n                    const event = isActive\n                        ? new ModalizerActiveEvent(eventDetail)\n                        : new ModalizerInactiveEvent(eventDetail);\n\n                    el.dispatchEvent(event);\n\n                    if (event.defaultPrevented) {\n                        defaultPrevented = true;\n                    }\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakHTMLElement<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n    private _alwaysAccessibleSelector: string | undefined;\n    private _accessibleCheck: Types.ModalizerElementAccessibleCheck | undefined;\n    private _activationHistory: (string | undefined)[];\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakHTMLElement<HTMLElement>[];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        // @deprecated use accessibleCheck.\n        alwaysAccessibleSelector?: string,\n        accessibleCheck?: Types.ModalizerElementAccessibleCheck\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this._alwaysAccessibleSelector = alwaysAccessibleSelector;\n        this._accessibleCheck = accessibleCheck;\n        this._activationHistory = [];\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            sys,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        const focusedElement =\n            this._tabster.focusedElement.getFocusedElement() ?? null;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            element !== focusedElement &&\n            dom.nodeContains(element, focusedElement)\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                const activationHistory = this._activationHistory;\n                const cleanActivationHistory: (string | undefined)[] = [];\n                let prevHistoryItem: string | undefined;\n\n                // The history order is from most recent to oldest.\n                for (let i = activationHistory.length; i--; ) {\n                    // Remove from activation history, making sure there are no duplicates\n                    // for cases like [modal2, modal1, modal2, modal1]: just removing modal2\n                    // will result in [modal1, modal1] and we want just [modal1]. Otherwise,\n                    // there is a chance for this array to grow forever in a narrow case of\n                    // a modalizer that stays in DOM forever and is being activated/deactivated\n                    // switching between other modalizers that come and go.\n                    const modalizerUserIdFromHistory = activationHistory[i];\n\n                    if (modalizerUserIdFromHistory === userId) {\n                        continue;\n                    }\n\n                    if (modalizerUserIdFromHistory !== prevHistoryItem) {\n                        prevHistoryItem = modalizerUserIdFromHistory;\n\n                        if (\n                            modalizerUserIdFromHistory ||\n                            cleanActivationHistory.length > 0\n                        ) {\n                            cleanActivationHistory.unshift(\n                                modalizerUserIdFromHistory\n                            );\n                        }\n                    }\n                }\n\n                this._activationHistory = cleanActivationHistory;\n\n                if (this.activeId === userId) {\n                    const prevActiveId = cleanActivationHistory[0];\n                    const prevActive = prevActiveId\n                        ? Object.values(this._parts[prevActiveId])[0]\n                        : undefined;\n                    this.setActive(prevActive);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Escape) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                    ? 1\n                                    : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n\n        const activationHistory = this._activationHistory;\n        if (\n            activationHistory[0] !== userId &&\n            (userId !== undefined || activationHistory.length > 0)\n        ) {\n            activationHistory.unshift(userId);\n        }\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, elementFromModalizer);\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    activate(modalizerElementOrContainer: HTMLElement | undefined): boolean {\n        const modalizerToActivate: Types.Modalizer | undefined =\n            modalizerElementOrContainer\n                ? RootAPI.getTabsterContext(\n                      this._tabster,\n                      modalizerElementOrContainer\n                  )?.modalizer\n                : undefined;\n\n        if (!modalizerElementOrContainer || modalizerToActivate) {\n            this.setActive(modalizerToActivate);\n            return true;\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.get();\n\n                if (el && (dom.nodeContains(element, el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        const ret =\n            modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n                ? undefined\n                : NodeFilter.FILTER_SKIP;\n\n        if (ret !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        return ret;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleSelector = this._alwaysAccessibleSelector;\n        const alwaysAccessibleElements: HTMLElement[] = alwaysAccessibleSelector\n            ? Array.from(\n                  dom.querySelectorAll(\n                      body,\n                      alwaysAccessibleSelector\n                  ) as HTMLElement[]\n              )\n            : [];\n        const activeModalizerElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const modalizerParts = parts[userId];\n\n            for (const id of Object.keys(modalizerParts)) {\n                const modalizer = modalizerParts[id];\n                const el = modalizer.getElement();\n                const props = modalizer.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        activeModalizerElements.push(el);\n\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakHTMLElement<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                !this._accessibleCheck?.(element, activeModalizerElements) &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(\n                    new WeakHTMLElement(tabster.getWindow, element)\n                );\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = dom.getFirstElementChild(\n                    element\n                ) as Types.HTMLElementWithTabsterFlags | null;\n                el;\n                el = dom.getNextElementSibling(\n                    el\n                ) as Types.HTMLElementWithTabsterFlags | null\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n                let containedByModalizer = false;\n\n                if (allVisibleElements) {\n                    const elParent = tabster.getParent(el);\n\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (dom.nodeContains(el, c)) {\n                            containsModalizer = true;\n                            break;\n                        } else if (dom.nodeContains(c, elParent)) {\n                            // tabster.getParent() could be provided by the application to\n                            // handle, for example, virtual parents. Making sure, we are\n                            // not setting aria-hidden on elements which are virtually\n                            // inside modalizer.\n                            containedByModalizer = true;\n                        }\n                    }\n\n                    if (\n                        containsModalizer ||\n                        el.__tabsterElementFlags?.noDirectAriaHidden\n                    ) {\n                        walk(el as HTMLElement);\n                    } else if (!skip && !containedByModalizer) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.get())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param focusedElement - Element that is focused\n     * @param detail - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        const tabster = this._tabster;\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = tabster.getParent(e) as HTMLElement | null\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(tabster, e, _ariaHidden);\n            }\n        }\n\n        let modalizer = ctx.modalizer;\n\n        const tabsterOnFocusedElement = getTabsterOnElement(\n            tabster,\n            focusedElement\n        );\n        const modalizerOnFocusedElement = tabsterOnFocusedElement?.modalizer;\n\n        if (modalizerOnFocusedElement) {\n            modalizerOnFocusedElement.focused();\n\n            if (\n                modalizerOnFocusedElement.userId === this.activeId &&\n                tabsterOnFocusedElement.groupper\n            ) {\n                const parentElement = tabster.getParent(focusedElement);\n                const parentModalizer =\n                    parentElement &&\n                    RootAPI.getTabsterContext(tabster, parentElement)\n                        ?.modalizer;\n\n                if (parentModalizer) {\n                    modalizer = parentModalizer;\n                } else {\n                    this.setActive(undefined);\n                    return;\n                }\n            }\n        }\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        modalizer?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            detail.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n        const focusedElementModalizer =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement)?.modalizer;\n\n        if (\n            !focusedElement ||\n            (focusedElement &&\n                focusedElementModalizer?.userId === this.activeId)\n        ) {\n            // If there is no currently focused element, or the currently focused element\n            // is in the active modalizer, we don't need to do anything.\n            return;\n        }\n\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = tabster.focusable.findFirst({\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = tabster.focusable.findLast({\n                        container,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { Visibilities, MoverDirections, MoverKeys } from \"./Consts\";\nimport {\n    MoverMemorizedElementEvent,\n    MoverMemorizedElementEventName,\n    MoverMoveFocusEvent,\n    MoverMoveFocusEventName,\n    MoverStateEvent,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    WeakHTMLElement,\n    getDummyInputContainer,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover, sys);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    undefined,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n\n            if (memorized && this._tabster.focusable.isFocusable(memorized)) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                el.dispatchEvent(new MoverStateEvent(state));\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container && getDummyInputContainer(currentElement) === container;\n\n        if (!container) {\n            return null;\n        }\n\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !dom.nodeContains(container, currentElement))\n        ) {\n            const findProps: Types.FindNextProps = {\n                currentElement,\n                referenceElement,\n                container,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = this._tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.excludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const {\n            memorizeCurrent,\n            visibilityAware,\n            hasDefault = true,\n        } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!dom.nodeContains(moverElement, state.from) ||\n                getDummyInputContainer(state.from) === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Visibilities.Visible ||\n                                (visibility === Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.rejectElementsFrom = moverElement;\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Visibilities.Visible\n                        : Visibilities.PartiallyVisible;\n\n                if (newVisibility === Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            } else {\n                newVisibility = Visibilities.Invisible;\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    el.dispatchEvent(new MoverStateEvent(state));\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = dom.createMutationObserver(\n            (mutations: MutationRecord[]) => {\n                for (const mutation of mutations) {\n                    const target = mutation.target;\n                    const removed = mutation.removedNodes;\n                    const added = mutation.addedNodes;\n\n                    if (mutation.type === \"attributes\") {\n                        if (mutation.attributeName === \"tabindex\") {\n                            updateQueue.push({\n                                element: target as HTMLElement,\n                                type: _moverUpdateAttr,\n                            });\n                        }\n                    } else {\n                        for (let i = 0; i < removed.length; i++) {\n                            updateQueue.push({\n                                element: removed[\n                                    i\n                                ] as HTMLElement as HTMLElement,\n                                type: _moverUpdateRemove,\n                            });\n                        }\n\n                        for (let i = 0; i < added.length; i++) {\n                            updateQueue.push({\n                                element: added[i] as HTMLElement,\n                                type: _moverUpdateAdd,\n                            });\n                        }\n                    }\n                }\n\n                requestUpdate();\n            }\n        );\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = dom.getFirstElementChild(element);\n                el;\n                el = dom.getNextElementSibling(el)\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = dom.getParentElement(el)\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility = this._visible[id] || Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._movers = {};\n\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.addEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.removeEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(\n        element: HTMLElement,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props,\n            sys\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        // When something in the app gets focused, we are making sure that\n        // the relevant context Mover is aware of it.\n        // Looking for the relevant context Mover from the currently\n        // focused element parent, not from the element itself, because the\n        // Mover element itself cannot be its own current (but might be\n        // current for its parent Mover).\n        let currentFocusableElement = element;\n        let deepestFocusableElement = element;\n\n        for (\n            let el: HTMLElement | null | undefined =\n                dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            // We go through all Movers up from the focused element and\n            // set their current element to the deepest focusable of that\n            // Mover.\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(deepestFocusableElement);\n                currentFocusableElement = undefined;\n            }\n\n            if (\n                !currentFocusableElement &&\n                this._tabster.focusable.isFocusable(el)\n            ) {\n                currentFocusableElement = deepestFocusableElement = el;\n            }\n        }\n    };\n\n    moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey\n    ): HTMLElement | null {\n        return this._moveFocus(fromElement, key);\n    }\n\n    private _moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, fromElement, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.excludedFromMover ||\n            (relatedEvent && ctx.ignoreKeydown(relatedEvent))\n        ) {\n            return null;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (ctx.groupperBeforeMover) {\n            const groupper = ctx.groupper;\n\n            if (groupper && !groupper.isActive(true)) {\n                // For the cases when we have Mover/Active Groupper/Inactive Groupper, we need to check\n                // the grouppers between the current element and the current mover.\n                for (\n                    let el: HTMLElement | null | undefined =\n                        dom.getParentElement(groupper.getElement());\n                    el && el !== container;\n                    el = dom.getParentElement(el)\n                ) {\n                    if (\n                        getTabsterOnElement(tabster, el)?.groupper?.isActive(\n                            true\n                        )\n                    ) {\n                        return null;\n                    }\n                }\n            } else {\n                return null;\n            }\n        }\n\n        if (!container) {\n            return null;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || MoverDirections.Both;\n        const isBoth = direction === MoverDirections.Both;\n        const isVertical = isBoth || direction === MoverDirections.Vertical;\n        const isHorizontal = isBoth || direction === MoverDirections.Horizontal;\n        const isGridLinear = direction === MoverDirections.GridLinear;\n        const isGrid = isGridLinear || direction === MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n        let scrollIntoViewArg: boolean | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = fromElement.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.rtl) {\n            if (key === MoverKeys.ArrowRight) {\n                key = MoverKeys.ArrowLeft;\n            } else if (key === MoverKeys.ArrowLeft) {\n                key = MoverKeys.ArrowRight;\n            }\n        }\n\n        if (\n            (key === MoverKeys.ArrowDown && isVertical) ||\n            (key === MoverKeys.ArrowRight && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (!isGridLinear && focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (key === MoverKeys.ArrowUp && isVertical) ||\n            (key === MoverKeys.ArrowLeft && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (!isGridLinear && nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.PageUp) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = false;\n        } else if (key === MoverKeys.PageDown) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = true;\n        } else if (isGrid) {\n            const isBackward = key === MoverKeys.ArrowUp;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: fromElement,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (\n            next &&\n            (!relatedEvent ||\n                (relatedEvent &&\n                    container.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"mover\",\n                            owner: container,\n                            next,\n                            relatedEvent,\n                        })\n                    )))\n        ) {\n            if (scrollIntoViewArg !== undefined) {\n                scrollIntoView(this._win, next, scrollIntoViewArg);\n            }\n\n            if (relatedEvent) {\n                relatedEvent.preventDefault();\n                relatedEvent.stopImmediatePropagation();\n            }\n\n            nativeFocus(next);\n\n            return next;\n        }\n\n        return null;\n    }\n\n    private _onKeyDown = async (event: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        // Give a chance to other listeners to handle the event (for example,\n        // to scroll instead of moving focus).\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const key = event.key;\n        let moverKey: Types.MoverKey | undefined;\n\n        if (key === Keys.ArrowDown) {\n            moverKey = MoverKeys.ArrowDown;\n        } else if (key === Keys.ArrowRight) {\n            moverKey = MoverKeys.ArrowRight;\n        } else if (key === Keys.ArrowUp) {\n            moverKey = MoverKeys.ArrowUp;\n        } else if (key === Keys.ArrowLeft) {\n            moverKey = MoverKeys.ArrowLeft;\n        } else if (key === Keys.PageDown) {\n            moverKey = MoverKeys.PageDown;\n        } else if (key === Keys.PageUp) {\n            moverKey = MoverKeys.PageUp;\n        } else if (key === Keys.Home) {\n            moverKey = MoverKeys.Home;\n        } else if (key === Keys.End) {\n            moverKey = MoverKeys.End;\n        }\n\n        if (!moverKey) {\n            return;\n        }\n\n        const focused = this._tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, key))) {\n            return;\n        }\n\n        this._moveFocus(focused, moverKey, event);\n    };\n\n    private _onMoveFocus = (e: MoverMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const key = e.detail?.key;\n\n        if (element && key !== undefined && !e.defaultPrevented) {\n            this._moveFocus(element, key);\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _onMemorizedElement = (e: MoverMemorizedElementEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement | null | undefined;\n        let memorizedElement = e.detail?.memorizedElement;\n\n        if (target) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, target);\n            const mover = ctx?.mover;\n\n            if (mover) {\n                if (\n                    memorizedElement &&\n                    !dom.nodeContains(mover.getElement(), memorizedElement)\n                ) {\n                    memorizedElement = undefined;\n                }\n\n                mover.setCurrent(memorizedElement);\n\n                e.stopImmediatePropagation();\n            }\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        key: string\n    ): Promise<boolean> {\n        if (\n            element.getAttribute(\"aria-expanded\") === \"true\" &&\n            element.hasAttribute(\"aria-activedescendant\")\n        ) {\n            // It is likely a combobox with expanded options and arrow keys are\n            // controlled by it.\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection = dom.getSelection(element);\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                key === Keys.ArrowLeft || key === Keys.ArrowUp;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = dom.getSelection(element) || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = dom.getSelection(element) || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                dom.nodeContains(element, anchorNode) &&\n                                dom.nodeContains(element, focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (\n                                            nodeText &&\n                                            !dom.getFirstChild(node)\n                                        ) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = dom.getFirstChild(node);\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (key === Keys.ArrowLeft ||\n                    key === Keys.ArrowUp ||\n                    key === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (key === Keys.ArrowRight ||\n                    key === Keys.ArrowDown ||\n                    key === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport function observeMutations(\n    doc: Document,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        const removedNodes = new Set<Node>();\n\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === TABSTER_ATTRIBUTE_NAME) {\n                    // removedNodes helps to make sure we are not recreating things\n                    // for the removed elements.\n                    // For some reason, if we do removeChild() and setAttribute() on the\n                    // removed child in the same tick, both the child removal and the attribute\n                    // change will be present in the mutation records. And the attribute change\n                    // will follow the child removal.\n                    // So, we remember the removed nodes and ignore attribute changes for them.\n                    if (!removedNodes.has(target)) {\n                        updateTabsterByAttribute(\n                            tabster,\n                            target as HTMLElement\n                        );\n                    }\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    const removedNode = removed[i];\n                    removedNodes.add(removedNode);\n                    updateTabsterElements(removedNode, true);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n            }\n        }\n\n        removedNodes.clear();\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = dom.createMutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [TABSTER_ATTRIBUTE_NAME],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport {\n    ObservedElementAccessibilities,\n    ObservedElementRequestStatuses,\n} from \"../Consts\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            ObservedElementAccessibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            ObservedElementAccessibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n                status: ObservedElementRequestStatuses.Succeeded,\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === ObservedElementAccessibilities.Accessible) {\n            prefix = \"a\";\n        } else if (accessibility === ObservedElementAccessibilities.Focusable) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.request) {\n                    w.request.status = ObservedElementRequestStatuses.TimedOut;\n                }\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        const request: Types.ObservedElementAsyncRequest<HTMLElement | null> = {\n            result: promise,\n            cancel: () => {\n                if (request.status === ObservedElementRequestStatuses.Waiting) {\n                    // cancel() function is callable by user, someone might call it after request is finished,\n                    // we are making sure that status of a finished request is not overriden.\n                    request.status = ObservedElementRequestStatuses.Canceled;\n                }\n                this._rejectWaiting(key, true);\n            },\n            status: ObservedElementRequestStatuses.Waiting,\n        };\n\n        w.request = request;\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number,\n        options: Pick<FocusOptions, \"preventScroll\"> = {}\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        const ret: Types.ObservedElementAsyncRequest<boolean> = {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(\n                          element,\n                          true,\n                          undefined,\n                          options.preventScroll\n                      )\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n            status: request.status,\n        };\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n\n            ret.status = request.status;\n        });\n\n        return ret;\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccessibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.request) {\n                waiting.request.status =\n                    ObservedElementRequestStatuses.Succeeded;\n            }\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    ObservedElementAccessibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        ObservedElementAccessibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        ObservedElementAccessibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(this._init);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent && parent.nodeType === Node.ELEMENT_NODE;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    private _isUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean\n    ) => boolean | undefined;\n\n    constructor(\n        isUncontrolledCompletely?: (\n            element: HTMLElement,\n            completely: boolean\n        ) => boolean | undefined\n    ) {\n        this._isUncontrolledCompletely = isUncontrolledCompletely;\n    }\n\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean {\n        const isUncontrolledCompletely = this._isUncontrolledCompletely?.(\n            element,\n            completely\n        );\n        // If isUncontrolledCompletely callback is not defined or returns undefined, then the default\n        // behaviour is to return the uncontrolled.completely value from the element.\n        return isUncontrolledCompletely === undefined\n            ? completely\n            : isUncontrolledCompletely;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport type {\n    FocusedElementState,\n    GetWindow,\n    KeyboardNavigationState,\n    Restorer as RestorerInterface,\n    RestorerAPI as RestorerAPIType,\n    RestorerProps,\n    TabsterCore,\n} from \"./Types\";\nimport { RestorerTypes, AsyncFocusSources } from \"./Consts\";\nimport {\n    RestorerRestoreFocusEvent,\n    RestorerRestoreFocusEventName,\n} from \"./Events\";\nimport { TabsterPart, WeakHTMLElement } from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass Restorer extends TabsterPart<RestorerProps> implements RestorerInterface {\n    private _hasFocus = false;\n\n    constructor(\n        tabster: TabsterCore,\n        element: HTMLElement,\n        props: RestorerProps\n    ) {\n        super(tabster, element, props);\n\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.addEventListener(\"focusout\", this._onFocusOut);\n            element?.addEventListener(\"focusin\", this._onFocusIn);\n\n            // set hasFocus when the instance is created, in case focus has already moved within it\n            this._hasFocus = dom.nodeContains(\n                element,\n                element && dom.getActiveElement(element.ownerDocument)\n            );\n        }\n    }\n\n    dispose(): void {\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.removeEventListener(\"focusout\", this._onFocusOut);\n            element?.removeEventListener(\"focusin\", this._onFocusIn);\n\n            if (this._hasFocus) {\n                const doc = this._tabster.getWindow().document;\n                doc.body.dispatchEvent(new RestorerRestoreFocusEvent());\n            }\n        }\n    }\n\n    private _onFocusOut = (e: FocusEvent) => {\n        const element = this._element?.get();\n        if (element && e.relatedTarget === null) {\n            element.dispatchEvent(new RestorerRestoreFocusEvent());\n        }\n        if (\n            element &&\n            !dom.nodeContains(element, e.relatedTarget as HTMLElement | null)\n        ) {\n            this._hasFocus = false;\n        }\n    };\n\n    private _onFocusIn = () => {\n        this._hasFocus = true;\n    };\n}\n\nclass History {\n    private static readonly DEPTH = 10;\n    private _stack: WeakHTMLElement<HTMLElement>[] = [];\n    private _getWindow: GetWindow;\n    constructor(getWindow: GetWindow) {\n        this._getWindow = getWindow;\n    }\n    /**\n     * Push a weak element to the top of the history stack.\n     * If the stack is full, the bottom weak element is removed.\n     * If the element is already at the top of the stack, it is not duplicated.\n     */\n    push(element: HTMLElement): void {\n        // Don't duplicate the top of history\n        if (this._stack[this._stack.length - 1]?.get() === element) {\n            return;\n        }\n\n        if (this._stack.length > History.DEPTH) {\n            this._stack.shift();\n        }\n        this._stack.push(\n            new WeakHTMLElement<HTMLElement>(this._getWindow, element)\n        );\n    }\n    /**\n     * Pop the first element from the history that satisfies the callback.\n     * The history is searched from the top to the bottom (from the most recent to the least recent).\n     *\n     * If a weak reference to the element is broken,\n     * or the element is no longer in the DOM,\n     * the element is removed from the top of the stack while popping.\n     *\n     * If no matching element is found, undefined is returned.\n     * If the stack is empty, undefined is returned.\n     */\n    pop(\n        filter: (element: HTMLElement) => boolean = () => true\n    ): HTMLElement | undefined {\n        const doc = this._getWindow().document;\n        for (let index = this._stack.length - 1; index >= 0; index--) {\n            const maybeElement = this._stack.pop()?.get();\n            if (\n                maybeElement &&\n                dom.nodeContains(\n                    doc.body,\n                    dom.getParentElement(maybeElement)\n                ) &&\n                filter(maybeElement)\n            ) {\n                return maybeElement;\n            }\n        }\n        return undefined;\n    }\n}\n\nexport class RestorerAPI implements RestorerAPIType {\n    private _tabster: TabsterCore;\n    private _history: History;\n    private _keyboardNavState: KeyboardNavigationState;\n    private _focusedElementState: FocusedElementState;\n    private _getWindow: GetWindow;\n\n    constructor(tabster: TabsterCore) {\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._getWindow().addEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n        this._history = new History(this._getWindow);\n\n        this._keyboardNavState = tabster.keyboardNavigation;\n        this._focusedElementState = tabster.focusedElement;\n\n        this._focusedElementState.subscribe(this._onFocusIn);\n    }\n\n    dispose(): void {\n        const win = this._getWindow();\n        this._focusedElementState.unsubscribe(this._onFocusIn);\n\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        win.removeEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n    }\n\n    private _onRestoreFocus = (e: Event) => {\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        // ShadowDOM will have shadowRoot as e.target.\n        const source = e.composedPath()[0] as HTMLElement | undefined;\n\n        if (source) {\n            // source id must be recovered before source is removed from DOM\n            // otherwise it'll be unreachable\n            // (as tabster on element will not be available through getTabsterOnElement)\n            const sourceId = getTabsterOnElement(\n                this._tabster,\n                source\n            )?.restorer?.getProps().id;\n\n            this._focusedElementState.requestAsyncFocus(\n                AsyncFocusSources.Restorer,\n                () => this._restoreFocus(source, sourceId),\n                0\n            );\n        }\n    };\n\n    private _onFocusIn = (element: HTMLElement | undefined) => {\n        if (!element) {\n            return;\n        }\n\n        const tabsterAttribute = getTabsterOnElement(this._tabster, element);\n        if (\n            tabsterAttribute?.restorer?.getProps().type !== RestorerTypes.Target\n        ) {\n            return;\n        }\n\n        this._history.push(element);\n    };\n\n    private _restoreFocus = (source: HTMLElement, sourceId?: string) => {\n        // don't restore focus if focus isn't lost to body\n        const doc = this._getWindow().document;\n        if (dom.getActiveElement(doc) !== doc.body) {\n            return;\n        }\n        if (\n            // clicking on any empty space focuses body - this is can be a false positive\n            !this._keyboardNavState.isNavigatingWithKeyboard() &&\n            // Source no longer exists on DOM - always restore focus\n            dom.nodeContains(doc.body, source)\n        ) {\n            return;\n        }\n\n        const getId = (element: HTMLElement) =>\n            getTabsterOnElement(this._tabster, element)?.restorer?.getProps()\n                .id;\n\n        this._history.pop((target) => sourceId === getId(target))?.focus();\n    };\n\n    public createRestorer(element: HTMLElement, props: RestorerProps) {\n        const restorer = new Restorer(this._tabster, element, props);\n        // Focus might already be on a restorer target when it gets created so the focusin will not do anything\n        if (\n            props.type === RestorerTypes.Target &&\n            dom.getActiveElement(element.ownerDocument) === element\n        ) {\n            this._history.push(element);\n        }\n\n        return restorer;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport function getActiveElement(doc: Document): Element | null {\n    let activeElement = doc.activeElement;\n\n    while (activeElement?.shadowRoot?.activeElement) {\n        activeElement = activeElement.shadowRoot.activeElement;\n    }\n\n    return activeElement;\n}\n\nexport function nodeContains(\n    node: Node | null | undefined,\n    otherNode: Node | null | undefined\n): boolean {\n    if (!node || !otherNode) {\n        return false;\n    }\n\n    let currentNode: HTMLElement | Node | null | undefined = otherNode;\n\n    while (currentNode) {\n        if (currentNode === node) {\n            return true;\n        }\n\n        if (\n            typeof (currentNode as HTMLSlotElement).assignedElements !==\n                \"function\" &&\n            (currentNode as HTMLElement).assignedSlot?.parentNode\n        ) {\n            // Element is slotted\n            currentNode = (currentNode as HTMLElement).assignedSlot?.parentNode;\n        } else if (currentNode.nodeType === document.DOCUMENT_FRAGMENT_NODE) {\n            // Element is in shadow root\n            currentNode = (currentNode as ShadowRoot).host;\n        } else {\n            currentNode = currentNode.parentNode;\n        }\n    }\n\n    return false;\n}\n\nexport function getParentNode(\n    node: Node | null | undefined\n): ParentNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (\n        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n        (node as ShadowRoot).host\n    ) {\n        return (node as ShadowRoot).host;\n    }\n\n    return node.parentNode;\n}\n\nexport function getParentElement(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    for (\n        let parentNode = getParentNode(element);\n        parentNode;\n        parentNode = getParentNode(parentNode)\n    ) {\n        if (parentNode.nodeType === Node.ELEMENT_NODE) {\n            return parentNode as HTMLElement;\n        }\n    }\n\n    return null;\n}\n\nexport function getFirstChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if ((node as Element).shadowRoot) {\n        const child = getFirstChild((node as Element).shadowRoot);\n\n        if (child) {\n            return child;\n        }\n\n        // If the attached shadowRoot has no children, just try ordinary children,\n        // that might come after.\n    }\n\n    return node.firstChild;\n}\n\nexport function getLastChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (!node.lastChild && (node as Element).shadowRoot) {\n        return getLastChild((node as Element).shadowRoot);\n    }\n\n    return node.lastChild;\n}\n\nexport function getNextSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    return node?.nextSibling || null;\n}\n\nexport function getPreviousSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    let sibling = node.previousSibling;\n\n    if (!sibling && node.parentElement?.shadowRoot) {\n        sibling = getLastChild(node.parentElement.shadowRoot);\n    }\n\n    return sibling;\n}\n\nexport function getFirstElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getFirstChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getNextSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getLastElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getLastChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getPreviousSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getNextElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getNextSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getNextSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function getPreviousElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getPreviousSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getPreviousSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function appendChild(parent: Node, child: Node): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.appendChild(child)\n        : parent.appendChild(child);\n}\n\nexport function insertBefore(\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.insertBefore(child, referenceChild)\n        : parent.insertBefore(child, referenceChild);\n}\n\ninterface ShadowRootWithGetSelection extends ShadowRoot {\n    getSelection?: typeof Window.prototype.getSelection;\n}\n\nexport function getSelection(ref: Node): Selection | null {\n    const win = ref.ownerDocument?.defaultView;\n\n    if (!win) {\n        return null;\n    }\n\n    for (let el: Node | null = ref; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            const tmp = el as ShadowRootWithGetSelection;\n\n            // ShadowRoot.getSelection() exists only in Chrome.\n            if (tmp.getSelection) {\n                return tmp.getSelection() || null;\n            }\n\n            break;\n        }\n    }\n\n    return win.getSelection() || null;\n}\n\nexport function getElementsByName(\n    referenceElement: HTMLElement,\n    name: string\n): NodeListOf<HTMLElement> {\n    for (let el: Node | null = referenceElement; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // Shadow root doesn't have getElementsByName()...\n            return (el as ShadowRoot).querySelectorAll(`[name=${name}]`);\n        }\n    }\n\n    return referenceElement.ownerDocument.getElementsByName(name);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getLastElementChild, nodeContains } from \"./DOMFunctions\";\n\nfunction getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = getLastElementChild(container);\n        i;\n        i = getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport class ShadowTreeWalker implements TreeWalker {\n    public readonly filter: NodeFilter | null;\n    public readonly root: Node;\n    public readonly whatToShow: number;\n\n    private _doc: Document;\n    private _walkerStack: TreeWalker[] = [];\n    private _currentNode: Node;\n    private _currentSetFor: Set<TreeWalker> = new Set();\n\n    constructor(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ) {\n        this._doc = doc;\n        this.root = root;\n        this.filter = filter ?? null;\n        this.whatToShow = whatToShow ?? NodeFilter.SHOW_ALL;\n        this._currentNode = root;\n\n        this._walkerStack.unshift(\n            doc.createTreeWalker(root, whatToShow, this._acceptNode)\n        );\n\n        const shadowRoot = (root as Element).shadowRoot;\n\n        if (shadowRoot) {\n            const walker = this._doc.createTreeWalker(\n                shadowRoot,\n                this.whatToShow,\n                { acceptNode: this._acceptNode }\n            );\n\n            this._walkerStack.unshift(walker);\n        }\n    }\n\n    private _acceptNode = (node: Node): number => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const shadowRoot = (node as Element).shadowRoot;\n\n            if (shadowRoot) {\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                this._walkerStack.unshift(walker);\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                if (typeof this.filter === \"function\") {\n                    return this.filter(node);\n                } else if (this.filter?.acceptNode) {\n                    return this.filter.acceptNode(node);\n                } else if (this.filter === null) {\n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            }\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    };\n\n    public get currentNode(): Node {\n        return this._currentNode;\n    }\n\n    public set currentNode(node: Node) {\n        if (!nodeContains(this.root, node)) {\n            throw new Error(\n                \"Cannot set currentNode to a node that is not contained by the root node.\"\n            );\n        }\n\n        const walkers: TreeWalker[] = [];\n        let curNode: Node | null | undefined = node;\n        let currentWalkerCurrentNode = node;\n\n        this._currentNode = node;\n\n        while (curNode && curNode !== this.root) {\n            if (curNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                const shadowRoot = curNode as ShadowRoot;\n\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                walkers.push(walker);\n\n                walker.currentNode = currentWalkerCurrentNode;\n\n                this._currentSetFor.add(walker);\n\n                curNode = currentWalkerCurrentNode = shadowRoot.host;\n            } else {\n                curNode = curNode.parentNode;\n            }\n        }\n\n        const walker = this._doc.createTreeWalker(this.root, this.whatToShow, {\n            acceptNode: this._acceptNode,\n        });\n\n        walkers.push(walker);\n\n        walker.currentNode = currentWalkerCurrentNode;\n\n        this._currentSetFor.add(walker);\n\n        this._walkerStack = walkers;\n    }\n\n    public firstChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public lastChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public nextNode(): Node | null {\n        const nextNode = this._walkerStack[0].nextNode();\n\n        if (nextNode) {\n            const shadowRoot = (nextNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(nextNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(nextNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return nextNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.nextNode();\n            }\n\n            return nextNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.nextNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public previousNode(): Node | null {\n        const currentWalker = this._walkerStack[0];\n\n        if (currentWalker.currentNode === currentWalker.root) {\n            if (this._currentSetFor.has(currentWalker)) {\n                this._currentSetFor.delete(currentWalker);\n\n                if (this._walkerStack.length > 1) {\n                    this._walkerStack.shift();\n                    return this.previousNode();\n                } else {\n                    return null;\n                }\n            }\n\n            const lastChild = getLastChild(currentWalker.root as HTMLElement);\n\n            if (lastChild) {\n                currentWalker.currentNode = lastChild;\n\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(lastChild);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(lastChild);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return lastChild;\n                }\n            }\n        }\n\n        const previousNode = currentWalker.previousNode();\n\n        if (previousNode) {\n            const shadowRoot = (previousNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(previousNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(previousNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return previousNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.previousNode();\n            }\n\n            return previousNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.previousNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public nextSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public previousSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public parentNode(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n}\n\nexport function createShadowTreeWalker(\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) {\n    return new ShadowTreeWalker(doc, root, whatToShow, filter);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nodeContains } from \"./DOMFunctions\";\n\ninterface OverridenAttachShadow {\n    __origAttachShadow?: typeof Element.prototype.attachShadow;\n}\n\nexport class ShadowMutationObserver implements MutationObserver {\n    private static _shadowObservers: Set<ShadowMutationObserver> = new Set();\n\n    private _root?: Node;\n    private _options?: MutationObserverInit;\n    private _callback: MutationCallback;\n    private _observer: MutationObserver;\n    private _subObservers: Map<Node, MutationObserver>;\n    private _isObserving = false;\n\n    private static _overrideAttachShadow(\n        win: Window & typeof globalThis\n    ): void {\n        const origAttachShadow = win.Element.prototype.attachShadow;\n\n        if ((origAttachShadow as OverridenAttachShadow).__origAttachShadow) {\n            return;\n        }\n\n        Element.prototype.attachShadow = function (\n            this: Element,\n            options?: ShadowRootInit\n        ): ShadowRoot {\n            const shadowRoot = origAttachShadow.call(this, options);\n\n            for (const shadowObserver of ShadowMutationObserver._shadowObservers) {\n                shadowObserver._addSubObserver(shadowRoot);\n            }\n\n            return shadowRoot;\n        };\n\n        (\n            Element.prototype.attachShadow as OverridenAttachShadow\n        ).__origAttachShadow = origAttachShadow;\n    }\n\n    constructor(callback: MutationCallback) {\n        this._callback = callback;\n        this._observer = new MutationObserver(this._callbackWrapper);\n        this._subObservers = new Map();\n    }\n\n    private _callbackWrapper = (\n        mutations: MutationRecord[],\n        observer: MutationObserver\n    ): void => {\n        for (const mutation of mutations) {\n            if (mutation.type === \"childList\") {\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                for (let i = 0; i < removed.length; i++) {\n                    this._walkShadows(removed[i], true);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    this._walkShadows(added[i]);\n                }\n            }\n        }\n\n        this._callback(mutations, observer);\n    };\n\n    private _addSubObserver(shadowRoot: ShadowRoot): void {\n        if (\n            !this._options ||\n            !this._callback ||\n            this._subObservers.has(shadowRoot)\n        ) {\n            return;\n        }\n\n        if (this._options.subtree && nodeContains(this._root, shadowRoot)) {\n            const subObserver = new MutationObserver(this._callbackWrapper);\n\n            this._subObservers.set(shadowRoot, subObserver);\n\n            if (this._isObserving) {\n                subObserver.observe(shadowRoot, this._options);\n            }\n\n            this._walkShadows(shadowRoot);\n        }\n    }\n\n    public disconnect(): void {\n        this._isObserving = false;\n\n        delete this._options;\n\n        ShadowMutationObserver._shadowObservers.delete(this);\n\n        for (const subObserver of this._subObservers.values()) {\n            subObserver.disconnect();\n        }\n\n        this._subObservers.clear();\n\n        this._observer.disconnect();\n    }\n\n    public observe(target: Node, options?: MutationObserverInit): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n        const win = doc?.defaultView as Window & typeof globalThis;\n\n        if (!doc || !win) {\n            return;\n        }\n\n        ShadowMutationObserver._overrideAttachShadow(win);\n        ShadowMutationObserver._shadowObservers.add(this);\n\n        this._root = target;\n        this._options = options;\n\n        this._isObserving = true;\n\n        this._observer.observe(target, options);\n\n        this._walkShadows(target);\n    }\n\n    private _walkShadows(target: Node, remove?: boolean): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n\n        if (!doc) {\n            return;\n        }\n\n        if (target === doc) {\n            target = doc.body;\n        } else {\n            const shadowRoot = (target as Element).shadowRoot;\n\n            if (shadowRoot) {\n                this._addSubObserver(shadowRoot);\n                return;\n            }\n        }\n\n        const walker = doc.createTreeWalker(target, NodeFilter.SHOW_ELEMENT, {\n            acceptNode: (node) => {\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    if (remove) {\n                        const subObserver = this._subObservers.get(node);\n\n                        if (subObserver) {\n                            subObserver.disconnect();\n                            this._subObservers.delete(node);\n                        }\n                    } else {\n                        const shadowRoot = (node as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            this._addSubObserver(shadowRoot);\n                        }\n                    }\n                }\n\n                return NodeFilter.FILTER_SKIP;\n            },\n        });\n\n        walker.nextNode();\n    }\n\n    public takeRecords(): MutationRecord[] {\n        const records = this._observer.takeRecords();\n\n        for (const subObserver of this._subObservers.values()) {\n            records.push(...subObserver.takeRecords());\n        }\n\n        return records;\n    }\n}\n\nexport function createShadowMutationObserver(\n    callback: MutationCallback\n): MutationObserver {\n    return new ShadowMutationObserver(callback);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nfunction shadowQuerySelector(\n    node: ParentNode,\n    selector: string,\n    all: boolean\n): Element[] {\n    // TODO: This is probably slow. Optimize to use each shadowRoot's querySelector/querySelectorAll\n    //       instead of walking the tree.\n\n    const elements: Element[] = [];\n\n    walk(node, selector);\n\n    return elements;\n\n    function walk(from: Node, selector: string): void {\n        let el: Element | null = null;\n\n        const walker = document.createTreeWalker(\n            from,\n            NodeFilter.SHOW_ELEMENT,\n            {\n                acceptNode: (n) => {\n                    if (n.nodeType === Node.ELEMENT_NODE) {\n                        if ((n as Element).matches(selector)) {\n                            el = n as Element;\n                            elements.push(el);\n                            return all\n                                ? NodeFilter.FILTER_SKIP\n                                : NodeFilter.FILTER_ACCEPT;\n                        }\n\n                        const shadowRoot = (n as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            walk(shadowRoot, selector);\n                            return !all && elements.length\n                                ? NodeFilter.FILTER_ACCEPT\n                                : NodeFilter.FILTER_SKIP;\n                        }\n                    }\n                    return NodeFilter.FILTER_SKIP;\n                },\n            }\n        );\n\n        walker.nextNode();\n    }\n}\n\nexport function querySelectorAll(\n    node: ParentNode,\n    selector: string\n): Element[] {\n    return shadowQuerySelector(node, selector, true);\n}\n\nexport function querySelector(\n    node: ParentNode,\n    selector: string\n): Element | null {\n    return shadowQuerySelector(node, selector, false)[0] || null;\n}\n\nexport function getElementById(doc: Document, id: string): HTMLElement | null {\n    return querySelector(doc, \"#\" + id) as HTMLElement | null;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// TODO: The functions below do not consider Shadow DOM slots yet. We will be adding\n// support for slots as the need arises.\n\nexport { createShadowTreeWalker as createTreeWalker } from \"./ShadowTreeWalker\";\nexport { createShadowMutationObserver as createMutationObserver } from \"./ShadowMutationObserver\";\nexport {\n    appendChild,\n    getActiveElement,\n    getFirstChild,\n    getFirstElementChild,\n    getLastChild,\n    getLastElementChild,\n    getNextElementSibling,\n    getNextSibling,\n    getParentElement,\n    getParentNode,\n    getPreviousElementSibling,\n    getPreviousSibling,\n    getSelection,\n    getElementsByName,\n    insertBefore,\n    nodeContains,\n} from \"./DOMFunctions\";\nexport {\n    getElementById,\n    querySelector,\n    querySelectorAll,\n} from \"./querySelector\";\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    DummyInputObserver,\n    getDummyInputContainer,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n} from \"./Utils\";\nimport { RestorerAPI } from \"./Restorer\";\nimport { dom, setDOMAPI } from \"./DOMAPI\";\nimport * as shadowDOMAPI from \"./Shadowdomize\";\n\nexport { getDummyInputContainer };\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n    private _initTimer: number | undefined;\n    private _initQueue: (() => void)[] = [];\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n    _dummyObserver: Types.DummyInputObserver;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n    restorer?: Types.RestorerAPI;\n    getParent: (el: Node) => Node | null;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        if (props?.DOMAPI) {\n            setDOMAPI({ ...props.DOMAPI });\n        }\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI(\n            // TODO: Remove checkUncontrolledTrappingFocus in the next major version.\n            props?.checkUncontrolledCompletely ||\n                props?.checkUncontrolledTrappingFocus\n        );\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this._dummyObserver = new DummyInputObserver(getWindow);\n\n        this.getParent = props?.getParent ?? dom.getParentNode;\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        startFakeWeakRefsCleanup(getWindow);\n\n        // Gives a tick to the host app to initialize other tabster\n        // APIs before tabster starts observing attributes.\n        this.queueInit(() => {\n            this.internal.resumeObserver(true);\n        });\n    }\n\n    /**\n     * Merges external props with the current props. Not all\n     * props can/should be mergeable, so let's add more as we move on.\n     * @param props Tabster props\n     */\n    private _mergeProps(props?: Types.TabsterCoreProps) {\n        if (!props) {\n            return;\n        }\n\n        this.getParent = props.getParent ?? this.getParent;\n    }\n\n    createTabster(\n        noRefCount?: boolean,\n        props?: Types.TabsterCoreProps\n    ): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        this._mergeProps(props);\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        win?.clearTimeout(this._initTimer);\n        delete this._initTimer;\n        this._initQueue = [];\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n        this.restorer?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        this._dummyObserver.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n\n    queueInit(callback: () => void): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._initQueue.push(callback);\n\n        if (!this._initTimer) {\n            this._initTimer = this._win?.setTimeout(() => {\n                delete this._initTimer;\n                this.drainInitQueue();\n            }, 0);\n        }\n    }\n\n    drainInitQueue(): void {\n        if (!this._win) {\n            return;\n        }\n\n        const queue = this._initQueue;\n        // Resetting the queue before calling the callbacks to avoid recursion.\n        this._initQueue = [];\n        queue.forEach((callback) => callback());\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster(false, props);\n    }\n\n    tabster = new TabsterCore(win, props);\n\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\nexport function getShadowDOMAPI(): Types.DOMAPI {\n    return shadowDOMAPI;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n * @param alwaysAccessibleSelector When Modalizer is active, we put\n * aria-hidden to everything else to hide it from screen readers. This CSS\n * selector allows to exclude some elements from this behaviour. For example,\n * this could be used to exclude aria-live region with the application-wide\n * status announcements.\n * @param accessibleCheck An optional callback that will be called when\n * active Modalizer wants to hide an element that doesn't belong to it from\n * the screen readers by setting aria-hidden. Similar to alwaysAccessibleSelector\n * but allows to address the elements programmatically rather than with a selector.\n * If the callback returns true, the element will not receive aria-hidden.\n */\nexport function getModalizer(\n    tabster: Types.Tabster,\n    // @deprecated use accessibleCheck.\n    alwaysAccessibleSelector?: string,\n    accessibleCheck?: Types.ModalizerElementAccessibleCheck\n): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(\n            tabsterCore,\n            alwaysAccessibleSelector,\n            accessibleCheck\n        );\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function getRestorer(tabster: Types.Tabster): Types.RestorerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.restorer) {\n        tabsterCore.restorer = new RestorerAPI(tabsterCore);\n    }\n\n    return tabsterCore.restorer;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport interface HTMLElementWithTabsterFlags extends HTMLElement {\n    __tabsterElementFlags?: {\n        /**\n         * @deprecated This option is added to support interop between Fluent UI V9 and Fluent UI V8.\n         * Once Fluent UI V8 is not supported anymore, this option should be removed.\n         */\n        noDirectAriaHidden?: boolean; // When Modalizer sets aria-hidden on everything outside of the modal,\n        // do not set aria-hidden directly on this element, go inside and check its children,\n        // and set aria-hidden on the children. This is to be set on a container that hosts\n        // elements which have the active modal dialog as virtual parent.\n    };\n}\n\nexport interface TabsterDOMAttribute {\n    [TABSTER_ATTRIBUTE_NAME]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n    /**\n     * A callback that will be called for the uncontrolled areas when Tabster wants\n     * to know is the uncontrolled element wants complete control (for example it\n     * is trapping focus) and Tabster should not interfere with handling Tab.\n     * If the callback returns undefined, then the default behaviour is to return\n     * the uncontrolled.completely value from the element. If the callback returns\n     * non-undefined value, the callback's value will dominate the element's\n     * uncontrolled.completely value.\n     */\n    checkUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean // A uncontrolled.completely value from the element.\n    ) => boolean | undefined;\n    /**\n     * @deprecated use checkUncontrolledCompletely.\n     */\n    checkUncontrolledTrappingFocus?: (element: HTMLElement) => boolean;\n    /**\n     * Custom getter for parent elements. Defaults to the default .parentElement call\n     * Currently only used to detect tabster contexts\n     */\n    getParent?(el: Node): Node | null;\n    /**\n     * Ability to redefine all DOM API calls used by Tabster. For example, for\n     * ShadowDOM support.\n     */\n    DOMAPI?: Partial<DOMAPI>;\n}\n\nexport interface DOMAPI {\n    createMutationObserver: (callback: MutationCallback) => MutationObserver;\n    createTreeWalker(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ): TreeWalker;\n    getParentNode(node: Node | null | undefined): ParentNode | null;\n    getParentElement(\n        element: HTMLElement | null | undefined\n    ): HTMLElement | null;\n    nodeContains(\n        parent: Node | null | undefined,\n        child: Node | null | undefined\n    ): boolean;\n    getActiveElement(doc: Document): Element | null;\n    querySelector(element: ParentNode, selector: string): Element | null;\n    querySelectorAll(element: ParentNode, selector: string): Element[];\n    getElementById(doc: Document, id: string): HTMLElement | null;\n    getFirstChild(node: Node | null | undefined): ChildNode | null;\n    getLastChild(node: Node | null | undefined): ChildNode | null;\n    getNextSibling(node: Node | null | undefined): ChildNode | null;\n    getPreviousSibling(node: Node | null | undefined): ChildNode | null;\n    getFirstElementChild(element: Element | null | undefined): Element | null;\n    getLastElementChild(element: Element | null | undefined): Element | null;\n    getNextElementSibling(element: Element | null | undefined): Element | null;\n    getPreviousElementSibling(\n        element: Element | null | undefined\n    ): Element | null;\n    appendChild(parent: Node, child: Node): Node;\n    insertBefore(parent: Node, child: Node, referenceChild: Node | null): Node;\n    getSelection(ref: Node): Selection | null;\n    getElementsByName(\n        referenceElement: HTMLElement,\n        name: string\n    ): NodeListOf<HTMLElement>;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    detail: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetail {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nimport { AsyncFocusSources as _AsyncFocusSources } from \"./Consts\";\nexport type AsyncFocusSources = typeof _AsyncFocusSources;\n\nexport type AsyncFocusSource = AsyncFocusSources[keyof AsyncFocusSources];\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetail>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n    /**\n     * When Tabster wants to move focus asynchronously, it it should call this method to register its intent.\n     * This is a way to avoid conflicts between different parts that might want to move focus asynchronously\n     * at the same moment (for example when both Deloser and Restorer want to move focus when the focused element\n     * is removed from DOM).\n     */\n    /** @internal */\n    requestAsyncFocus(\n        source: AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void;\n    /** @internal */\n    cancelAsyncFocus(source: AsyncFocusSource): void;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        reference?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccessibility;\n}\n\nimport { ObservedElementAccessibilities as _ObservedElementAccessibilities } from \"./Consts\";\nexport type ObservedElementAccessibilities =\n    typeof _ObservedElementAccessibilities;\n\nexport type ObservedElementAccessibility =\n    ObservedElementAccessibilities[keyof ObservedElementAccessibilities];\n\nimport { ObservedElementRequestStatuses as _ObservedElementRequestStatuses } from \"./Consts\";\nexport type ObservedElementRequestStatuses =\n    typeof _ObservedElementRequestStatuses;\n\nexport type ObservedElementRequestStatus =\n    ObservedElementRequestStatuses[keyof ObservedElementRequestStatuses];\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n    status?: ObservedElementRequestStatus; // Making status optional for the interface backwards compatibility.\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetail>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nimport { RestoreFocusOrders as _RestoreFocusOrders } from \"./Consts\";\nexport type RestoreFocusOrders = typeof _RestoreFocusOrders;\n\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\n\nimport { DeloserStrategies as _DeloserStrategies } from \"./Consts\";\nexport type DeloserStrategies = typeof _DeloserStrategies;\n\nexport type DeloserStrategy = DeloserStrategies[keyof DeloserStrategies];\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n    strategy?: DeloserStrategy;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    readonly strategy: DeloserStrategy;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface RadioButtonGroup {\n    name: string;\n    buttons: Set<HTMLInputElement>;\n    checked?: HTMLInputElement;\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    foundBackward?: HTMLElement;\n    rejectElementsFrom?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    hasCustomCondition?: boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    cachedRadioGroups: {\n        [name: string]: RadioButtonGroup;\n    };\n    isFindAll?: boolean;\n    /**\n     * A flag that indicates that some focusable elements were skipped\n     * during the search and the found element is not the one the browser\n     * would normally focus if the user pressed Tab.\n     */\n    skippedFocusable?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * See `referenceElement` of GetTabsterContextOptions for description.\n     */\n    referenceElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport interface FindFocusableOutputProps {\n    /**\n     * An output parameter. Will be true after the findNext/findPrev() call if some focusable\n     * elements were skipped during the search and the result element not immediately next\n     * focusable after the currentElement.\n     */\n    outOfDOMOrder?: boolean;\n    /**\n     * An output parameter. Will be true if the found element is uncontrolled.\n     */\n    uncontrolled?: HTMLElement | null;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"referenceElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findLast(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findNext(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findPrev(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findDefault(\n        options: FindDefaultProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(\n        options: FindFocusableProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ) => void;\n}\n\nimport { Visibilities as _Visibilities } from \"./Consts\";\nexport type Visibilities = typeof _Visibilities;\n\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nimport { RestorerTypes as _RestorerTypes } from \"./Consts\";\nexport type RestorerTypes = typeof _RestorerTypes;\n\nexport type RestorerType = RestorerTypes[keyof RestorerTypes];\n\nimport { MoverDirections as _MoverDirections } from \"./Consts\";\nexport type MoverDirections = typeof _MoverDirections;\n\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport interface NextTabbable {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement | null;\n    outOfDOMOrder?: boolean;\n}\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus. True by default.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(\n        element: HTMLElement,\n        props: MoverProps,\n        sys: SysProps | undefined\n    ): Mover;\n}\n\nimport { MoverKeys as _MoverKeys } from \"./Consts\";\nexport type MoverKeys = typeof _MoverKeys;\n\nexport type MoverKey = MoverKeys[keyof MoverKeys];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(fromElement: HTMLElement, key: MoverKey): HTMLElement | null;\n}\n\nimport { GroupperTabbabilities as _GroupperTabbabilities } from \"./Consts\";\nexport type GroupperTabbabilities = typeof _GroupperTabbabilities;\n\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(\n        element: HTMLElement,\n        props: GroupperProps,\n        sys: SysProps | undefined\n    ): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void;\n}\n\nimport { GroupperMoveFocusActions as _GroupperMoveFocusActions } from \"./Consts\";\nexport type GroupperMoveFocusActions = typeof _GroupperMoveFocusActions;\n\nexport type GroupperMoveFocusAction =\n    GroupperMoveFocusActions[keyof GroupperMoveFocusActions];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(\n        element: HTMLElement,\n        action: GroupperMoveFocusAction\n    ): HTMLElement | null;\n}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nimport { SysDummyInputsPositions as _SysDummyInputsPositions } from \"./Consts\";\nexport type SysDummyInputsPositions = typeof _SysDummyInputsPositions;\n\nexport type SysDummyInputsPosition =\n    SysDummyInputsPositions[keyof SysDummyInputsPositions];\n\n/**\n * Ability to fine-tune Tabster internal behaviour in rare cases of need.\n * Normally, should not be used. A deep understanding of the intention and the effect\n * is required.\n */\nexport interface SysProps {\n    /**\n     * Force dummy input position outside or inside of the element.\n     * By default (when undefined), the position is determined dynamically\n     * (for example inside for <li> elements and outside for <table> elements,\n     * plus a default Groupper/Mover/Modalizer implementation position).\n     * Setting to true will force the dummy inputs to be always outside of the element,\n     * setting to false will force the dummy inputs to be always inside.\n     */\n    dummyInputsPosition?: SysDummyInputsPosition;\n}\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n    /**\n     * The element to start computing the context from. Useful when dealing\n     * with nested structures. For example, if we have an element inside a groupper\n     * inside another groupper, the `groupper` prop in this element's contexts will\n     * be the inner groupper, but when we pass the inner groupper's parent element\n     * as `referenceElement`, the context groupper will be the outer one. Having\n     * this option simplifies searching for the next tabbable element in the\n     * environment of nested movers and grouppers.\n     */\n    referenceElement?: HTMLElement;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    groupperBeforeMover?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    rtl?: boolean;\n    excludedFromMover?: boolean;\n    uncontrolled?: HTMLElement | null;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(\n        element: HTMLElement,\n        props: RootProps,\n        sys: SysProps | undefined\n    ): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {}\n\nexport interface UncontrolledAPI {\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean;\n}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakHTMLElement<HTMLElement>[];\n    /** @internal */\n    createModalizer(\n        element: HTMLElement,\n        props: ModalizerProps,\n        sys: SysProps | undefined\n    ): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n\n    /**\n     * Just activates the modalizer without focusing on any element. Might be useful,\n     * when the modalizer doesn't have focusable elements yet (but you want it active\n     * already).\n     *\n     * @param modalizerElementOrContainer The element that belongs to a Modalizer or the Modalizer container,\n     * or undefined to activate main app (deactivating any active modalizer).\n     * @returns true if the modalizer was activated.\n     */\n    activate(modalizerElementOrContainer: HTMLElement | undefined): boolean;\n}\n\ninterface RestorerAPIInternal {\n    /** @internal */\n    createRestorer(element: HTMLElement, props: RestorerProps): Restorer;\n}\n\nexport interface RestorerAPI extends RestorerAPIInternal, Disposable {}\n\nexport interface Restorer extends Disposable, TabsterPart<RestorerProps> {}\n/**\n * A signature for the accessibleCheck callback from getModalizer().\n * It is called when active Modalizer sets aria-hidden on elements outsidef of it.\n *\n * @param element The element that is about to receive aria-hidden.\n * @param activeModalizerElements The container elements of the active modalizer.\n * @returns true if the element should remain accessible and should not receive\n * aria-hidden.\n */\nexport type ModalizerElementAccessibleCheck = (\n    element: HTMLElement,\n    activeModalizerElements?: HTMLElement[]\n) => boolean;\n\nexport interface UncontrolledProps {\n    // Normally, even uncontrolled areas should not be completely uncontrolled\n    // to be able to interact with the rest of the application properly.\n    // For example, if an uncontrolled area implements something like\n    // roving tabindex, it should be uncontrolled inside the area, but it\n    // still should be able to be an organic part of the application.\n    // However, in some cases, third party component might want to be able\n    // to gain full control of the area, for example, if it implements\n    // some custom trap focus logic.\n    // `completely` indicates that uncontrolled area must gain full control over\n    // Tab handling. If not set, Tabster might still handle Tab in the\n    // uncontrolled area, when, for example, there is an inactive Modalizer\n    // (that needs to be skipped) after the last focusable element of the\n    // uncontrolled area.\n    // WARNING: Use with caution, as it might break the normal keyboard navigation\n    // between the uncontrolled area and the rest of the application.\n    completely?: boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface RestorerOnElement {\n    restorer: Restorer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: UncontrolledProps;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport interface SysOnElement {\n    sys: SysProps;\n}\n\nexport interface RestorerProps {\n    type: RestorerType;\n    id?: string;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledProps;\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n    sys: SysProps;\n    restorer: RestorerProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement &\n        SysOnElement &\n        RestorerOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\nexport interface DummyInputObserver {\n    add(dummy: HTMLElement, callback: () => void): void;\n    remove(dummy: HTMLElement): void;\n    dispose(): void;\n    domChanged?(parent: HTMLElement): void;\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n    /** @internal */\n    restorer?: RestorerAPI;\n\n    /** @internal */\n    _dummyObserver: DummyInputObserver;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean, props?: TabsterCoreProps): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n\n    /** @internal */\n    queueInit(callback: () => void): void;\n    /** @internal */\n    drainInitQueue(): void;\n    /** @internal */\n    getParent: (el: Node) => Node | null;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport interface TabsterMoveFocusEventDetail {\n    by: \"mover\" | \"groupper\" | \"modalizer\" | \"root\" | \"deloser\";\n    owner: HTMLElement; // Mover, Groupper, Modalizer or Root, the initiator.\n    next: HTMLElement | null; // Next element to focus or null if Tabster wants to go outside of Root (i.e. to the address bar of the browser).\n    relatedEvent?: KeyboardEvent; // The original keyboard event that triggered the move.\n}\n\nexport interface MoverMoveFocusEventDetail {\n    key: Types.MoverKey;\n}\n\nexport interface MoverMemorizedElementEventDetail {\n    memorizedElement: HTMLElement | undefined;\n}\n\nexport interface GroupperMoveFocusEventDetail {\n    action: Types.GroupperMoveFocusAction;\n}\n\nexport interface ModalizerEventDetail {\n    id: string;\n    element: HTMLElement;\n}\n\nexport interface RootFocusEventDetail {\n    element: HTMLElement;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { GroupperMoveFocusAction, MoverKey } from \"./Types\";\nimport {\n    GroupperMoveFocusEvent,\n    MoverMoveFocusEvent,\n    MoverMemorizedElementEvent,\n} from \"./Events\";\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new GroupperMoveFocusEvent(...)). */\nexport function dispatchGroupperMoveFocusEvent(\n    target: HTMLElement,\n    action: GroupperMoveFocusAction\n) {\n    return target.dispatchEvent(new GroupperMoveFocusEvent({ action }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMoveFocusEvent(...)). */\nexport function dispatchMoverMoveFocusEvent(\n    target: HTMLElement,\n    key: MoverKey\n) {\n    return target.dispatchEvent(new MoverMoveFocusEvent({ key }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMemorizedElementEvent(...)). */\nexport function dispatchMoverMemorizedElementEvent(\n    target: HTMLElement,\n    memorizedElement: HTMLElement | undefined\n) {\n    return target.dispatchEvent(\n        new MoverMemorizedElementEvent({ memorizedElement })\n    );\n}\n"],"names":["TABSTER_ATTRIBUTE_NAME","TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME","FOCUSABLE_SELECTOR","join","AsyncFocusSources","EscapeGroupper","Restorer","Deloser","ObservedElementAccessibilities","Any","Accessible","Focusable","ObservedElementRequestStatuses","Waiting","Succeeded","Canceled","TimedOut","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","DeloserStrategies","Auto","Manual","Visibilities","Invisible","PartiallyVisible","Visible","RestorerTypes","Source","Target","MoverDirections","Both","Vertical","Horizontal","Grid","GridLinear","MoverKeys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","PageUp","PageDown","Home","End","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","GroupperMoveFocusActions","Enter","Escape","SysDummyInputsPositions","Inside","Outside","getTabsterOnElement","tabster","element","_a","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","_b","newTabsterProps","key","Object","keys","root","onRoot","part","observedElement","onObservedElementUpdate","sys","deloser","setProps","createDeloser","createRoot","modalizer","createModalizer","restorer","createRestorer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","TabsterFocusInEventName","TabsterFocusOutEventName","TabsterMoveFocusEventName","DeloserFocusLostEventName","DeloserRestoreFocusEventName","ModalizerActiveEventName","ModalizerInactiveEventName","ModalizerFocusInEventName","ModalizerFocusOutEventName","MoverStateEventName","MoverMoveFocusEventName","MoverMemorizedElementEventName","GroupperMoveFocusEventName","RestorerRestoreFocusEventName","RootFocusEventName","RootBlurEventName","CustomEvent_","CustomEvent","TabsterCustomEvent","constructor","type","detail","bubbles","cancelable","composed","details","TabsterFocusInEvent","TabsterFocusOutEvent","TabsterMoveFocusEvent","MoverStateEvent","MoverMoveFocusEvent","MoverMemorizedElementEvent","GroupperMoveFocusEvent","ModalizerActiveEvent","ModalizerInactiveEvent","DeloserFocusLostEvent","DeloserRestoreFocusEvent","RestorerRestoreFocusEvent","RootFocusEvent","RootBlurEvent","_createMutationObserver","callback","MutationObserver","_createTreeWalker","doc","whatToShow","filter","createTreeWalker","_getParentNode","node","parentNode","_getParentElement","parentElement","_nodeContains","parent","child","contains","_getActiveElement","activeElement","_querySelector","selector","querySelector","_querySelectorAll","Array","prototype","slice","call","querySelectorAll","_getElementById","id","getElementById","_getFirstChild","firstChild","_getLastChild","lastChild","_getNextSibling","nextSibling","_getPreviousSibling","previousSibling","_getFirstElementChild","firstElementChild","_getLastElementChild","lastElementChild","_getNextElementSibling","nextElementSibling","_getPreviousElementSibling","previousElementSibling","_appendChild","appendChild","_insertBefore","referenceChild","insertBefore","_getSelection","ref","ownerDocument","getSelection","_getElementsByName","referenceElement","name","getElementsByName","dom","createMutationObserver","getParentNode","getParentElement","nodeContains","getActiveElement","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","getFirstElementChild","getLastElementChild","getNextElementSibling","getPreviousElementSibling","setDOMAPI","domapi","_isBrokenIE11","_DOMRect","DOMRect","x","y","width","height","left","top","right","bottom","_uidCounter","document","NodeFilter","SHOW_ELEMENT","_updateDummyInputsTimeout","getInstanceContext","getWindow","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","hasSubFocusable","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","WeakHTMLElement","data","context","push","_ref","_data","get","getData","cleanupFakeWeakRefs","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","tolerance","container","getScrollableContainer","containerRect","elementRect","intersectionTolerance","topIntersection","bottomIntersection","totalIntersection","scrollIntoView","alignToTop","scrollTop","el","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","wel","body","matchesSelector","matches","msMatchesSelector","webkitMatchesSelector","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","getElement","getProps","DummyInput","isOutside","fixedTarget","_focusIn","_fixedTarget","nativeFocus","input","onFocusIn","relatedTarget","_isBackward","_focusOut","useDefaultAction","onFocusOut","createElement","tabIndex","setAttribute","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","DummyInputManager","priority","outsideByDefault","callForDefaultAction","_instance","DummyInputManagerCore","_setHandlers","_onFocusIn","_onFocusOut","moveOut","backwards","moveOutWithDefaultAction","relatedEvent","getHandler","setTabbable","tabbable","moveWithPhantomDummy","moveOutOfElement","isBackward","dummy","tagName","isFocusable","potentialDummy","dummyFor","getDummyInputContainer","dispatchEvent","by","owner","next","addPhantomDummyWithTarget","sourceElement","targetElement","dummyParent","setDummyInputDebugValue","wrappers","what","map","w","DummyInputObserver","_updateQueue","Set","_lastUpdateQueueTime","_changedParents","WeakSet","_dummyElements","_dummyCallbacks","_domChanged","has","add","_updateDummyInputsTimer","_win","dummyElement","set","domChanged","remove","delete","_updateTimer","clear","updatePositions","compute","_scheduledUpdatePositions","scrollTopLeftCache","Map","setTopLeftCallbacks","manager","_wrappers","_isOutside","_transformElements","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","_ensurePosition","firstInput","lastInput","toFocus","wrapper","_getCurrent","_addDummyInputs","_addTimer","_getWindow","_addTransformOffsets","_dummyObserver","_computeTransformOffsets","from","transformElements","newTransformElements","scrollLeft","scrollTopLeft","transform","getComputedStyle","_callForDefaultAction","instance","__tabsterDummy","forcedDummyPosition","dummyInputsPosition","force","_c","_d","sort","a","b","firstDummyInput","lastDummyInput","elementParent","getAdjacentElement","prev","cur","adjacent","augmentAttribute","value","ret","aug","origVal","removeAttribute","origValue","isDisplayNone","elementDocument","computedStyle","defaultView","offsetParent","visibility","display","isRadio","getRadioButtonGroup","radioButtons","checked","buttons","getTabsterAttribute","plain","stringify","mergeTabsterProps","newProps","setTabsterAttribute","update","_setInformativeStyle","weakElement","removeProperty","RootDummyManager","setFocused","_onDummyInputFocus","_setFocused","keyboardNavigation","setNavigatingWithKeyboard","focusedElement","getFirstOrLastTabbable","ignoreAccessibility","blur","onDispose","_isFocused","hasFocused","_setFocusedTimer","_dummyManager","event","getParent","rootElement","curElement","composedPath","_onDispose","_sys","controlTab","rootDummyInputs","addDummyInputs","KEYBORG_FOCUSIN","KEYBORG_FOCUSOUT","_add","_remove","dummyManager","RootAPI","autoRoot","_autoRootWaiting","_roots","_forceDummy","rootById","_autoRootCreate","_autoRootUnwait","_autoRoot","_onRootDispose","queueInit","forEach","rootId","newRoot","roots","getRootByUId","__tabsterInstance","getTabsterContext","options","checkRtl","drainInitQueue","excludedFromMover","groupperBeforeMover","modalizerInGroupper","dirRightToLeft","ignoreKeydown","dir","toLowerCase","isVisible","excludeFromMover","curModalizer","curGroupper","curMover","isActive","tabbability","userId","activeId","assign","rootAPI","shouldIgnoreKeydown","rtl","getRoot","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","deloserElement","focus","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","_history","getLength","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","splice","skip","result","resetQueue","DeloserHistory","process","DeloserAPI","getDeloser","historyByRoot","make","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","elementId","replace","className","split","cls","trim","index","buildSelector","DOCUMENT_FRAGMENT_NODE","isBody","_isActive","_snapshotIndex","setSnapshot","focusFirst","focusDefault","clearHistory","preserveExisting","we","strategy","setActive","active","getActions","pop","restoreFocusOrder","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","noSelectorCheck","els","isNavigatingWithKeyboard","findFirst","useActiveModalizer","_inDeloser","_isRestoringFocus","_isPaused","_onRestoreFocus","stopImmediatePropagation","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","_onDeloserDispose","subscribe","autoDeloser","_autoDeloser","_autoDeloserInstance","unsubscribe","_curDeloser","getFocusedElement","pause","resume","restore","curDeloser","restoreFocus","lastFocused","getLastFocusedElement","isManual","curDeloserElement","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","Subscribable","_callbacks","_val","callbacks","indexOf","subscribeFirst","setVal","val","_callCallbacks","getVal","trigger","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","_inProgress","_isDone","_isSelfResponding","_sentCount","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","isResponse","timestamp","sentto","endData","end","_send","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","accessibility","getElementData","getDeloserUID","dataOut","isWaitElementResolved","isForwardResolved","isResolved","waitElement","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_isDefaultSendUp","isSetUp","_onMessage","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_onPageHide","_dead","_onBrowserMessage","source","postMessage","setup","setSendUp","_ping","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","focusByObservedName","elementData","_lastRequestFocusId","requestFocus","requestId","CrossOriginAPI","_init","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","FocusableAPI","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","isAugmented","out","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","isFindAll","currentElement","modalizerId","onElement","elements","hasCustomCondition","acceptElementState","modalizerUserId","cachedGrouppers","cachedRadioGroups","walker","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","foundBackward","fromCtx","outOfDOMOrder","currentNode","FILTER_ACCEPT","skippedFocusable","previousNode","nextNode","FILTER_SKIP","FILTER_REJECT","rejectElementsFrom","currentCtx","fromMover","acceptElement","groupperElement","fromMoverElement","moverElement","radioGroupName","radioGroup","Keys","Tab","Space","getUncontrolledCompletelyContainer","uncontrolledOnElement","isUncontrolledCompletely","completely","AsyncFocusIntentPriorityBySource","FocusedElementState","_onKeyDown","_setFocusedElement","_onChanged","originalEvent","_validateFocusedElement","ctrlKey","contentEditable","shiftKey","findNextTabbable","nextElement","uncontrolledCompletelyContainer","nextUncontrolled","preventDefault","_lastVal","lastCtx","asyncFocus","_asyncFocus","_lastResetElement","_nextVal","forgetMemorized","preventScroll","_focusFirstOrLast","focusLast","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","requestAsyncFocus","delay","currentAsyncFocus","cancelAsyncFocus","lastResetElement","nextVal","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","parentCtx","currentScopeElement","newCurrent","findProps","findPropsOut","GroupperDummyManager","_shouldTabInside","makeTabbable","_first","currentIsDummy","groupperFirstFocusable","getFirst","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","parentCtxGroupper","parentGroupper","parentGroupperElement","getIsActive","GroupperAPI","_current","_grouppers","_onMouseDown","_onMoveFocus","_onGroupperDispose","_updateCurrent","altKey","metaKey","handleKeyPress","action","defaultPrevented","_enterGroupper","_escapeGroupper","groupperId","newGroupper","forgetCurrentGrouppers","newIds","delegated","fromModalizer","moveFocus","KeyboardNavigationState","_onChange","_keyborg","createKeyborg","disposeKeyborg","_wasFocusedCounter","_ariaHidden","internalId","wasFocused","ModalizerDummyManager","dummyContainer","activeElements","_wasFocused","_activeElements","makeActive","_dispatchEvent","noIncrement","modalizerElement","isTrapped","allElements","eventDetail","ModalizerAPI","alwaysAccessibleSelector","accessibleCheck","_onModalizerDispose","_parts","_modalizers","activationHistory","_activationHistory","cleanActivationHistory","prevHistoryItem","modalizerUserIdFromHistory","prevActiveId","prevActive","values","focusedSince","m","f","augmentedMap","_augMap","tabsterOnFocusedElement","modalizerOnFocusedElement","parentModalizer","currentIsOthersAccessible","isOthersAccessible","isAlwaysAccessible","_restoreModalizerFocusTimer","_restoreModalizerFocus","_aug","_alwaysAccessibleSelector","_accessibleCheck","_hiddenUpdateTimer","hiddenUpdate","_hiddenUpdate","elementFromModalizer","noFocusFirst","noFocusDefault","modalizerRoot","isNoFocusFirst","isNoFocusDefault","activate","modalizerElementOrContainer","modalizerToActivate","currentModalizer","parts","visibleElements","hiddenElements","alwaysAccessibleElements","activeModalizerElements","modalizerParts","allVisibleElements","newAugmented","newAugmentedMap","toggle","hide","walk","containsModalizer","containedByModalizer","elParent","__tabsterElementFlags","noDirectAriaHidden","outsideElement","focusedElementModalizer","DOCUMENT_POSITION_PRECEDING","_inputSelector","MoverDummyManager","getMemorized","_onFocusDummyInput","memorized","_getMemorized","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","_visible","_onIntersection","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","getState","visibilityTolerance","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","threshold","_observeState","memorizeCurrent","disconnect","_allElements","_unobserve","_setCurrentTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","hasDefault","tabsterFocusable","updateQueue","observer","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","observe","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","childList","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_onMemorizedElement","_onMoverDispose","_movers","currentFocusableElement","deepestFocusableElement","_ignoredInputTimer","_ignoredInputResolve","moverKey","_isIgnoredInput","_moveFocus","memorizedElement","moverId","newMover","fromElement","moverProps","direction","isBoth","isVertical","isHorizontal","isGridLinear","isGrid","isCyclic","cyclic","scrollIntoViewArg","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","nextElementX1","nextElementX2","firstColumnX1","lastColumnX1","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","selectionStart","selectionEnd","textLength","asyncRet","selection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","len","stop","observeMutations","syncState","onMutation","removedNode","updateTabsterElements","_e","processNode","_conditionCheckTimeout","ObservedElementAPI","_waiting","_observedById","_observedByName","_currentRequestTimestamp","_currentRequest","delta","settleTime","cancel","info","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_waitConditional","_rejectWaiting","shouldResolve","conditionTimer","o","status","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_isVisible","_allOutlineElements","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","_isUncontrolledCompletely","_hasFocus","_stack","DEPTH","shift","maybeElement","RestorerAPI","_focusedElementState","sourceId","_restoreFocus","tabsterAttribute","_keyboardNavState","getId","shadowRoot","otherNode","assignedElements","assignedSlot","host","sibling","tmp","ShadowTreeWalker","_walkerStack","_currentSetFor","_acceptNode","_doc","SHOW_ALL","_currentNode","walkers","curNode","currentWalkerCurrentNode","nodeResult","currentWalker","createShadowTreeWalker","ShadowMutationObserver","_overrideAttachShadow","origAttachShadow","Element","attachShadow","__origAttachShadow","shadowObserver","_shadowObservers","_addSubObserver","_isObserving","_callbackWrapper","_walkShadows","_callback","_observer","_subObservers","_options","_root","subObserver","DOCUMENT_NODE","takeRecords","records","createShadowMutationObserver","shadowQuerySelector","n","Tabster","core","TabsterCore","_forgetMemorizedElements","_initQueue","_version","__VERSION__","_storage","DOMAPI","checkUncontrolledCompletely","checkUncontrolledTrappingFocus","internal","stopObserver","resumeObserver","_mergeProps","createTabster","noRefCount","disposeTabster","allInstances","size","_initTimer","_forgetMemorizedTimer","_f","_g","_h","addremove","storage","forceCleanup","queue","tabsterCore","getCurrentTabster","getTabster","getShadowDOMAPI","shadowDOMAPI","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","getRestorer","makeNoOp","noop","isNoOp","dispatchGroupperMoveFocusEvent","dispatchMoverMoveFocusEvent","dispatchMoverMemorizedElementEvent"],"mappings":"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"}